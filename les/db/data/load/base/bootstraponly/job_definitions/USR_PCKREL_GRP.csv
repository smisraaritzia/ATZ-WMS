job_id,role_id,name,enabled,type,command,log_file,trace_level,overlap,schedule,start_delay,timer,grp_nam
USR_PCKREL_GRP,,Aritzia Pick Release Job Group,0,timer,"/* USR_PCKREL adjusted for src_wrk_zon_id and AIR oprcods
   COMMENT OUT ACCP CODE
   {
   [select ordnum,
   nottxt,
   to_char((row_number() over(partition by ordnum
   order by ordnum) *10), '000') notlin
   from (select distinct o.ordnum,
   case when substr(ol.prtnum, 1, 5) = '79825' then 'RELIEF DONATE PACKAGE ENGLISH'
   when substr(ol.prtnum, 1, 5) = '79826' then 'RELIEF DONATE PACKAGE FRENCH'
   when substr(ol.prtnum, 1, 5) = '79927' then 'RELIEF SPONSOR PACKAGE'
   when substr(ol.prtnum, 1, 5) = '79928' then 'RELIEF SPONSOR PACKAGE'
   else ''
   end nottxt
   from ord o
   inner
   join ord_line ol
   on o.ordnum = ol.ordnum
   left outer
   join ord_note ont
   on o.ordnum = ont.ordnum
   and o.client_id = ont.client_id
   and o.wh_id = ont.wh_id
   and ont.nottyp = 'PAK'
   where substr(ol.prtnum, 1, 5) in ('79825', '79826', '79927', '79928')
   and ont.nottxt is null
   group by o.ordnum,
   ol.prtnum) usr
   order by ordnum] catch(-1403)
   |
   if (@? = 0)
   {
   [insert
   into ord_note(client_id, ordnum, nottyp, notlin, wh_id, nottxt, edtflg, u_version, ins_dt, last_upd_dt, ins_user_id, last_upd_user_id)
   values ('----', @ordnum, 'PAK', @notlin, 'DC01', @nottxt, '1', '1', sysdate, sysdate, 'USR_SYSJOB', 'USR_SYSJOB')] catch(-1403)
   }
   };
   commit;
   {
   [select sl.ship_line_id,
   sl.ordnum,
   sl.ordlin,
   sl.prtnum,
   substr(sl.prtnum, 1, 5) generic,
   sl.pckgr1
   from shipment_line sl
   inner
   join ord o
   on sl.ordnum = o.ordnum
   and sl.client_id = o.client_id
   and sl.wh_id = o.wh_id
   where o.ordtyp in ('E01', 'E05', 'P01', 'P05', 'I01', 'I05', 'S01', 'S05', 'S09')
   and substr(sl.prtnum, 1, 5) in ('79825', '79826', '79927', '79928')] catch(-1403)
   |
   if (@? = 0)
   {
   [update shipment_line
   set pckgr1 = @generic
   where ship_line_id = @ship_line_id
   and ordnum = @ordnum
   and prtnum = @prtnum
   and ordlin = @ordlin] catch(-1403)
   }
   };
   commit;
 */
job pick release manager;
commit;
list warehouses
|
process pick list rules
 where wh_id = @wh_id;
commit;
list warehouses
|
process pick list release
 where wh_id = @wh_id;
commit;

/* BULK CASE PICK INDIVIDUALIZATION */
{
    [select reqnum,
            wrkref old_wrkref,
            lblbat
       from wrkque
      where oprcod = 'ATZ_BCPK'
        and wrksts = 'SUSP'
        and ack_usr_id is null
        and ackdevcod is null] catch(-1403)
    |
    if (@? = 0 and @old_wrkref)
    {
        [select pwh.wrkref old_wrkref,
                pwh.wrktyp,
                pwh.pckqty,
                pwh.appqty,
                pwh.prtnum,
                pwh.ftpcod,
                pfd.untqty csqty
           from pckwrk_hdr pwh
          inner
           join prtftp_dtl pfd
             on pwh.prtnum = pfd.prtnum
            and pwh.wh_id = pfd.wh_id
            and pwh.ftpcod = pfd.ftpcod
            and pfd.uomcod = 'CS'
          where pwh.wrkref = @old_wrkref
            and pwh.lblbat = @lblbat
            and pwh.appqty = 0
            and pwh.pcksts = 'R'
            and pwh.wrktyp = 'B'] catch(-1403)
        |
        if (@? = 0)
        {
            [select count(*) wrkcnt,
                    mod(@pckqty, @csqty) divchk
               from pckwrk_dtl
              where wrkref = @old_wrkref
                and wrktyp = @wrktyp]
            |
            if (@wrkcnt = @pckqty and @pckqty <> @csqty and @divchk = 0)
            {
                do loop
                 where count = (@pckqty / @csqty) - 1
                |
                {
                    {
                        generate next number
                         where numcod = 'wrkref'
                        |
                        publish data
                         where new_wrkref = @nxtnum
                        |
                        [select *
                           from pckwrk_hdr
                          where wrkref = @old_wrkref]
                        |
                        [insert
                           into pckwrk_hdr(wrkref, wrktyp, schbat, srcloc, srcare, client_id, wh_id, lblbat, lblseq, devcod, oprcod, pck_mthd_id, pckqty, pck_catch_qty, appqty, app_catch_qty, pcksts, prtnum, prt_client_id, orgcod, revlvl, lotnum, asset_slot, sup_lotnum, invsts, invsts_prg, lodlvl, loducc, lodtag, lodnum, untcas, untpak, ftpcod, ctncod, ctnnum, ctnseg, pos_id, visflg, splflg, locflg, lodflg, subflg, dtlflg, prtflg, orgflg, revflg, lotflg, sup_lot_flg, qtyflg, catch_qty_flg, adddte, pckdte, cmpdte, refloc, ackdevcod, pipflg, frsflg, clst_seq, min_shelf_hrs, prtdte, list_grp_id, list_id, list_seqnum, est_time, lm_assign_num, lm_assign_seqnum, skip_cnt, pallet_pos, pallet_id, pallet_load_seq, rttn_id, rttn_id_flg, unassign_flg, asset_typ, supnum, supflg, unique_pallet_id, palctlsts, start_pal_flg, list_conf_flg, pck_uom, assign_grp, lock_flg, abs_ordinv_dte, thresh_pck_flg, pck_to_id, last_pck_usr_id, sp_hand_flg, rule_nam, mandte, expire_dte, mandte_flg, expire_dte_flg, palctl_split_flg, attr_str1_flg, attr_str2_flg, attr_str3_flg, attr_str4_flg, attr_str5_flg, attr_str6_flg, attr_str7_flg, attr_str8_flg, attr_str9_flg, attr_str10_flg, attr_str11_flg, attr_str12_flg, attr_str13_flg, attr_str14_flg, attr_str15_flg, attr_str16_flg, attr_str17_flg, attr_str18_flg, attr_int1_flg, attr_int2_flg, attr_int3_flg, attr_int4_flg, attr_int5_flg, attr_flt1_flg, attr_flt2_flg, attr_flt3_flg, attr_dte1_flg, attr_dte2_flg, inv_attr_str1, inv_attr_str2, inv_attr_str3, inv_attr_str4, inv_attr_str5, inv_attr_str6, inv_attr_str7, inv_attr_str8, inv_attr_str9, inv_attr_str10, inv_attr_str11, inv_attr_str12, inv_attr_str13, inv_attr_str14, inv_attr_str15, inv_attr_str16, inv_attr_str17, inv_attr_str18, inv_attr_int1, inv_attr_int2, inv_attr_int3, inv_attr_int4, inv_attr_int5, inv_attr_flt1, inv_attr_flt2, inv_attr_flt3, inv_attr_dte1, inv_attr_dte2, wcs_pck_grp, wcs_reported_dt, pend_can_pcksts, pend_can_req_dt, cstms_typ, cstms_typ_flg, pip_counter, ins_dt, last_upd_dt, ins_user_id, last_upd_user_id, ack_to_id)
                         values (@new_wrkref, @wrktyp, @schbat, @srcloc, @srcare, @client_id, @wh_id, @lblbat, @lblseq, @devcod, @oprcod, @pck_mthd_id, @csqty, @pck_catch_qty, @appqty, @app_catch_qty, @pcksts, @prtnum, @prt_client_id, @orgcod, @revlvl, @lotnum, @asset_slot, @sup_lotnum, @invsts, @invsts_prg, @lodlvl, @loducc, @lodtag, @lodnum, @untcas, @untpak, @ftpcod, @ctncod, @ctnnum, @ctnseg, @pos_id, @visflg, @splflg, @locflg, @lodflg, @subflg, @dtlflg, @prtflg, @orgflg, @revflg, @lotflg, @sup_lot_flg, @qtyflg, @catch_qty_flg, to_date(@adddte, 'YYYYMMDDHH24MISS'), @pckdte, @cmpdte, @refloc, @ackdevcod, @pipflg, @frsflg, @clst_seq, @min_shelf_hrs, @prtdte, @list_grp_id, @list_id, @list_seqnum, @est_time, @lm_assign_num, @lm_assign_seqnum, @skip_cnt, @pallet_pos, @pallet_id, @pallet_load_seq, @rttn_id, @rttn_id_flg, @unassign_flg, @asset_typ, @supnum, @supflg, @unique_pallet_id, @palctlsts, @start_pal_flg, @list_conf_flg, @pck_uom, @assign_grp, @lock_flg, @abs_ordinv_dte, @thresh_pck_flg, @pck_to_id, @last_pck_usr_id, @sp_hand_flg, @rule_nam, @mandte, @expire_dte, @mandte_flg, @expire_dte_flg, @palctl_split_flg, @attr_str1_flg, @attr_str2_flg, @attr_str3_flg, @attr_str4_flg, @attr_str5_flg, @attr_str6_flg, @attr_str7_flg, @attr_str8_flg, @attr_str9_flg, @attr_str10_flg, @attr_str11_flg, @attr_str12_flg, @attr_str13_flg, @attr_str14_flg, @attr_str15_flg, @attr_str16_flg, @attr_str17_flg, @attr_str18_flg, @attr_int1_flg, @attr_int2_flg, @attr_int3_flg, @attr_int4_flg, @attr_int5_flg, @attr_flt1_flg, @attr_flt2_flg, @attr_flt3_flg, @attr_dte1_flg, @attr_dte2_flg, @inv_attr_str1, @inv_attr_str2, @inv_attr_str3, @inv_attr_str4, @inv_attr_str5, @inv_attr_str6, @inv_attr_str7, @inv_attr_str8, @inv_attr_str9, @inv_attr_str10, @inv_attr_str11, @inv_attr_str12, @inv_attr_str13, @inv_attr_str14, @inv_attr_str15, @inv_attr_str16, @inv_attr_str17, @inv_attr_str18, @inv_attr_int1, @inv_attr_int2, @inv_attr_int3, @inv_attr_int4, @inv_attr_int5, @inv_attr_flt1, @inv_attr_flt2, @inv_attr_flt3, @inv_attr_dte1, @inv_attr_dte2, @wcs_pck_grp, @wcs_reported_dt, @pend_can_pcksts, @pend_can_req_dt, @cstms_typ, @cstms_typ_flg, @pip_counter, to_date(@ins_dt, 'YYYYMMDDHH24MISS'), to_date(@last_upd_dt, 'YYYYMMDDHH24MISS'), @ins_user_id, @last_upd_user_id, @ack_to_id)]
                        |
                        publish data
                         where new_wrkref = @new_wrkref
                    }
                    |
                    /* Commit after each loop */
                    {
                        [select *
                           from (select wrkref,
                                        wrkref_dtl,
                                        floor((row_number() over(order by wrkref_dtl) -1) / @csqty) rw
                                   from pckwrk_dtl
                                  where wrkref = @old_wrkref
                                    and wrktyp = @wrktyp) usr
                          where rw = 1]
                        |
                        [update pckwrk_dtl
                            set wrkref = @new_wrkref
                          where wrkref_dtl = @wrkref_dtl]
                    }
                    |
                    [update pckwrk_hdr
                        set pckqty = pckqty - @csqty
                      where wrkref = @old_wrkref]
                    |
                    commit
                }
            }
        }
    }
};
commit;

/* BULK CASE PICK WORK SPLIT */
{
    [select reqnum old_reqnum,
            wrkref,
            lblbat old_lblbat,
            10 lmt
       from wrkque
      where oprcod = 'ATZ_BCPK'
        and wrksts = 'SUSP'
        and ack_usr_id is null
        and ackdevcod is null] catch(-1403)
    |
    if (@? = 0 and @old_lblbat)
    {
        [select count(*) wrkcnt,
                ceil(convert(decimal, count(*)) / convert(decimal, @lmt)) loopcnt
           from pckwrk_hdr
          where lblbat = @old_lblbat]
    }
    |
    if (@wrkcnt > @lmt)
    {
        do loop
         where count = @loopcnt - 1
        |
        {
            {
                generate next number
                 where numcod = 'reqnum'
                |
                publish data
                 where new_reqnum = @nxtnum
                |
                generate next number
                 where numcod = 'lblbat'
                |
                publish data
                 where new_lblbat = @nxtnum
                |
                [select *
                   from wrkque
                  where reqnum = @old_reqnum]
                |
                [insert
                   into wrkque(reqnum, wrksts, baspri, effpri, wh_id, oprcod, srcloc, dstloc, ack_usr_id, ackdevcod, client_id, lodnum, lodlvl, adddte, issdte, ackdte, pckdte, depdte, wrkref, lblbat, cntgrp, refloc, batnum, src_wrk_zone_id, srcwrkare, loctrvseq, zontrvseq, asg_usr_id, lstescdte, locacc, schbat, list_id, asg_role_id, src_bldg_id, src_aisle_id, rf_out_aud_id, man_rel_seq, ctnnum, sign_off_date)
                 values (@new_reqnum, @wrksts, @baspri, @effpri, @wh_id, @oprcod, @srcloc, @dstloc, @ack_usr_id, @ackdevcod, @client_id, @lodnum, @lodlvl, to_date(@adddte, 'YYYYMMDDHH24MISS'), @issdte, @ackdte, @pckdte, @depdte, @wrkref, @lblbat, @cntgrp, @refloc, @batnum, @src_wrk_zone_id, @srcwrkare, @loctrvseq, @zontrvseq, @asg_usr_id, to_date(@lstescdte, 'YYYYMMDDHH24MISS'), @locacc, @schbat, @list_id, @asg_role_id, @src_bldg_id, @src_aisle_id, @rf_out_aud_id, @man_rel_seq, @ctnnum, @sign_off_date)]
                |
                publish data
                 where new_lblbat = @new_lblbat
            }
            |
            [select *
               from (select pwh.wrkref old_wrkref,
                            pwh.wrktyp,
                            pwh.pckqty,
                            pwh.appqty,
                            pwh.prtnum,
                            pwh.ftpcod,
                            pwh.lblbat,
                            pfd.untqty csqty,
                            floor((row_number() over(order by pwh.wrkref) - 1) / @lmt) rw
                       from pckwrk_hdr pwh
                      inner
                       join prtftp_dtl pfd
                         on pwh.prtnum = pfd.prtnum
                        and pwh.wh_id = pfd.wh_id
                        and pwh.ftpcod = pfd.ftpcod
                        and pfd.uomcod = 'CS'
                      where pwh.lblbat = @old_lblbat
                        and pwh.pcksts = 'R'
                        and pwh.wrktyp = 'B') usr
              where rw = 1]
            |
            [update pckwrk_hdr
                set lblbat = @new_lblbat
              where wrkref = @old_wrkref]
            |
            commit
        }
    }
};
commit;

/* Extra ER Cancellation - Also run in Replenishment Manager */
{
    [select *
       from
            /* Summary Analytics */
            (select prtnum,
                    rwrow,
                    rwqty,
                    inprow,
                    subnum,
                    inpqty,
                    entry,
                    wrkref,
                    er_pckqty,
                    sum(nvl(rwqty, 0) - nvl(inpqty, 0) - nvl(er_pckqty, 0)) over(partition by prtnum
                                                                                  order by rwqty desc,
                                                                                        inpqty desc,
                                                                                        wrkref) chk
               from
                    /* Information Tables */
                    (select rw.prtnum,
                            row_number() over(partition by rw.prtnum
                                               order by rw.prtnum) rwrow,
                            sum(rw.pckqty) rwqty,
                            null as inprow,
                            null as subnum,
                            null as inpqty,
                            null as entry,
                            null as wrkref,
                            null as er_pckqty
                       from rplwrk rw
                      where rw.schbat is not null
                      group by rw.prtnum
                     union
                     select dly.prtnum,
                            null as rwrow,
                            null as rwqty,
                            row_number() over(partition by dly.prtnum
                                               order by dly.prtnum) + 100 inprow,
                            dly.subnum,
                            sum(dly.trnqty) inpqty,
                            null as entry,
                            null as wrkref,
                            null as er_pckqty
                       from dlytrn dly
                      inner
                       join invmov im
                         on dly.subnum = im.lodnum
                        and im.seqnum = 1
                      where dly.trndte > sysdate -2
                        and dly.oprcod like 'ATZ_ER%'
                        and dly.actcod = 'CASRPL'
                        and dly.fr_arecod in ('RESV', 'ELRV')
                      group by dly.prtnum,
                            dly.subnum
                     union
                     select pw.prtnum,
                            null as rwrow,
                            null as rwqty,
                            null as inprow,
                            null as subnum,
                            null as inpqty,
                            row_number() over(partition by pw.prtnum
                                               order by pw.wrkref) + 1000 entry,
                            pw.wrkref,
                            sum(pw.pckqty) er_pckqty
                       from pckwrk_view pw
                      where pw.wrktyp = 'E'
                      group by pw.prtnum,
                            pw.wrkref) usr) usr2
            /* Only pull extraneous ER work in queue, if it is picked already it's too late anyways */
      where wrkref is not null
        and chk < 0
        and abs(chk) >= er_pckqty] catch(-1403)
    |
    if (@? = 0)
    {
        cancel pick groups
         where chgmod = 'U'
           and wrkref = @wrkref
           and wh_id = nvl(@wh_id, 'DC01')
           and devcod = ''
           and oprcod = ''
           and canbatflg = 0
           and bulk_cancel_flg = 0
           and lstpckflg = 1 catch(@?)
        |
        commit
    }
};
commit;

/* ER WORK REPRIORITIZATION */
{
    /* escalate based on highest priority wave */
    {
        [select *
           from (select distinct w.reqnum oldreq,
                        w.effpri,
                        w.oprcod,
                        w.wrkref wref,
                        pw.lblbat orgbat,
                        pw.wrkref pwref,
                        pw.srcloc,
                        pm.stoloc dstloc,
                        pw.lodlvl,
                        pw.src_wrk_zone_id,
                        zm.wrkare srcwrkare,
                        loc.trvseq loctrvseq,
                        zm.trvseq zontrvseq,
                        loc.locacc,
                        pw.schbat pwbat,
                        zm.bldg_id src_bldg_id,
                        loc.aisle_id src_aisle_id,
                        pb.pricod,
                        min(to_number(pb.pricod)) over(partition by pw.wrkref) maxpri
                   from rplwrk rw
                  inner
                   join pckwrk_view pw
                     on rw.prtnum = pw.prtnum
                    and pw.wrktyp = 'E'
                  inner
                   join wrkque w
                     on w.lblbat = pw.lblbat
                  inner
                   join pckbat pb
                     on rw.schbat = pb.schbat
                  inner
                   join locmst loc
                     on pw.srcloc = loc.stoloc
                    and pw.wh_id = loc.wh_id
                  inner
                   join zonmst zm
                     on loc.wrk_zone_id = zm.wrk_zone_id
                  inner
                   join pckmov pm
                     on pw.cmbcod = pm.cmbcod
                    and pm.seqnum = 0
                  where 1 = 1) usr
          where pricod = maxpri
            and effpri <> pricod] catch(-1403)
        |
        if (@? = 0)
        {
            /* reevaluate for new values as the parameters could have been changed by previous ER's commits */
            [select *
               from (select distinct w.reqnum oldreq,
                            w.effpri,
                            w.oprcod,
                            w.wrkref wref,
                            w.src_wrk_zone_id srcwrkzon,
                            pw.lblbat orgbat,
                            pw.wrkref pwref,
                            pw.srcloc,
                            pm.stoloc dstloc,
                            pw.lodlvl,
                            pw.src_wrk_zone_id,
                            zm.wrkare srcwrkare,
                            loc.trvseq loctrvseq,
                            zm.trvseq zontrvseq,
                            loc.locacc,
                            pw.schbat pwbat,
                            zm.bldg_id src_bldg_id,
                            loc.aisle_id src_aisle_id,
                            pb.pricod,
                            min(to_number(pb.pricod)) over(partition by pw.wrkref) maxpri
                       from rplwrk rw
                      inner
                       join pckwrk_view pw
                         on rw.prtnum = pw.prtnum
                        and pw.wrktyp = 'E'
                      inner
                       join wrkque w
                         on w.lblbat = pw.lblbat
                      inner
                       join pckbat pb
                         on rw.schbat = pb.schbat
                      inner
                       join locmst loc
                         on pw.srcloc = loc.stoloc
                        and pw.wh_id = loc.wh_id
                      inner
                       join zonmst zm
                         on loc.wrk_zone_id = zm.wrk_zone_id
                      inner
                       join pckmov pm
                         on pw.cmbcod = pm.cmbcod
                        and pm.seqnum = 0
                      where pw.wrkref = @pwref) usr
              where pricod = maxpri
                and effpri <> pricod] catch(-1403)
            |
            if (@? = 0)
            {
                /* don't need to reorganize if it is already in a group with the proper priority */
                if (@wrkref <> @pwref and @effpri <> @pricod)
                {
                    /* find an existing like group with the proper priority to attach to*/
                    [select lblbat,
                            @orgbat orgbat,
                            @pwref pwref
                       from wrkque
                      where oprcod = @oprcod
                        and src_wrk_zone_id = @srcwrkzon
                        and effpri = @pricod
                        and wrkref <> @pwref] catch(-1403)
                    |
                    if (@? = 0)
                    {
                        /* change the group */
                        [update pckwrk_hdr
                            set lblbat = @lblbat
                          where wrkref = @pwref]
                        |
                        /* commit so the next ER entry can see it when looking for like groups */
                        commit;
                    }
                    else
                    {
                        /* create a new group and change to that new group */
                        generate next number
                         where numcod = 'lblbat'
                        |
                        publish data
                         where newbat = @nxtnum
                        |
                        generate next number
                         where numcod = 'reqnum'
                        |
                        publish data
                         where reqnum = @nxtnum
                        |
                        [insert
                           into wrkque(reqnum, wrksts, baspri, effpri, wh_id, oprcod, srcloc, dstloc, ack_usr_id, ackdevcod, client_id, lodnum, lodlvl, adddte, issdte, ackdte, pckdte, depdte, wrkref, lblbat, cntgrp, refloc, batnum, src_wrk_zone_id, srcwrkare, loctrvseq, zontrvseq, asg_usr_id, lstescdte, locacc, schbat, list_id, asg_role_id, src_bldg_id, src_aisle_id, rf_out_aud_id, man_rel_seq)
                         values (@reqnum, 'PEND', @pricod, @pricod, 'DC01', @oprcod, @srcloc, @dstloc, '', '', '', '', @lodlvl, sysdate, null, null, null, null, @pwref, @newbat, '', '', '', @src_wrk_zone_id, @srcwrkare, @loctrvseq, @zontrvseq, '', sysdate, @locacc, @pwbat, '', '', @src_bldg_id, @src_aisle_id, '', '')]
                        |
                        /* update lblbat again */
                        [update pckwrk_hdr
                            set lblbat = @newbat
                          where wrkref = @pwref]
                        |
                        /* commit so the next ER entry can see it when looking for like groups */
                        commit;
                    }
                }
                else
                {
                    [update wrkque
                        set effpri = @pricod,
                            baspri = @pricod
                      where reqnum = @oldreq]
                    |
                    /* commit so the next ER entry can see it when looking for like groups */
                    commit;
                }
            }
        }
    };

    /* delete obsolete work queue entries */
    {
        [select *
           from wrkque w
           left outer
           join pckwrk_view pw
             on w.lblbat = pw.lblbat
            and pw.wrktyp = 'E'
            and pw.oprcod like 'ATZ_ER%'
          where w.oprcod like 'ATZ_ER%'
            and pw.lblbat is null
            and ack_usr_id is null] catch(-1403)
        |
        if (@? = 0)
        {
            [delete
               from wrkque
              where reqnum = @reqnum]
            |
            commit;
        }
    };

    /* consolidate like groups */
    {
        [select *
           from (select w.reqnum dstreq,
                        w.lblbat dstbat,
                        w2.reqnum srcreq,
                        w2.lblbat srcbat,
                        row_number() over(partition by w.oprcod, w.effpri
                                           order by w.reqnum) chk
                   from wrkque w
                  inner
                   join wrkque w2
                     on w2.oprcod = w.oprcod
                    and w2.effpri = w.effpri
                    and w2.src_wrk_zone_id = w.src_wrk_zone_id
                    and w2.oprcod like 'ATZ_ER%'
                    and w.reqnum <> w2.reqnum
                  where w.oprcod like 'ATZ_ER%') usr
          where chk = 2] catch(-1403)
        |
        if (@? = 0)
        {
            [update pckwrk_hdr
                set lblbat = @dstbat
              where wrktyp = 'E'
                and lblbat = @srcbat]
            |
            commit;
        }
    };

    /* delete obsolete work queue entries again */
    {
        [select *
           from wrkque w
           left outer
           join pckwrk_view pw
             on w.lblbat = pw.lblbat
            and pw.wrktyp = 'E'
            and pw.oprcod like 'ATZ_ER%'
          where w.oprcod like 'ATZ_ER%'
            and pw.lblbat is null
            and ack_usr_id is null] catch(-1403)
        |
        if (@? = 0)
        {
            [delete
               from wrkque
              where reqnum = @reqnum]
            |
            commit;
        }
    };
};
commit;

/* ER WORK SPLIT */
{
    [select reqnum old_reqnum,
            wrkref,
            lblbat old_lblbat,
            15 lmt
       from wrkque
      where oprcod like 'ATZ_ER%'
        and ack_usr_id is null
        and ackdevcod is null] catch(-1403)
    |
    if (@? = 0 and @old_lblbat)
    {
        [select count(*) wrkcnt,
                ceil(convert(decimal, count(*)) / convert(decimal, @lmt)) loopcnt
           from pckwrk_hdr
          where lblbat = @old_lblbat]
    }
    |
    if (@wrkcnt > @lmt)
    {
        do loop
         where count = @loopcnt - 1
        |
        {
            {
                generate next number
                 where numcod = 'reqnum'
                |
                publish data
                 where new_reqnum = @nxtnum
                |
                generate next number
                 where numcod = 'lblbat'
                |
                publish data
                 where new_lblbat = @nxtnum
                |
                [select *
                   from wrkque
                  where reqnum = @old_reqnum]
                |
                [insert
                   into wrkque(reqnum, wrksts, baspri, effpri, wh_id, oprcod, srcloc, dstloc, ack_usr_id, ackdevcod, client_id, lodnum, lodlvl, adddte, issdte, ackdte, pckdte, depdte, wrkref, lblbat, cntgrp, refloc, batnum, src_wrk_zone_id, srcwrkare, loctrvseq, zontrvseq, asg_usr_id, lstescdte, locacc, schbat, list_id, asg_role_id, src_bldg_id, src_aisle_id, rf_out_aud_id, man_rel_seq, ctnnum, sign_off_date)
                 values (@new_reqnum, @wrksts, @baspri, @effpri, @wh_id, @oprcod, @srcloc, @dstloc, @ack_usr_id, @ackdevcod, @client_id, @lodnum, @lodlvl, to_date(@adddte, 'YYYYMMDDHH24MISS'), @issdte, @ackdte, @pckdte, @depdte, @wrkref, @new_lblbat, @cntgrp, @refloc, @batnum, @src_wrk_zone_id, @srcwrkare, @loctrvseq, @zontrvseq, @asg_usr_id, to_date(@lstescdte, 'YYYYMMDDHH24MISS'), @locacc, @schbat, @list_id, @asg_role_id, @src_bldg_id, @src_aisle_id, @rf_out_aud_id, @man_rel_seq, @ctnnum, @sign_off_date)]
                |
                publish data
                 where new_lblbat = @new_lblbat
            }
            |
            [select *
               from (select pwh.wrkref old_wrkref,
                            pwh.wrktyp,
                            pwh.pckqty,
                            pwh.appqty,
                            pwh.prtnum,
                            pwh.ftpcod,
                            pwh.lblbat,
                            pfd.untqty csqty,
                            floor((row_number() over(order by pwh.wrkref) - 1) / @lmt) rw
                       from pckwrk_hdr pwh
                      inner
                       join prtftp_dtl pfd
                         on pwh.prtnum = pfd.prtnum
                        and pwh.wh_id = pfd.wh_id
                        and pwh.ftpcod = pfd.ftpcod
                        and pfd.uomcod = 'CS'
                      where pwh.lblbat = @old_lblbat
                        and pwh.pcksts = 'R'
                        and pwh.wrktyp = 'E') usr
              where rw = 1]
            |
            [update pckwrk_hdr
                set lblbat = @new_lblbat
              where wrkref = @old_wrkref]
            |
            commit
        }
    }
};
commit;


/* Convert Air ER's to New Oprcod */
{
    [select reqnum,
            oprcod,
            lblbat,
            effpri,
            baspri,
            replace(oprcod, '-', 'A') newopr
       from wrkque
      where oprcod like 'ATZ_ER-%'
        and effpri = '1'
        and ack_usr_id is null] catch(-1403)
    |
    if (@? = 0)
    {
        [update pckwrk_view
            set oprcod = @newopr
          where lblbat = @lblbat
            and oprcod = @oprcod
            and wrktyp = 'E'] catch(@?)
        |
        [update wrkque
            set oprcod = @newopr
          where reqnum = @reqnum
            and lblbat = @lblbat
            and oprcod = @oprcod] catch(@?)
    }
};
commit;",$LESDIR/log/usr_pckrel.log,,0,"",60,300,usr_data
