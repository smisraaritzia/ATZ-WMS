job_id,role_id,name,enabled,type,command,log_file,trace_level,overlap,schedule,start_delay,timer,grp_nam
USR_REPLENMGR,,Replenishment Manager,0,timer,"job emergency replenishment manager;
commit;

/* LOCATIONS IN ERROR RESET */
{
    [select loc.stoloc,
            loc.locsts,
            loc.wh_id
       from locmst loc
      inner
       join loc_typ typ
         on loc.loc_typ_id = typ.loc_typ_id
      where loc.locsts = 'I'
        and typ.fwiflg = 1
        and (typ.sigflg = 1 or typ.stoare_flg = 1 or loc.stoloc in ('PNDCONV-GIFT', 'PNDCONV-PACK', 'PNDMONO-PREP', 'PNDSHIP-01', 'PNDTRLR-CA', 'PNDTRLR-US'))] catch(-1403)
    |
    if (@? = 0)
    {
        reset location status
         where stoloc = @stoloc
           and wh_id = @wh_id catch(@?)
        |
        if (@? = 0)
        {
            write output file
             where filnam = 'LOCSTS_RESET.log'
               and data = sysdate || ',' || @stoloc || ',' || @locsts || ',' || 'Location successfully reset'
               and newline = 'Y'
               and mode = 'A'
               and path = '$LESDIR/log'
        }
        else
        {
            write output file
             where filnam = 'LOCSTS_RESET.log'
               and data = sysdate || ',' || @stoloc || ',' || @locsts || ',' || 'Location reset failed'
               and newline = 'Y'
               and mode = 'A'
               and path = '$LESDIR/log'
        }
    }
};
commit;

{
    list warehouses
    |
    [select *
       from
            /* Summary Analytics */
            (select prtnum,
                    rwrow,
                    rwqty,
                    inprow,
                    subnum,
                    inpqty,
                    entry,
                    wrkref,
                    er_pckqty,
                    sum(nvl(rwqty, 0) - nvl(inpqty, 0) - nvl(er_pckqty, 0)) over(partition by prtnum
                                                                                  order by rwqty desc,
                                                                                        inpqty desc,
                                                                                        wrkref) chk
               from
                    /* Information Tables */
                    (select rw.prtnum,
                            row_number() over(partition by rw.prtnum
                                               order by rw.prtnum) rwrow,
                            sum(rw.pckqty) rwqty,
                            null as inprow,
                            null as subnum,
                            null as inpqty,
                            null as entry,
                            null as wrkref,
                            null as er_pckqty
                       from rplwrk rw
                      where rw.schbat is not null
                      group by rw.prtnum
                     union
                     select dly.prtnum,
                            null as rwrow,
                            null as rwqty,
                            row_number() over(partition by dly.prtnum
                                               order by dly.prtnum) + 100 inprow,
                            dly.subnum,
                            sum(dly.trnqty) inpqty,
                            null as entry,
                            null as wrkref,
                            null as er_pckqty
                       from dlytrn dly
                      inner
                       join invmov im
                         on dly.subnum = im.lodnum
                        and im.seqnum = 1
                      where dly.trndte > sysdate -2
                        and dly.oprcod like 'ATZ_ER%'
                        and dly.actcod = 'CASRPL'
                        and dly.fr_arecod = 'RESV'
                      group by dly.prtnum,
                            dly.subnum
                     union
                     select pw.prtnum,
                            null as rwrow,
                            null as rwqty,
                            null as inprow,
                            null as subnum,
                            null as inpqty,
                            row_number() over(partition by pw.prtnum
                                               order by pw.wrkref) + 1000 entry,
                            pw.wrkref,
                            sum(pw.pckqty) er_pckqty
                       from pckwrk_view pw
                      where pw.wrktyp = 'E'
                      group by pw.prtnum,
                            pw.wrkref) usr) usr2
            /* Only pull extraneous ER work in queue, if it is picked already it's too late anyways */
      where wrkref is not null
        and chk < 0
        and abs(chk) >= er_pckqty] catch(-1403)
    |
    if (@? = 0)
    {
        cancel pick groups
         where chgmod = 'U'
           and wrkref = @wrkref
           and wh_id = @wh_id
           and devcod = ''
           and oprcod = ''
           and canbatflg = 0
           and bulk_cancel_flg = 0
           and lstpckflg = 1 catch(@?)
    }
};
commit;",$LESDIR/log/replenmgr.log,,0,"",0,300,dcs_data
