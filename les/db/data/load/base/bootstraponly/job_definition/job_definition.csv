job_id,Role ID,Name,Enabled,Type,Command,Source File,trace_level,overlap,Schedule,start_delay,timer,Absolute Group
AUTO_CLOSE_LTL_ALLO,,Automatically Load and Close LTL Allo,0,cron,list warehouses
|
process dss ltl shipment auto load and close
 where ordtyp_list = 'A01,A02,APH'
   and wh_id = @wh_id,$LESDIR/log/auto_close_ltl_allo.log,,0,0 0/10 0-1,20-23 * * ?,60,,
AUTO_CLOSE_LTL_ECOM,,Automatically Load and Close LTL eCom,0,cron,list warehouses
|
process dss ltl shipment auto load and close
 where ordtyp_list = 'E01,E03,G01,G03,R01,R03,B03,S01,S03,P01,P03,I01,I03'
   and wh_id = @wh_id
,$LESDIR/log/auto_close_ltl_ecom.log,,0,0 0/5 5-23 ? * * *,,,usr_data
AUTO_CLOSE_LTL_RETAIL,,Automatically Load and Close LTL Retail,0,cron,list warehouses
|
process dss ltl shipment auto load and close
 where ordtyp_list = 'SR,MR,OT,SO,NFT,DCT,ECS,CUO,RTV,SC,ZRP'
   and wh_id = @wh_id,$LESDIR/log/auto_close_ltl_retail.log,,0,0 0/10 0-1,10-14,19-23 * * ?,,,usr_data
AUTO_CLOSE_LTL_US_ALLO,,Automatically Load and Close LTL US Allocation &amp; Phone Checks,0,cron,list warehouses
|
process dss ltl shipment auto load and close
 where ordtyp_list = 'UNF'
   and wh_id = @wh_id,$LESDIR/log/auto_close_ltl_us_allo.log,,0,0 0/10 5-6 * * ?,,,usr_data
AUTO_CLOSE_LTL_US_RETAIL,,Automatically Load and Close LTL US Retail,0,cron,list warehouses
|
process dss ltl shipment auto load and close
 where ordtyp_list = 'USR,UNF,UUO,UOT'
   and wh_id = @wh_id,$LESDIR/log/auto_close_ltl_us_retail.log,,0,0 0/10 10-13,17-20 * * ?,,,usr_data
USR_AGED_CARTON,,Aritzia Aged Packed Cartons Report (Obsolete),0,cron,list warehouses
|
expand environment variable
 where name = '$' || @wh_id || 'outputs ' || ' \Aged Packed Cartons\Aged_Packed_Cartons ' || '_' || to_char(sysdate, ' YYYYMMDDHH24MISS ') || ' .csv '
|
publish data
 where resfil = @name
|
[select distinct a.subnum,
        b.mstdte,
        a.subucc,
        a.stoloc,
        b.carcod,
        b.srvlvl,
        b.ordnum,
        b.ship_id,
        b.traknm
   from inventory_view a
   LEFT
   join manfst b
     on a.subnum = b.subnum
  where stoloc like ' STN% '
    and b.srvlvl <> ' RETURN '
  order by b.mstdte DESC] catch(-1403) >> res
|
if (@? = 0)
{
    write csv file
     where resdata = @res
       and filnam = @resfil
};
expand environment variable
 where name = '$' || @wh_id || 'outputs ' || ' \Aged Packed Cartons\Aged_Packed_Cartons ' || ' _ ' || to_char(sysdate, ' YYYYMMDDHH24MISS ') || ' .csv '
|
publish data
 where resfil = @name
|
find file
 where pathname = @resfil catch(@?)
|
if (@pathname = @resfil and @type = ' F ')
{
    publish data
     where hostname = ' AZEUS2SMTP.JDADELIVERS.COM '
       and mail_from = ' ITWMS - ' || @wh_id || 'Alerts@aritzia.com '
       and send_to_list = ' supplychaintechteam @aritzia.com '
    |
    send email
     where subject = ' Aged Packed Cartons '
       and hostname = @hostname
       and mail_from = @mail_from
       and send_to = @send_to_list
       and message = ' The following Cartons are packed
       and are waiting to be moved to a Pallet '
       and attachment = @resfil
},$LESDIR/log/usr_aged_carton,,0,0 15 5,12,23 ? * * *,60,,usr_data
USR_AGED_RETAIL_ALERT,,Aritzia Aged Retail Order Alert,0,cron,list warehouses
|
[select ship_id || ' , ' || schbat || ' , ' || early_shpdte || ' , ' || carcod || ' , ' || srvlvl || ' , ' || orddsc string
   from (select s.ship_id,
                sl.schbat,
                format(s.early_shpdte, 'MM-dd-yyyy') early_shpdte,
                s.carcod,
                s.srvlvl,
                pv.orddsc
           from shipment s
          inner
           join shipment_line sl
             on s.ship_id = sl.ship_id
          inner
           join ord o
             on sl.ordnum = o.ordnum
            and sl.client_id = o.client_id
            and sl.wh_id = o.wh_id
          inner
           join (select rtstr1 ordtyp,
                        rtstr2 orddsc
                   from poldat_view
                  where polcod = 'DSS-ARITZIA'
                    and polvar = 'REPORTING'
                    and polval = 'ORDTYP-XREF'
                    and rtstr2 not like '%ECOMM%'
                    and rtstr2 not like '%MARKETPLACE%'
                    and rtstr2 not like '%ORDER DELIVERY%'
                    and rtstr2 not like '%BULK%') pv
             on o.ordtyp = pv.ordtyp
          where s.carcod = 'ATLAS'
            and s.early_shpdte - (4 / 24) <= sysdate
            and s.shpsts not in ('B', 'C')
          group by s.ship_id,
                sl.schbat,
                s.early_shpdte,
                s.carcod,
                s.srvlvl,
                pv.orddsc
         union all
         select s.ship_id,
                sl.schbat,
                format(s.early_shpdte, 'MM-dd-yyyy') early_shpdte,
                s.carcod,
                s.srvlvl,
                pv.orddsc
           from shipment s
          inner
           join shipment_line sl
             on s.ship_id = sl.ship_id
          inner
           join ord o
             on sl.ordnum = o.ordnum
            and sl.client_id = o.client_id
            and sl.wh_id = o.wh_id
          inner
           join (select rtstr1 ordtyp,
                        rtstr2 orddsc
                   from poldat_view
                  where polcod = 'DSS-ARITZIA'
                    and polvar = 'REPORTING'
                    and polval = 'ORDTYP-XREF'
                    and rtstr2 not like '%ECOMM%'
                    and rtstr2 not like '%MARKETPLACE%'
                    and rtstr2 not like '%ORDER DELIVERY%'
                    and rtstr2 not like '%BULK%') pv
             on o.ordtyp = pv.ordtyp
          where s.carcod <> 'ATLAS'
            and s.early_shpdte <= dateadd(day, datediff(day, 0, sysdate), 0)
            and s.shpsts not in ('B', 'C')
          group by s.ship_id,
                sl.schbat,
                s.early_shpdte,
                s.carcod,
                s.srvlvl,
                pv.orddsc) usrdata
  order by early_shpdte] catch(-1403) >> res
|
if (@? = 0)
{
    convert column results to string
     where colnam = 'string'
       and res = @res
       and separator = '
	   
'
    |
    publish data
     where data = @result_string
       and hostname = 'azeus2smtp.jdadelivers.com'
       and mail_from = 'ITWMS-' || @wh_id || 'Alerts @jdadelivers.com '
       and send_to_list = ' supplychaintechteam @aritzia.com;
    dcsupervisors @aritzia.com;
    dcteamleaders @aritzia.com;
    shipping @aritzia.com '
    |
    expand environment variable
     where name = ' $' || @wh_id || 'outputs '
    |
    [select case when charindex(' DEV ', @value) > 0 then ' BY DEV '
                 when charindex(' TST ', @value) > 0 then ' BY QA '
                 else ' BY PROD '
            end envdsc
       from dual]
    |
    send email
     where subject = ' Aged Retail Order Alert - Undispatced Orders Past Ship Date - ' || @envdsc
       and hostname = @hostname
       and mail_from = @mail_from
       and send_to = @send_to_list
       and message = ' SHIP ID, WAVE, SHIP DATE, CARRIER, SERVICE LEVEL, ORDER TYPE ' || '' || @data
},$LESDIR/log/usr_aged_retail.log,,0,5 0 19,20,21,22,23 ? * * *,60,,usr_data
USR_DISTRO_INVMOV_ALERT,,Aritzia Distro Inventory Move Issue Alert,0,cron,{
    [select distinct iv.subnum,
            'No DTL Invmov' prob
       from inventory_pckwrk_view iv
      inner
       join locmst loc
         on iv.stoloc = loc.stoloc
        and iv.wh_id = loc.wh_id
      inner
       join pckwrk_hdr pw
         on iv.wrkref = pw.wrkref
       left outer
       join invmov im
         on iv.dtlnum = im.lodnum
      where iv.stoloc in ('PNDPUTS-PROB', 'PNDPUTS-RCV-01', 'PNDPUTS-STG-01')
        and iv.ship_line_id is not null
        and pw.lodlvl = 'D'
        and im.stoloc is null
     union
     select distinct iv.subnum,
            'Sub Moves Exists' prob
       from inventory_pckwrk_view iv
      inner
       join locmst loc
         on iv.stoloc = loc.stoloc
        and iv.wh_id = loc.wh_id
      inner
       join pckwrk_hdr pw
         on iv.wrkref = pw.wrkref
       left outer
       join invmov im
         on iv.subnum = im.lodnum
      where iv.stoloc in ('PNDPUTS-PROB', 'PNDPUTS-RCV-01', 'PNDPUTS-STG-01')
        and iv.ship_line_id is not null
        and pw.lodlvl = 'D'
        and im.stoloc is not null
     union
     select distinct iv.subnum,
            'Load Moves Exists' prob
       from inventory_pckwrk_view iv
      inner
       join locmst loc
         on iv.stoloc = loc.stoloc
        and iv.wh_id = loc.wh_id
      inner
       join pckwrk_hdr pw
         on iv.wrkref = pw.wrkref
       left outer
       join invmov im
         on iv.lodnum = im.lodnum
      where iv.stoloc in ('PNDPUTS-PROB', 'PNDPUTS-RCV-01', 'PNDPUTS-STG-01')
        and iv.ship_line_id is not null
        and pw.lodlvl = 'D'
        and im.stoloc is not null] catch(-1403) >> res
    |
    if (@? = 0)
    {
        list warehouses
        |
        expand environment variable
         where name = '$' || @wh_id || 'outputs ' || ' \Glitched Order\ '
        |
        publish data
         where path = @value
        |
        write csv file
         where resdata = @res
           and filnam = ' distro_invmov_ ' || to_char(sysdate, ' YYYYMMDD - HH24 ') || ' .csv '
           and path = @path
    }
};
list warehouses
|
expand environment variable
 where name = ' $' || @wh_id || 'outputs ' || ' \Glitched Order\distro_invmov_ ' || to_char(sysdate, ' YYYYMMDD - HH24 ') || ' .csv '
|
publish data
 where resfil = @value
|
find file
 where pathname = @resfil catch(@?)
|
if (@pathname = @resfil and @type = ' F ')
{
    expand environment variable
     where name = ' $'$' || @wh_id || 'outputs' '
    |
    [select case when charindex(' DEV ', @value) > 0 then ' BY DEV '
                 when charindex(' TST ', @value) > 0 then ' BY QA '
                 else ' BY PROD '
            end envdsc
       from dual]
    |
    publish data
     where hostname = ' azeus2smtp.jdadelivers.com '
       and mail_from = ' ITWMS - ' || @wh_id || 'Alerts @jdadelivers.com '
       and send_to_list = ' supplychaintechteam @aritzia.com;
    chkim @aritzia.com;
    skroes @aritzia.com;
    gsonier @aritzia.com '
    |
    send email
     where subject = ' Distro Inventory Invmov Alert - ' || @envdsc
       and hostname = @hostname
       and mail_from = @mail_from
       and send_to = @send_to_list
       and message = ' Attached cartons have problematic invmov entry issues. Please see attached.'
       and attachment = @resfil
},$LESDIR/log/usr_distro_invmov_alert.log,,0,0 0 6-23 ? * 2-6 *,,,usr_data
USR_ER_ALERT,,Aritzia Duplicate ER Alert,0,cron,list warehouses
|
[select prtnum || '-' || count(*) str,
        count(*) prtcnt
   from pckwrk_hdr
  where wrktyp in ('E')
    and wh_id = @wh_id
  group by prtnum
 having count(*) > 1] catch(-1403) >> res
|
if (@? = 0)
{
    convert column results to string
     where colnam = 'str'
       and res = @res
    |
    publish data
     where hostname = 'AZEUS2SMTP.JDADELIVERS.COM'
       and mail_from = 'ITWMS-' || @wh_id || 'Alerts @aritzia.com '
       and send_to_list = ' jcwong @aritzia.com '
       and prtnum_l = @result_string
    |
    send email
     where subject = ' Duplicate ERs in Queue '
       and hostname = @hostname
       and mail_from = @mail_from
       and send_to = @send_to_list
       and message = ' Duplicate replenishments found for the following articles: ' || @prtnum_l catch(@?)
},$LESDIR/log/usr_er_alert.log,,0,0 0/15 5-23 ? * 1-7 *,60,,usr_data
USR_ER_ESCALATION,,Aritzia ER Escalation,0,cron,list warehouses
|
[select DATEADD(d, -1, DATEDIFF(d, 0, sysdate)) + (0.0 / 24) dte1,
        0 srchpak
   from dual]
|
[select *
   from (select jde.job_id,
                jde.node_url,
                jde.start_dte,
                jde.status,
                jde.message,
                jde.end_dte,
                row_number() over(partition by jde.job_id
                                   order by jde.end_dte desc) as row_number
           from job_definition_exec jde
          where jde.job_id = 'USR_REPLENMGR'
            and jde.start_dte > to_date(@dte1)
            and jde.end_dte is not null) usr
  where usr.row_number = '2']
|
[/* ER allocation */
 select rplref
   from rplwrk rw
  inner
   join (select distinct d.prtnum
           from dlytrn d
          inner
           join (select subnum
                   from dlytrn
                  inner
                   join (select *
                           from poldat
                          where polcod = 'DSS-ARITZIA'
                            and polvar = 'CASEPICK'
                            and rtstr1 like 'ATZ_ER%') rep
                     on oprcod = rep.rtstr1
                  where fr_arecod in ('RESV', 'ELRV')
                    and trndte > to_date(@dte1)) pck
             on d.subnum = pck.subnum
          where d.to_arecod = 'PICK'
            and d.fr_arecod = 'RDTS000001'
            and d.trndte > to_date(@usr.end_dte)) rpl
     on rpl.prtnum = rw.prtnum
  where schbat is not null]
|
|
list policies
 where polcod = 'EMERGENCY-REPLENISHMENTS'
   and polvar = 'INSTALLED'
   and polval = 'INSTALLED'
   and wh_id = @wh_id catch(-1403)
|
{
    complete emergency replenishment
     where rplref = @rplref
       and wh_id = @wh_id
       and comflg = 1 catch(@?)
    |
    commit
    |
    allocate emergency replenishment
     where rplref = @rplref
       and wh_id = @wh_id
       and comflg = 1 catch(@?)
    |
    commit
    |
    process emergency replenishment expiration
     where rplref = @rplref
       and wh_id = @wh_id
       and comflg = 1 catch(@?)
    |
    commit
    |
    process emergency replenishment errors
     where rplref = @rplref
       and wh_id = @wh_id
       and comflg = 1 catch(@?)
    |
    commit
},$LESDIR/log/usr_er_esclation.log,,0,0 0,30 * 23,24,25,26,27,28,29,30 NOV ? 2022,60,,usr_data
USR_FDX_ALERT2,,Aritzia Parcel Manifest Alert MON-FRI (2),0,cron,list warehouses
|
[select distinct mancls
   from manfst m
  inner
   join carxrf cx
     on m.carcod = cx.carcod
    and m.srvlvl = cx.srvlvl
  where m.mansts = 'R'
    and to_char(shpdte, 'MM-DD-YYYY') = to_char(sysdate, 'MM-DD-YYYY')] catch(-1403) >> res
|
if (@? = 0)
{
    convert column results to string
     where resultset = @res
       and colnam = 'mancls'
       and separator = ','
    |
    publish data
     where hostname = 'azeus2smtp.jdadelivers.com'
       and mail_from = 'ITWMS-' || @wh_id || 'Alerts @jdadelivers.com '
       and send_to_list = ' dcsupervisors @aritzia.com;
    shipping @aritzia.com;
    supplychaintechteam @aritzia.com '
       and mancls = @result_string
    |
    expand environment variable
     where name = ' $'$' || @wh_id || 'outputs' '
    |
    [select case when charindex(' DEV ', @value) > 0 then ' BY DEV '
                 when charindex(' TST ', @value) > 0 then ' BY QA '
                 else ' BY PROD '
            end envdsc
       from dual]
    |
    send email
     where subject = ' Parcel Manifest Not Closed: ' || @mancls || ' - ' || @envdsc
       and hostname = @hostname
       and mail_from = @mail_from
       and send_to = @send_to_list
       and message = ' Parcel Manifest Left Open Please close parcel manifest(s) ' || @mancls || ' before 11:30PM PST. This alert is active from 9:30PM PST to 10:00PM PST
       and will execute every 5 minutes during this window.' catch(@?)
},$LESDIR/log/usr_fdx_alert.log,,0,0 0 22 ? * 2-6 *,60,,usr_data
USR_FDX_ALERT3,,Aritzia Parcel Manifest Alert SAT,0,cron,list warehouses
|
[select distinct mancls
   from manfst m
  inner
   join carxrf cx
     on m.carcod = cx.carcod
    and m.srvlvl = cx.srvlvl
  where m.mansts = 'R'
    and to_char(shpdte, 'MM-DD-YYYY') = to_char(sysdate, 'MM-DD-YYYY')] catch(-1403) >> res
|
if (@? = 0)
{
    convert column results to string
     where resultset = @res
       and colnam = 'mancls'
       and separator = ','
    |
    publish data
     where hostname = 'azeus2smtp.jdadelivers.com'
       and mail_from = 'ITWMS-' || @wh_id || 'Alerts @jdadelivers.com '
       and send_to_list = ' dcsupervisors @aritzia.com;
    shipping @aritzia.com;
    supplychaintechteam @aritzia.com '
       and mancls = @result_string
    |
    expand environment variable
     where name = ' $' || @wh_id || 'outputs '
    |
    [select case when charindex(' DEV ', @value) > 0 then ' BY DEV '
                 when charindex(' TST ', @value) > 0 then ' BY QA '
                 else ' BY PROD '
            end envdsc
       from dual]
    |
    send email
     where subject = ' Parcel Manifest Not Closed: ' || @mancls || ' - ' || @envdsc
       and hostname = @hostname
       and mail_from = @mail_from
       and send_to = @send_to_list
       and message = ' Parcel Manifest Left Open Please close parcel manifest(s) ' || @mancls || ' before 11:30PM PST. This alert is active from 7:30PM PST to 8:00PM PST
       and will execute every 15 minutes during this window.' catch(@?)
},$LESDIR/log/usr_fdx_alert.log,,0,0 0,15,30 13 ? * 7 *,60,,usr_data
USR_FDX_ALERT4,,Aritzia Parcel Manifest Alert SUN,0,cron,list warehouses
|
[select distinct mancls
   from manfst m
  inner
   join carxrf cx
     on m.carcod = cx.carcod
    and m.srvlvl = cx.srvlvl
  where m.mansts = 'R'
    and to_char(shpdte, 'MM-DD-YYYY') = to_char(sysdate, 'MM-DD-YYYY')] catch(-1403) >> res
|
if (@? = 0)
{
    convert column results to string
     where resultset = @res
       and colnam = 'mancls'
       and separator = ','
    |
    publish data
     where hostname = 'azeus2smtp.jdadelivers.com'
       and mail_from = 'ITWMS-' || @wh_id || 'Alerts @jdadelivers.com '
  and send_to_list = ' dcsupervisors @aritzia.com; shipping @aritzia.com; supplychaintechteam @aritzia.com '
       and mancls = @result_string
    |
    expand environment variable
     where name = ' $' || @wh_id || 'outputs '
    |
    [select case when charindex(' DEV ', @value) > 0 then ' BY DEV '
                 when charindex(' TST ', @value) > 0 then ' BY QA '
                 else ' BY PROD '
            end envdsc
       from dual]
    |
    send email
     where subject = ' Parcel Manifest Not Closed: ' || @mancls || ' - ' || @envdsc
       and hostname = @hostname
       and mail_from = @mail_from
       and send_to = @send_to_list
       and message = ' Parcel Manifest Left Open Please close parcel manifest(s) ' || @mancls || ' before 11:30PM PST. This alert is active from 7:30PM PST to 8:00PM PST
       and will execute every 15 minutes during this window.' catch(@?)
},$LESDIR/log/usr_fdx_alert.log,,0,0 30,45,59 19 ? * 1 *,60,,usr_data
USR_FSMSTEST,,Aritzia FSMS Manifest Test (Temp),0,cron,list warehouses
|
[select @wh_id];
{
    list warehouses
    |
    process dss auto manifest carton on packout
     where ctnnum = 'SHP00005LPBI'
       and devcod = 'SOBCLP0939'
       and wh_id = @wh_id
       and weight = '60' catch(@?)
};
{
    [select mfsmsn
       from manfst
      where subnum = 'SHP00005LPBI'] catch(@?)
    |
    if (@? = 0)
    {
        list warehouses
        |
        remove pm package
         where mfsmsn = @mfsmsn
           and wh_id = @wh_id
    }
};
{
    list warehouses
    |
    process dss auto manifest carton on packout
     where ctnnum = 'SHP00005LPO7'
       and devcod = 'SOBCLP0939'
       and wh_id = @wh_id
       and weight = '60' catch(@?)
};
{
    [select mfsmsn
       from manfst
      where subnum = 'SHP00005LPO7'] catch(@?)
    |
    if (@? = 0)
    {
        list warehouses
        |
        remove pm package
         where mfsmsn = @mfsmsn
           and wh_id = @wh_id
    }
};,,,0,5 0/1 23,0-6 ? * * *,,,
USR_GLITCH_ORD_ALERT,,Aritzia Glitched Order Alert,0,cron,list warehouses
|
{
    [select s.ship_id
       from inventory_view iv
      inner
       join shipment_line sl
         on iv.ship_line_id = sl.ship_line_id
      inner
       join shipment s
         on sl.ship_id = s.ship_id
      where iv.stoloc like 'STGSHIP%'
        and s.shpsts <> 'S'
      group by s.ship_id] catch(@?)
    |
    if (@? = 0)
    {
        /* no unstaged inventory */
        [select distinct 'x'
           from shipment_line sl
          inner
           join inventory_view iv
             on sl.ship_line_id = iv.ship_line_id
          where sl.ship_id = @ship_id
            and iv.stoloc not like 'STGSHIP%'] catch(@?)
        |
        if (@? = -1403)
        {
            /* no outstanding replen */
            [select distinct 'x'
               from rplwrk
              where ship_id = @ship_id] catch(@?)
            |
            if (@? = -1403)
            {
                /* no outstanding picks */
                [select distinct 'x'
                   from pckwrk_view pw
                  where wrktyp in ('P', 'B')
                    and ship_id = @ship_id
                    and appqty < pckqty] catch(@?)
                |
                if (@? = -1403)
                {
                    check ok to stage shipment
                     where ship_id = @ship_id catch(@?)
                    |
                    if (@? = 0)
                    {
                        write output file
                         where filnam = 'usr_glitch_ord_list.log'
                           and data = sysdate || ',' || @ship_id || ',' || 'Attempting to stage shipment.'
                           and newline = 'Y'
                           and mode = 'A'
                           and path = '$LESDIR/log'
                        |
                        register shipment staged
                         where ship_id = @ship_id
                           and rstg_flg = @rstg_flg
                    }
                    else
                    {
                        publish data
                         where ship_id = @ship_id >> res
                        |
                        expand environment variable
                         where name = '$' || @wh_id || 'outputs ' || ' \Glitched Order\ '
                        |
                        publish data
                         where path = @value
                        |
                        write csv file
                         where resdata = @res
                           and filnam = ' Gltiched_order ' || to_char(sysdate, ' YYYYMMDD - HH24 ') || ' .csv '
                           and path = @path
                    }
                }
            }
        }
    }
};
list warehouses
|
expand environment variable
 where name = ' $' || @wh_id || 'outputs ' || ' \Glitched Order\Gltiched_order ' || to_char(sysdate, ' YYYYMMDD - HH24 ') || ' .csv '
|
publish data
 where resfil = @value
|
find file
 where pathname = @resfil catch(@?)
|
if (@pathname = @resfil and @type = ' F ')
{
    expand environment variable
     where name = ' $' || @wh_id || 'outputs '
    |
    [select case when charindex(' DEV ', @value) > 0 then ' BY DEV '
                 when charindex(' TST ', @value) > 0 then ' BY QA '
                 else ' BY PROD '
            end envdsc
       from dual]
    |
    publish data
     where hostname = ' azeus2smtp.jdadelivers.com '
       and mail_from = ' ITWMS - ' || @wh_id || ' Alerts @jdadelivers.com '
       and send_to_list = ' supplychaintechteam @aritzia.com '
    |
    send email
     where subject = ' Glitched Order Alert - ' || @envdsc
       and hostname = @hostname
       and mail_from = @mail_from
       and send_to = @send_to_list
       and message = ' Attached orders were staged but are glitched. Please see attached.'
       and attachment = @resfil
},$LESDIR/log/usr_glitch_ord.log,,0,0 5 6-23/2 ? * 1-7 *,,,usr_data
USR_INBSHP_PRTFTP,,Aritzia Inbound Receiving Report,0,cron,[select rt.trknum,
        ri.invnum,
        ri.invtyp,
        ri.po_num,
        rl.prtnum,
        pd.lngdsc,
        psd.prtsize_dsc,
        pm.prtfam,
        dpm.merch_catg,
        dpm.generic generic,
        pcd.prtcolor_dsc,
        sum(rl.expqty) expqty,
        sum(rl.idnqty) idnqty,
        sum(rl.rcvqty) rcvqty,
        pf.ftpcod,
        round(pfd.len, 3) cs_l,
        round(pfd.wid, 3) cs_w,
        round(pfd.hgt, 3) cs_h,
        round(pfd.len*pfd.wid*pfd.hgt, 2) cs_vol,
        pfd.untqty cs_qty
   from rcvtrk rt
  inner
   join rcvinv ri
     on ri.trknum = rt.trknum
  inner
   join rcvlin rl
     on ri.invnum = rl.invnum
  inner
   join prtmst pm
     on rl.prtnum = pm.prtnum
    and rl.wh_id = pm.wh_id_tmpl
    and rl.prt_client_id = pm.prt_client_id
  inner
   join dss_prtmst dpm
     on rl.prtnum = dpm.prtnum
    and rl.wh_id = dpm.wh_id
    and rl.prt_client_id = dpm.prt_client_id
  inner
   join prtdsc pd
     on pd.colnam = 'prtnum|prt_client_id|wh_id_tmpl'
    and pd.colval = /*=varchar(*/ nvl(pm.prtnum, rtrim(' ')) || '|' || nvl(pm.prt_client_id, rtrim(' ')) || '|' || nvl(pm.wh_id_tmpl, rtrim(' ')) /*=)*/
  inner
   join (select colval prtcolor,
                lngdsc prtcolor_dsc
           from dscmst
          where colnam = 'prtcolor'
            and locale_id = 'US_ENGLISH') pcd
     on pm.prtcolor = pcd.prtcolor
  inner
   join (select colval prtsize,
                lngdsc prtsize_dsc
           from dscmst
          where colnam = 'prtsize'
            and locale_id = 'US_ENGLISH') psd
     on pm.prtsize = psd.prtsize
   left outer
   join prtftp pf
     on rl.prtnum = pf.prtnum
    and rl.wh_id = pf.wh_id
    and pf.defftp_flg = 1
   left outer
   join prtftp_dtl pfd
     on pf.prtnum = pfd.prtnum
    and pf.ftpcod = pfd.ftpcod
    and pf.wh_id = pfd.wh_id
    and pfd.uomcod = 'CS'
  where rt.clsdte is null
    and ri.invtyp not in ('MP', 'QM', 'SR', 'ZERE', 'SUP')
  group by rt.trknum,
        ri.invnum,
        ri.invtyp,
        ri.po_num,
        rl.prtnum,
        pd.lngdsc,
        psd.prtsize_dsc,
        pm.prtfam,
        dpm.merch_catg,
        dpm.generic,
        pcd.prtcolor_dsc,
        substr(rl.prtnum, 1, 5),
        pf.ftpcod,
        pfd.len,
        pfd.wid, 
        pfd.hgt,
        round(pfd.len*pfd.wid*pfd.hgt, 2),
        pfd.untqty
  order by rt.trknum,
        ri.invnum,
        rl.prtnum] catch(-1403) >> res
|
if (@? = 0)
{
list warehouses
|
    expand environment variable
     where name = '$' || @wh_id || 'outputs' || '\Inbound Report\'
    |
    publish data
     where path = @value
    |
    write csv file
     where resdata = @res
       and filnam = ' trknum_prtftp - ' || to_char(sysdate, 'YYYYMMDD - HH24MISS') || '.csv '
       and path = @path
},$LESDIR/log/usr_inbshp_prtftp.log,,0,0 0 5 * * ?,,,usr_data
USR_INT_ALERT_ERROR_IFDS,,Aritzia Alert of Error IFDs in Outbound Integration,0,cron,list warehouses
|
/*This query will get the count of stuck messages with the below statuses and a timestamp older than 10 minutes ago.*/
[select count(evt_data_seq) record_count
   from sl_evt_data
  where evt_stat_cd in ('SE', 'IE', 'IC', 'EE')
    and sys_id = 'DCS'
    and evt_dt < dateadd(minute, -10, sysdate)] catch(-1403)
|
if (@record_count > 0)
{
    expand environment variable
     where name = '$' || @wh_id || 'outputs '
    |
    [select case when charindex(' DEV ', @value) > 0 then ' BY DEV '
                 when charindex(' TST ', @value) > 0 then ' BY QA '
                 else ' BY PROD '
            end envdsc
       from dual]
    |
    get server information
    |
    publish data
     where hostname = ' azeus2smtp.jdadelivers.com '
       and mail_from = ' ITWMS - ' || @wh_id || ' Alerts @jdadelivers.com '
              and send_to = ' ITWMS - ' || @wh_id || ' Alerts @aritzia.com;
    jcwong @aritzia.com '
       and sys_url = @url
    |
    send email
     where subject = @envdsc || ' Integration Alert: ' || @record_count || ' Messages in Error(' || @sys_url || ') '
       and hostname = @hostname
       and mail_from = @mail_from
       and send_to = @send_to
       and message = ' There are ' || @record_count || ' message(s) found in the JDA Event Query. The Event Statuses to search for are SE, IE, IC,
       and EE for the Triggering System DCS(this represents outbound messages) . Alert issued from instance: ' || @sys_url || ' This alert was generated from Job USR_INT_ALERT_ERROR_IFDS
       and will trigger every 10 minutes until there are no further stuck messages.'
},,,0,0 3/10 * * * ?,,,les_data
USR_INT_MISSING_IFDS,,Aritzia Integration Downloads Missing IFDs,0,timer,[select dwnld_seq
   from sl_dwnld
  where ins_dt > (sysdate - 0.5 / 24)
 except
 select dwnld_seq
   from sl_ifd_data_hdr
  where ins_dt > (sysdate - 0.5 / 24)] catch(@?) >> res1
|
if (@? = 0)
{
    [[String listOut = '';
      while(res1.next())
      {
          if (listOut == '')
          {
            listOut = res1.getString('dwnld_seq');
          }
          else
          {
            listOut = listOut + ', ' + res1.getString('dwnld_seq');
          }
      }
      return listOut;]]
    |
     list warehouses
    |
     expand environment variable
     where name = '$' || @wh_id || 'outputs'
    |
    [select case when charindex('DEV', @value) > 0 then 'BY DEV'
                 when charindex('TST', @value) > 0 then 'BY QA'
                 else 'BY PROD'
            end envdsc
       from dual]
    |
	get server information
    |
    publish data
     where hostname = 'azeus2smtp.jdadelivers.com'
       and mail_from = 'ITWMS-'||@wh_id||'Alerts@jdadelivers.com'
       and send_to = ' jhutchinson @aritzia.com '
       and sys_url = @url
    |
    send email
     where subject = @envdsc || ' Integration Alert: Downloads with no IFD (' || @sys_url || ')'
       and hostname = @hostname
       and mail_from = @mail_from
       and send_to = @send_to
       and message = 'These download sequences are missing IFDs:
' || @result || '

View the download details using Download Viewer.  The file will need to be redropped into the inbound directory ie. UC_SAP_IN_P*
 
Alert issued from instance: ' || @sys_url || '

This alert was generated from Job USR_INT_MISSING_IFDS and runs every 30 minutes.'
},,,0,,60,1800,les_data
USR_INV_LOC,,Aritzia Inventory by Location Report,0,cron,list warehouses
|
[select ceil(convert(decimal, count(*)) / 150000) cnt
   from locmst loc
  inner
   join loc_typ lt
     on loc.loc_typ_id = lt.loc_typ_id
   left outer
   join (select iv.stoloc,
                iv.prtnum article,
                iv.invsts,
                count(distinct iv.subnum) cascnt,
                sum(iv.untqty) untqty
           from inventory_view iv
          inner
           join locmst loc
             on iv.stoloc = loc.stoloc
          inner
           join loc_typ lt
             on loc.loc_typ_id = lt.loc_typ_id
          where iv.ship_line_id is null
            and loc.useflg = 1
            and lt.sigflg = 1
            and loc.wh_id = @wh_id
            and iv.invsts not in ('WHS', 'DON')
          group by iv.prtnum,
                iv.stoloc,
                iv.invsts) invlst
     on invlst.stoloc = loc.stoloc
  where loc.useflg = 1
    and lt.sigflg = 1
    and loc.wh_id = @wh_id]
|
do loop
 where count = @cnt
|
{
    publish data
     where offset = @i * 150000
    |
    [/*#limit=@offset,@limit,true*/
     select loc.arecod area,
            loc.stoloc,
            loc.wrk_zone_id,
            loc.locacc,
            loc.curqvl,
            loc.maxqvl,
            nvl(invlst.article, '-') article,
            nvl(invlst.invsts, '-') invsts,
            nvl(invlst.untqty, 0) untqty,
            nvl(invlst.cascnt, 0) cascnt,
            nvl(invlst.merch_catg, '-') merch_catg
       from locmst loc
      inner
       join loc_typ lt
         on loc.loc_typ_id = lt.loc_typ_id
       left outer
       join (select iv.stoloc,
                    iv.prtnum article,
                    iv.invsts,
                    dpm.merch_catg,
                    count(distinct iv.subnum) cascnt,
                    sum(iv.untqty) untqty
               from inventory_view iv
              inner
               join locmst loc
                 on iv.stoloc = loc.stoloc
              inner
               join loc_typ lt
                 on loc.loc_typ_id = lt.loc_typ_id
              inner
               join dss_prtmst dpm
                 on iv.prtnum = dpm.prtnum
                and iv.prt_client_id = dpm.prt_client_id
                and iv.wh_id = dpm.wh_id
              where iv.ship_line_id is null
                and loc.useflg = 1
                and lt.sigflg = 1
                and loc.wh_id = @wh_id
                and iv.invsts not in ('WHS', 'DON')
              group by iv.prtnum,
                    iv.stoloc,
                    iv.invsts,
                    dpm.merch_catg) invlst
         on invlst.stoloc = loc.stoloc
      inner
       join aremst am
         on loc.arecod = am.arecod
        and loc.wh_id = am.wh_id
      where loc.useflg = 1
        and lt.sigflg = 1
        and loc.wh_id = @wh_id
      order by loc.stoloc,
            loc.locacc,
            loc.curqvl,
            loc.maxqvl] >> res
    |
    expand environment variable
     where name = '$' || @wh_id || 'outputs' || '\Inventory Snapshot'
    |
    publish data
     where path = @value
    |
    write csv file
     where resdata = @res
       and filnam = 'inv_location_' || to_char(@i + 1) || '_' || to_char(sysdate, ' YYYYMMDD - HH24MISS ') || '.csv '
       and path = @path
},$LESDIR/log/usr_inv_loc.log,,0,0 15 4,14 * * ?,,,usr_data
USR_INV_MULTIPF,,Aritzia Multi Pick Face Report,0,cron,[select iv.prtnum,
        iv.untqty,
        usr.loccnt,
        usr.totunt,
        loc.aisle_id,
        loc.stoloc,
        loc.curqvl,
        loc.maxqvl,
        sz.sto_zone_cod,
        pz.pcK_zone_cod,
        mz.mov_zone_cod,
        zm.wrkzon,
        max(loc.maxqvl) over(partition by iv.prtnum) glbmax,
        sum(loc.curqvl) over(partition by iv.prtnum) glbcur,
        max(loc.maxqvl) over(partition by iv.prtnum) - sum(loc.curqvl) over(partition by iv.prtnum) glbrem
   from (select prtnum,
                stoloc,
                count(distinct subnum) cscnt,
                sum(untqty) untqty
           from inventory_view
          where invsts in ('AVL', 'HLD', 'VAS', 'DNA')
          group by prtnum,
                stoloc) iv
  inner
   join (select iv.prtnum,
                count(distinct loc.stoloc) loccnt,
                sum(iv.untqty) totunt
           from inventory_view iv
          inner
           join locmst loc
             on iv.stoloc = loc.stoloc
          inner
           join loc_typ lt
             on loc.loc_typ_id = lt.loc_typ_id
          where lt.fwiflg = 1
            and loc.arecod = 'PICK'
            and loc.pckflg = 1
            and lt.sigflg = 1
          group by iv.prtnum
         having count(distinct (loc.stoloc)) > 1) usr
     on iv.prtnum = usr.prtnum
  inner
   join locmst loc
     on iv.stoloc = loc.stoloc
  inner
   join loc_typ lt
     on loc.loc_typ_id = lt.loc_typ_id
  inner
   join sto_zone sz
     on loc.sto_zone_id = sz.sto_zone_id
  inner
   join mov_zone mz
     on loc.mov_zone_id = mz.mov_zone_id
  inner
   join zonmst zm
     on loc.wrk_zone_id = zm.wrk_zone_id
  inner
   join pck_zone pz
     on loc.pck_zone_id = pz.pck_zone_id
  where lt.fwiflg = 1
    and loc.arecod = 'PICK'
    and loc.pckflg = 1
    and lt.sigflg = 1
  order by usr.loccnt desc,
        iv.prtnum,
        loc.stoloc] catch(-1403) >> res
|
if (@? = 0)
{
    list warehouses
    |
    expand environment variable
     where name = '$' || @wh_id || 'outputs' || '\Inventory Snapshot\'
    |
    publish data
     where path = @value
    |
    write csv file
     where resdata = @res
       and filnam = 'multipf_sku-' || to_char(sysdate, 'YYYYMMDD-HH24MISS') || '.csv '
       and path = @path
},$LESDIR/log/usr_inv_multipf.log,,0,0 45 3 * * ?,,,usr_data
USR_INV_MULTIRS,,Aritzia Multi Reserve Report,0,cron,list warehouses
|
[select iv.prtnum,
        iv.untqty,
        iv.cscnt,
        iv.ftpcod,
        usr.loccnt,
        usr.totunt,
        loc.aisle_id,
        loc.stoloc,
        loc.curqvl,
        loc.maxqvl,
        sz.sto_zone_cod,
        pz.pcK_zone_cod,
        mz.mov_zone_cod,
        zm.wrkzon,
        max(loc.maxqvl) over(partition by iv.prtnum, iv.ftpcod) glbmax,
        sum(loc.curqvl) over(partition by iv.prtnum, iv.ftpcod) glbcur,
        max(loc.maxqvl) over(partition by iv.prtnum, iv.ftpcod) - sum(loc.curqvl) over(partition by iv.prtnum, iv.ftpcod) glbrem
   from (select prtnum,
                ftpcod,
                stoloc,
                count(distinct subnum) cscnt,
                sum(untqty) untqty
           from inventory_view
          where invsts in ('AVL', 'HLD', 'VAS', 'DNA')
          group by prtnum,
                ftpcod,
                stoloc) iv
  inner
   join (select iv.prtnum,
                iv.ftpcod,
                count(distinct loc.stoloc) loccnt,
                sum(iv.untqty) totunt
           from inventory_view iv
          inner
           join locmst loc
             on iv.stoloc = loc.stoloc
          inner
           join loc_typ lt
             on loc.loc_typ_id = lt.loc_typ_id
          where lt.fwiflg = 1
            and loc.arecod = 'RESV'
            and lt.sigflg = 1
            and iv.invsts in ('AVL', 'HLD', 'VAS', 'DNA')
          group by iv.prtnum,
                iv.ftpcod
         having count(distinct (loc.stoloc)) > 1) usr
     on iv.prtnum = usr.prtnum
    and iv.ftpcod = usr.ftpcod
  inner
   join locmst loc
     on iv.stoloc = loc.stoloc
  inner
   join loc_typ lt
     on loc.loc_typ_id = lt.loc_typ_id
  inner
   join sto_zone sz
     on loc.sto_zone_id = sz.sto_zone_id
  inner
   join mov_zone mz
     on loc.mov_zone_id = mz.mov_zone_id
  inner
   join zonmst zm
     on loc.wrk_zone_id = zm.wrk_zone_id
  inner
   join pck_zone pz
     on loc.pck_zone_id = pz.pck_zone_id
  where lt.fwiflg = 1
    and loc.arecod = 'RESV'
    and lt.sigflg = 1
  order by glbrem desc,
        usr.loccnt desc,
        iv.prtnum,
        loc.stoloc] >> res
|
if (@? = 0)
{
    expand environment variable
     where name = '$' || @wh_id || 'outputs' || '\Inventory Snapshot'
    |
    publish data
     where path = @value
    |
    write csv file
     where resdata = @res
       and filnam = 'ultirs_sku-' || to_char(sysdate, 'YYYYMMDD-HH24MISS') || '.csv '
       and path = @path
},$LESDIR/log/usr_inv_multirs.log,,0,0 50 3 * * ?,,,usr_data
USR_INV_PACKSTG,,Aritzia Packed Carton Age Report,0,cron,{
    list warehouses
    |
    [select iv.stoloc,
            iv.subnum,
            iv.subucc,
            sl.ordnum,
            s.ship_id,
            s.carcod,
            s.srvlvl,
            s.early_shpdte,
            m.traknm traknm,
            max(m.mstdte) mstdte,
            max(iv.lstmov) lstmov,
            sum(iv.untqty) untqty
       from inventory_view iv
      inner
       join locmst loc
         on iv.stoloc = loc.stoloc
        and iv.wh_id = loc.wh_id
      inner
       join shipment_line sl
         on iv.ship_line_id = sl.ship_line_id
      inner
       join shipment s
         on sl.ship_id = s.ship_id
      inner
       join manfst m
         on iv.subnum = m.subnum
        and m.srvlvl <> 'RETURN'
      where loc.arecod = 'PACK'
        and loc.stoloc like '%STG'
      group by iv.stoloc,
            iv.subnum,
            iv.subucc,
            sl.ordnum,
            s.ship_id,
            s.carcod,
            s.srvlvl,
            s.early_shpdte,
            m.traknm
      order by lstmov] catch(@?) >> res
    |
    if (@? = 0)
    {
        expand environment variable
         where name = '$' || @wh_id || 'outputs' || '\Aged Packed Cartons'
        |
        publish data
         where path = @value
        |
        write csv file
         where resdata = @res
           and filnam = 'PACKSTG_' || to_char(sysdate, 'YYYYMMDD-HH24MISS') || '.csv '
           and path = @path
    }
};
{
    list warehouses
    |
    [select dly.to_lodnum,
            max(dly.trndte) lstmov
       from dlytrn dly
      inner
       join (select distinct lodnum
               from inventory_view
              where stoloc = ' PNDSHIP-01 ') lod
         on dly.to_lodnum = lod.lodnum
      group by dly.to_lodnum
      order by 2,
            1] catch(@?) >> res
    |
    if (@? = 0)
    {
        expand environment variable
         where name = ' $' || @wh_id || 'outputs' || '\Aged Packed Cartons\'
        |
        publish data
         where path = @value
        |
        write csv file
         where resdata = @res
           and filnam = 'PNDSHIP_' || to_char(sysdate, 'YYYYMMDD-HH24MISS') || '.csv '
           and path = @path
    }
};
{
    list warehouses
    |
    [select iv.stoloc,
            iv.lodnum,
            iv.subnum cur_subnum,
            iv.subucc cur_subucc,
            iv.dtlnum,
            pw.ordnum,
            pw.ship_ctnnum true_subnum,
            pw2.subucc true_subucc
       from inventory_view iv
      inner
       join pckwrk_view pw
         on iv.wrkref_dtl = pw.wrkref_dtl
      inner
       join pckwrk_view pw2
         on pw.ship_ctnnum = pw2.subnum
        and pw2.wrktyp = ' K '
      where iv.stoloc in (' STGSHIP - FDX ', ' STGSHIP - CPC ', ' STGSHIP - TFORCE ', ' STGSHIP - ATLAS ', ' PNDSHIP-01 ')
        and iv.subucc is null] catch(@?) >> res
    |
    if (@? = 0)
    {
        expand environment variable
         where name = '$' || @wh_id || 'outputs' || '\Aged Packed Cartons'
        |
        publish data
         where path = @value
        |
        write csv file
         where resdata = @res
           and filnam = 'NOSUBUCC_' || to_char(sysdate, 'YYYYMMDD-HH24MISS') || '.csv '
           and path = @path
    }
};,$LESDIR/log/usr_invpakstg.log,,0,0 0 7 ? * 2-6,,,usr_data
USR_INV_PRTNUM,,Aritzia Inventory by Item Report,0,cron,list warehouses
|
[/*#nolimit*/
 select iv.prtnum,
        iv.invsts,
        sum(iv.untqty) untqty
   from inventory_view iv
  inner
   join locmst loc
     on iv.stoloc = loc.stoloc
  inner
   join loc_typ lt
     on loc.loc_typ_id = lt.loc_typ_id
  where iv.ship_line_id is null
    and loc.useflg = 1
    and lt.fwiflg = 1
    and loc.wh_id = @wh_id
  group by iv.prtnum,
        iv.invsts
  order by iv.prtnum,
        iv.invsts] >> res
|
expand environment variable
 where name = '$' || @wh_id || 'outputs' || '\Inventory Snapshot\'
|
publish data
 where path = @value
|
write csv file
 where resdata = @res
   and filnam = 'znv_prtnum-' || to_char(sysdate, 'YYYYMMDD-HH24MISS') || '.csv '
   and path = @path,$LESDIR/log/usr_inv_prtnum.log,,0,0 30 4 * * ?,,,usr_data
USR_INV_SUPPLIES,,Aritzia Non Merch Inventory,0,cron,list warehouses
|
[select iv.prtnum,
        iv.invsts,
        loc.arecod,
        reverse(parsename(reverse(replace(pd.lngdsc, ', ', '.')), 2)) description,
        reverse(parsename(reverse(replace(pd.lngdsc, ', ', '.')), 3)) creative,
        reverse(parsename(reverse(replace(pd.lngdsc, ', ', '.')), 4)) creative_2,
        count(distinct iv.stoloc) locations,
        count(distinct iv.subnum) cases,
        sum(iv.untqty) quantity
   from inventory_view iv
  inner
   join locmst loc
     on iv.stoloc = loc.stoloc
    and iv.wh_id = loc.wh_id
  inner
   join prtmst_view pm
     on iv.prtnum = pm.prtnum
    and iv.prt_client_id = pm.prt_client_id
    and iv.wh_id = pm.wh_id
  inner
   join dss_prtmst dpm
     on iv.prtnum = dpm.prtnum
    and iv.prt_client_id = dpm.prt_client_id
    and iv.wh_id = dpm.wh_id
  inner
   join prtdsc pd
     on pd.colnam = 'prtnum|prt_client_id|wh_id_tmpl'
    and pd.colval = nvl(pm.prtnum, rtrim(' ')) || '|' || nvl(pm.prt_client_id, rtrim(' ')) || '|' || nvl(pm.wh_id, rtrim(' '))
  where pm.typcod = 'ZSUP'
    and loc.arecod not in ('CADJ', 'ADJS')
  group by iv.prtnum,
        loc.arecod,
        pd.lngdsc,
        iv.invsts] catch(@?) >> res
|
if (@? = 0)
{
    expand environment variable
     where name = '$' || @wh_id || 'outputs ' || ' \Inventory Snapshot\ '
    |
    publish data
     where path = @value
    |
    write csv file
     where resdata = @res
       and filnam = ' inv_supplies - ' || to_char(sysdate, ' YYYYMMDD - HH24MISS ') || ' .csv '
       and path = @path
},$LESDIR/log/usr_inv_prtnum.log,,0,0 0 9 * * ?,,,usr_data
USR_INV_VELOCITY,,Aritzia Velocity Report,0,cron,[select format(dateadd(month, datediff(month, 0, sysdate) -1, 0), 'MM-dd-yyyy') dte1,
        format(dateadd(month, datediff(month, 0, sysdate), 0), 'MM-dd-yyyy') dte2
   from dual]
|
[select prtnum,
        sum(pw.appqty) total_pick,
        count(pw.appqty) total_line
   from pckwrk_view pw
  inner
   join ord o
     on pw.ordnum = o.ordnum
    and pw.wh_id = o.wh_id
    and pw.client_id = o.client_id
  where pw.pckdte >= @dte1
    and pw.pckdte < @dte2
    and (pw.wrktyp = 'P' or pw.wrktyp = 'B')
    and o.ordtyp not in ('A01', 'A02', 'APH', 'MR', 'DCT', 'NFT')
  group by prtnum
  order by 1] >> res
|
list warehouses
|
expand environment variable
 where name = '$' || @wh_id || 'outputs' || '\Velocity Report'
|
publish data
 where path = @value
|
write csv file
 where resdata = @res
   and filnam = 'inv_velocity-' || to_char(sysdate, 'YYYYMMDD-HH24MISS') || '.csv '
   and path = @path,$LESDIR/log/usr_inv_velocity.log,,0,0 0 1 1 * ?,,,usr_data
USR_INV_VIEW_TEMP,,Aritzia Inventory View Snapshot for Boyne Move,0,cron,[select ceil(convert(decimal, count(*)) / 100000) cnt
   from inventory_view]
|
do loop
 where count = @cnt
|
{
    publish data
     where offset = @i * 100000
    |
    [/*#limit=@offset,@limit,true*/
     select *
       from inventory_view
      order by wh_id,
            stoloc,
            lodnum,
            subnum,
            dtlnum] >> res
    |
    list warehouses
    |
    expand environment variable
     where name = '$' || @wh_id || 'outputs' || '\Detailed Inventory'
    |
    publish data
     where path = @value
    |
    write csv file
     where resdata = @res
       and filnam = 'inventory_view_part' || to_char(@i + 1) || '_' || to_char(sysdate, 'YYYYMMDDHH24MISS') || '.csv '
       and path = @path
},$LESDIR/log/usr_inv_view.log,,0,0 0 4 * * ?,,,usr_data
USR_MPS_ALERT,,Aritzia US MPS Alert,0,cron,list warehouses
|
[select case when to_char(sysdate, 'd') between 2
         and 6 then 'WD'
             else 'WE'
        end dayofweek,
        to_char(sysdate, 'hh24mi') time,
        sysdate init
   from dual]
|
[select 'x' runchk
   from poldat_view
  where polcod = 'DSS-ARITZIA'
    and polvar = 'JOB-MASTER'
    and polval = 'MPS-ALERT'
    and wh_id = @wh_id
    and rtstr1 = @dayofweek
    and rtstr2 = @time] catch(-1403)
|
if (@runchk)
{
    expand environment variable
     where name = '$' || @wh_id || 'outputs' || '\MPS Alert\'
    |
    publish data
     where path = @value
    |
    [select *
       from (select o.ordnum,
                    o.ordtyp,
                    a.adrnam,
                    s.srvlvl,
                    F30 to_char(s.early_shpdte, 'MM-DD-YYYY') early_shpdte,
                    count(distinct pw.subnum) ctncnt,
                    count(distinct m.traknm) manfstcnt,
                    count(distinct m2.traknm) MPSlblcnt
               from pckwrk_view pw
              inner
               join ord o
                 on o.ordnum = pw.ordnum
                and o.wh_id = pw.wh_id
                and o.client_id = pw.client_id
              inner
               join adrmst a
                 on o.st_adr_id = a.adr_id
              inner
               join shipment s
                 on pw.ship_id = s.ship_id
              inner
               join (select rtstr1,
                            rtstr2,
                            wh_id
                       from poldat_view po
                      where po.polcod = 'DSS-ARITZIA'
                        and po.polval = 'MPS-GUARDRAIL') pv
                 on s.carcod = pv.rtstr1
                and s.srvlvl = pv.rtstr2
                and s.wh_id = pv.wh_id
               left outer
               join manfst m
                 on o.ordnum = m.ordnum
                and m.srvlvl <> 'RETURN'
               left outer
               join manfst m2
                 on o.ordnum = m2.ordnum
                and m2.srvlvl <> 'RETURN'
                and m2.mancls like 'MPS%'
              where pw.wrktyp = 'K'
                and o.ordtyp in ('E05', 'E07', 'E09', 'E11', 'G05', 'G07', 'R05', 'R07', 'S05', 'S07', 'S09', 'S11', 'P05', 'P07', 'I05', 'I07', 'M05', 'M07', 'H05', 'H07', 'J05', 'J07', 'K05', 'K07', 'L05', 'L07')
                and s.early_shpdte >= dateadd(day, datediff(day, 0, sysdate), 0)
              group by o.ordnum,
                    to_char(s.early_shpdte, 'MM-DD-YYYY'),
                    s.srvlvl,
                    o.ordtyp,
                    a.adrnam
             having count(pw.subnum) > 1) usr
      where (manfstcnt = 0 or manfstcnt <> mpslblcnt)
      order by srvlvl,
            ordnum] catch(-1403) >> res
    |
    if (@? = 0)
    {
        write csv file
         where resdata = @res
           and filnam = 'MPS_alert_' || to_char(sysdate, 'YYYYMMDD-HH24MI') || '.csv'
           and path = @path
    };
    list warehouses
    |
    expand environment variable
     where name = '$' || @wh_id || 'outputs' || '\MPS Alert\MPS_alert_' || to_char(sysdate, 'YYYYMMDD-HH24MI') || '.csv'
    |
    publish data
     where resfil = @value
    |
    find file
     where pathname = @resfil catch(@?)
    |
    if (@pathname = @resfil and @type = 'F')
    {
        expand environment variable
         where name = '$' || @wh_id || 'outputs'
        |
        [select case when charindex('DEV', @value) > 0 then 'BY DEV'
                     when charindex('TST', @value) > 0 then 'BY QA'
                     else 'BY PROD'
                end envdsc
           from dual]
        |
        publish data
         where hostname = 'azeus2smtp.jdadelivers.com'
           and mail_from = 'ITWMS-' || @wh_id || 'Alerts@jdadelivers.com '
           and send_to_list = 'supplychaintechteam@aritzia.com;
        mdixon@aritzia.com;
        OutboundOrders@aritzia.com;
        shipping@aritzia.com;
        chkim@aritzia.com;
        ege@aritzia.com;
        rorbeta@aritzia.com'
        |
        send email
         where subject = 'S321 MPS ALERT - ' || @envdsc
           and hostname = @hostname
           and mail_from = @mail_from
           and send_to = @send_to_list
           and message = 'The following US orders have multiple cartons packed being shipped today. Please see attached and triage.'
           and attachment = @resfil
    }
},$LESDIR/log/usr_mps_guardrail.log,,0,5 0/5 8-23 ? * * *,,,usr_data
USR_OPN_IS_ALERT,,Aritzia Open Inbound Shipment Alert,0,cron,list warehouses
|
[select trknum,
        expclose
   from (select trknum,
                trkdte,
                case when substr(trknum, instr(trknum, 'RTNS') + 10, 2) = 'PM' then trkdte + 1
                     else trkdte + (24 / (24 * 1.0))
                end expclose
           from (select trknum,
                        convert(datetime, substr(trkdte, 5, 2) + substr(trkdte, 1, 2) + substr(trkdte, 3, 2), 101) trkdte
                   from (select trknum,
                                substr(trknum, instr(trknum, 'RTNS') + 4, 6) trkdte
                           from RCVTRK
                          where rcvtrk_stat = 'R'
                            and trknum like '%RTN%') usr) usr) usr
  where sysdate > expclose
  order by expclose,
        trknum] catch(-1403) >> res
|
if (@? = 0)
{
    convert column results to string
     where resultset = @res
       and colnam = 'trknum'
       and separator = '
	   '
    |
    publish data
     where hostname = 'azeus2smtp.jdadelivers.com'
       and mail_from = 'ITWMS-' || @wh_id || 'Alerts@jdadelivers.com'
       and send_to_list = 'hsato@aritzia.com;chtang@aritzia.com;cumali@aritzia.com;ege@aritzia.com;eComInOrderExpeditor@aritzia.com;supplychaintechteam@aritzia.com'
       and trknum = @result_string
    |
    expand environment variable
     where name = '$' || @wh_id || 'outputs'
    |
    [select case when charindex('DEV', @value) > 0 then 'BY DEV'
                 when charindex('TST', @value) > 0 then 'BY QA'
                 else 'BY PROD'
            end envdsc
       from dual]
    |
    send email
     where subject = 'Inbound Shipments Still Open - ' || @envdsc
       and hostname = @hostname
       and mail_from = @mail_from
       and send_to = @send_to_list
       and message = 'The following Inbound Shipments are still open: ' || @trknum catch(@?)
}
else if (@? <> -1403)
{
    [select trknum
       from RCVTRK
      where rcvtrk_stat = 'R'
        and trknum like '%RTN%'] catch(-1403) >> res
    |
    if (@? = 0)
    {
        convert column results to string
         where resultset = @res
           and colnam = 'trknum'
           and separator = ','
        |
        publish data
         where hostname = 'azeus2smtp.jdadelivers.com'
           and mail_from = 'ITWMS-' || @wh_id || 'Alerts @jdadelivers.com'
           and send_to_list = 'hsato@aritzia.com;chtang@aritzia.com;cumali@aritzia.com;ege@aritzia.com;eComInOrderExpeditor@aritzia.com;supplychaintechteam@aritzia.com'
           and trknum = @result_string
        |
        expand environment variable
         where name = '$' || @wh_id || 'outputs'
        |
        [select case when charindex('DEV', @value) > 0 then 'BY DEV'
                     when charindex('TST', @value) > 0 then 'BY QA'
                     else 'BY PROD'
                end envdsc
           from dual]
        |
        send email
         where subject = 'Inbound Shipments Still Open - ' || !@envdsc
           and hostname = @hostname
           and mail_from = @mail_from
           and send_to = @send_to_list
           and message = 'The following Inbound Shipments are still open: ' || @trknum catch(@?)
    }
},$LESDIR/log/usr_opn_is_alert.log,,0,0 30 14 ? * * *,,,usr_data
USR_ORD_RPT,,Aritzia Order Statistics Reports,0,cron,{
    [select to_char(convert(date, adddte)) || ' ' || format(adddte, 'hh:mm tt') || ' , ' || to_char(avgtime) || ' , ' || to_char(maxtime) || ' , ' || to_char(ordcnt) || CHAR(13) string
       from (select dateadd(hour, datediff(hour, 0, adddte), 0) adddte,
                    round(avg(convert(float, datediff(second, entdte, adddte)) / 60), 3) avgtime,
                    round(max(convert(float, datediff(second, entdte, adddte)) / 60), 3) maxtime,
                    count(*) ordcnt
               from ord
              where adddte > dateadd(day, datediff(day, 0, sysdate), 0)
                and ordtyp not in ('ZSO', 'A01', 'APH', 'A02')
              group by dateadd(hour, datediff(hour, 0, adddte), 0)) usr
      order by adddte desc] catch(@?) >> res
    |
    if (@? = 0)
    {
        convert column results to string
         where colnam = 'string'
           and res = @res
           and separator = '
'
        |
        list warehouses
        |
        publish data
         where data = @result_string
           and hostname = 'azeus2smtp.jdadelivers.com'
           and mail_from = 'ITWMS-' || @wh_id || 'Alerts@jdadelivers.com'
           and send_to_list = 'supplychaintechteam@aritzia.com'
        |
        expand environment variable
         where name = '$' || @wh_id || 'outputs'
        |
        [select case when charindex('DEV', @value) > 0 then 'BY DEV'
                     when charindex('TST', @value) > 0 then 'BY QA'
                     else ' BY PROD '
                end envdsc
           from dual]
        |
        send email
         where subject = 'Integrator Order Processing Statistics - ' || @envdsc
           and hostname = @hostname
           and mail_from = @mail_from
           and send_to = @send_to_list
           and message = 'DATE, AVGTIME, MAXTIME, ORDCNT' || '' || @data
    }
};
{
    list warehouses
    |
    publish data
     where days = 1
    |
    [select to_char(format(dtegrp, 'MM-dd-yyyy hhtt')) || ' , ' || to_char(cancnt) || ' , ' || to_char(usacnt) string
       from (select hr.dtegrp,
                    nvl(canord.cancnt, 0) cancnt,
                    nvl(usaord.usacnt, 0) usacnt
               from (select dateadd(hour, colorder - 1, dateadd(day, datediff(day, 0, sysdate), 0)) dtegrp
                       from (select colorder
                               from syscolumns c1
                              inner
                               join (select top 1 c2.id
                                       from syscolumns c2
                                      group by c2.id
                                     having count(*) >= 24) c3
                                 on c1.id = c3.id
                              where colorder <= 24) hrs) hr
               left outer
               join (select dateadd(hour, datediff(hour, 0, o.adddte), 0) ordhr,
                            count(*) cancnt
                       from ord o
                      inner
                       join (select rtstr1 ordtyp,
                                    rtstr2 ordstr
                               from poldat_view pv
                              where pv.polcod = 'DSS-ARITZIA'
                                and pv.polvar = 'REPORTING'
                                and pv.polval = 'ORDTYP-XREF'
                                and pv.wh_id = @wh_id
                                and pv.rtstr2 like '%CAN ECOMM%') ot
                         on o.ordtyp = ot.ordtyp
                      where o.adddte > dateadd(day, datediff(day, 0, sysdate), 0)
                      group by dateadd(hour, datediff(hour, 0, o.adddte), 0)) canord
                 on hr.dtegrp = canord.ordhr
               left outer
               join (select dateadd(hour, datediff(hour, 0, o.adddte), 0) ordhr,
                            count(*) usacnt
                       from ord o
                      inner
                       join (select rtstr1 ordtyp,
                                    rtstr2 ordstr
                               from poldat_view pv
                              where pv.polcod = 'DSS-ARITZIA'
                                and pv.polvar = 'REPORTING'
                                and pv.polval = 'ORDTYP-XREF'
                                and pv.wh_id = @wh_id
                                and pv.rtstr2 like '%USA ECOMM%') ot
                         on o.ordtyp = ot.ordtyp
                      where o.adddte > dateadd(day, datediff(day, 0, sysdate), 0)
                      group by dateadd(hour, datediff(hour, 0, o.adddte), 0)) usaord
                 on hr.dtegrp = usaord.ordhr) data
      order by dtegrp] >> res
    |
    if (@? = 0)
    {
        convert column results to string
         where colnam = 'string'
           and res = @res
           and separator = '
'
        |
        publish data
         where data = @result_string
           and hostname = 'azeus2smtp.jdadelivers.com'
           and mail_from = 'ITWMS' || @wh_id || 'Alerts@jdadelivers.com'
           and send_to_list = 'supplychaintechteam@aritzia.com'
        |
        expand environment variable
         where name = '$' || @wh_id || 'outputs'
        |
        [select case when charindex('DEV', @value) > 0 then 'BY DEV'
                     when charindex('TST', @value) > 0 then 'BY QA'
                     else 'BY PROD'
                end envdsc
           from dual]
        |
        send email
         where subject = 'Order Drop Statistics - ' || @envdsc
           and hostname = @hostname
           and mail_from = @mail_from
           and send_to = @send_to_list
           and message = 'DATE , CANECOM , USAECOM
' || '
' || @data
    }
};,$LESDIR/log/ord_ord_rpt.log,,0,0 0 6-22 ? * * *,,,usr_data
USR_PCKMOV_ALERT,,Aritzia Pick Move Issue Alert,0,cron,{
    list warehouses
    |
    [select distinct iv.ship_id,
            s.shpsts,
            s.carcod,
            s.srvlvl,
            s.early_shpdte,
            s.stgdte,
            iv.stoloc,
            iv.lodnum,
            iv.subnum
       from inventory_pckwrk_view iv
      inner
       join locmst loc
         on iv.stoloc = loc.stoloc
        and iv.wh_id = loc.wh_id
      inner
       join loc_typ lt
         on loc.loc_typ_id = lt.loc_typ_id
      inner
       join shipment s
         on iv.ship_id = s.ship_id
       left outer
       join pckmov pm
         on iv.cmbcod = pm.cmbcod
        and pm.mov_zone_id = '10017'
        and pm.rescod is not null
        and pm.stoloc is not null
      where iv.ship_line_id is not null
        and lt.fwiflg = 1
        and pm.cmbcod is null] catch(-1403) >> res
    |
    if (@? = 0)
    {
        expand environment variable
         where name = '$' || @wh_id || 'outputs ' || ' \Glitched Order\ '
        |
        publish data
         where path = @value
        |
        write csv file
         where resdata = @res
           and filnam = ' staging_pckmov_ ' || to_char(sysdate, ' YYYYMMDD - HH24 ') || ' .csv '
           and path = @path
    }
};
list warehouses
|
expand environment variable
 where name = ' $' || @wh_id || 'outputs ' || ' \Glitched Order\staging_pckmov_ ' || to_char(sysdate, ' YYYYMMDD - HH24 ') || ' .csv '
|
publish data
 where resfil = @value
|
find file
 where pathname = @resfil catch(@?)
|
if (@pathname = @resfil and @type = ' F ')
{
    expand environment variable
     where name = ' $'$' || @wh_id || 'outputs' '
    |
    [select case when charindex(' DEV ', @value) > 0 then ' BY DEV '
                 when charindex(' TST ', @value) > 0 then ' BY QA '
                 else ' BY PROD '
            end envdsc
       from dual]
    |
    publish data
     where hostname = ' azeus2smtp.jdadelivers.com '
       and mail_from = ' ITWMS - ' || @wh_id || 'Alerts @jdadelivers.com '
 and send_to_list = ' supplychaintechteam @aritzia.com '
    |
    send email
     where subject = ' Staging Error Alert - ' || @envdsc
       and hostname = @hostname
       and mail_from = @mail_from
       and send_to = @send_to_list
       and message = ' Attached cartons have pckmov entry issues. Please see attached.'
       and attachment = @resfil
},$LESDIR/log/usr_pckmov_alert.log,,0,0 0 6-23 ? * 2-6 *,,,usr_data
USR_PIC_LOC_LOG,,Aritzia PIC Hourly Location Log,0,cron,list warehouses
|
[/*#nolimit*/
 select loc.arecod area,
        loc.stoloc,
        loc.wrk_zone_id,
        loc.locacc,
        loc.curqvl,
        loc.maxqvl,
        nvl(invlst.article, '-') article,
        nvl(invlst.invsts, '-') invsts,
        nvl(invlst.untqty, 0) untqty,
        nvl(invlst.cascnt, 0) cascnt
   from locmst loc
  inner
   join loc_typ lt
     on loc.loc_typ_id = lt.loc_typ_id
   left outer
   join (select iv.stoloc,
                iv.prtnum article,
                iv.invsts,
                count(distinct iv.subnum) cascnt,
                sum(iv.untqty) untqty
           from inventory_view iv
          inner
           join locmst loc
             on iv.stoloc = loc.stoloc
          inner
           join loc_typ lt
             on loc.loc_typ_id = lt.loc_typ_id
          where iv.ship_line_id is null
            and loc.useflg = 1
            and lt.sigflg = 1
            and loc.wh_id = @wh_id
            and iv.invsts not in ('WHS', 'DON', 'QM', 'DES', 'RTV')
          group by iv.prtnum,
                iv.stoloc,
                iv.invsts) invlst
     on invlst.stoloc = loc.stoloc
  inner
   join aremst am
     on loc.arecod = am.arecod
    and loc.wh_id = am.wh_id
  where loc.useflg = 1
    and lt.sigflg = 1
    and loc.wh_id = @wh_id
  order by loc.stoloc,
        loc.locacc,
        loc.curqvl,
        loc.maxqvl] >> res
|
expand environment variable
 where name = '$' || @wh_id || 'outputs ' || ' \Physical Inventory\ '
|
publish data
 where path = @value
|
write csv file
 where resdata = @res
   and filnam = ' inv_location - ' || to_char(sysdate, ' YYYYMMDD - HH24MISS ') || ' .csv '
   and path = @path,$LESDIR/log/usr_pic_loc.log,,0,0 10 6-23 4,5,6 2 ? 2022,,,usr_data
USR_PRTFAMUPD_TLCHIVOL,,Aritzia Item Family Update TLC-HI_VOL,0,cron,list warehouses
|
[select dss.prtnum,
        prtmst.prtfam old_prtfam
   from dss_prtmst dss
  inner
   join inventory_view inv
     on dss.prtnum = inv.prtnum
    and dss.prt_client_id = inv.prt_client_id
    and dss.wh_id = inv.wh_id
  inner
   join prtmst
     on dss.prtnum = prtmst.prtnum
    and dss.prt_client_id = prtmst.prt_client_id
    and dss.wh_id = prtmst.wh_id_tmpl
        /* Looking for all coats and jackets with WOOL, excluding blazers and shirt jackets */
  where dss.merch_catg in ('COAT', 'JACKET')
    and dss.customs_descr like '%WOOL%'
    and (dss.style_en not like '%BLAZER%' and dss.style_en not like '%SHIRT%')
 /* items where item family is not already TLC-HI_VOL */
    and prtmst.prtfam <> 'TLC-HI_VOL'
    and prtmst.wh_id_tmpl = @wh_id
  group by dss.prtnum,
        prtmst.prtfam] catch(-1403)
|
if (@? = 0)
{
    [update prtmst
        set prtfam = 'TLC-HI_VOL',
            last_upd_dt = sysdate,
            last_upd_user_id = 'NOUSER'
      where prtnum = @prtnum
        and wh_id_tmpl = @wh_id] catch(@?)
    |
    if (@? = 0)
    {
        write output file
         where filnam = 'usr_prtfam_update_TLC.log'
           and data = sysdate || ',' || @prtnum || ',' || @old_prtfam || ',' || 'Item family TLC-HI_VOL update successful'
           and newline = 'Y'
           and mode = 'A'
           and path = '$LESDIR/log'
    }
    else
    {
        write output file
         where filnam = 'usr_prtfam_update_TLC.log'
           and data = sysdate || ',' || @prtnum || ',' || @old_prtfam || ',' || 'Item family TLC-HI_VOL update failure'
           and newline = 'Y'
           and mode = 'A'
           and path = '$LESDIR/log'
    }
},$LESDIR/log/usr_prtfamupd_tlchivol.log,,0,5 5 5-23 ? * * *,,,usr_data
USR_PRTFTP_LOG,,Aritzia Footprint Master,0,cron,list warehouses
|
[select ceil(convert(decimal, count(*)) / 100000) cnt
   from prtftp
  where defftp_flg = 1
    and wh_id = @wh_id]
|
do loop
 where count = @cnt
|
{
    publish data
     where offset = @i * 100000
    |
    [/*#limit=@offset,@limit,true*/
     select pf.prtnum,
            ap.alt_prtnum,
            pf.ftpcod,
            pfd2.len,
            pfd2.wid,
            pfd2.hgt,
            decode(instr(pf.ftpcod, 'Q'), 0, pf.ftpcod, decode(instr(pf.ftpcod, 'T'), 0, pf.ftpcod, substr(pf.ftpcod, instr(pf.ftpcod, 'Q', 1) + 1, instr(pf.ftpcod, 'T', 1) - instr(pf.ftpcod, 'Q', 1) -1))) untcas,
            decode(instr(pf.ftpcod, 'T'), 0, pf.ftpcod, decode(instr(pf.ftpcod, 'H'), 0, pf.ftpcod, substr(pf.ftpcod, instr(pf.ftpcod, 'T', 1) + 1, instr(pf.ftpcod, 'H', 1) - instr(pf.ftpcod, 'T', 1) -1))) ti,
            substr(pf.ftpcod, instr(pf.ftpcod, 'H', 1) + 1, length(pf.ftpcod) - instr(pf.ftpcod, 'H', 1)) hi,
            pfd.grswgt / 16 ea_wgt,
            pfd2.grswgt / 16 cs_wgt
       from prtftp pf
      inner
       join alt_prtmst ap
         on pf.prtnum = ap.prtnum
        and ap.alt_prt_typ = 'UPCCOD'
        and pf.prt_client_id = ap.prt_client_id
      inner
       join prtftp_dtl pfd
         on pf.prtnum = pfd.prtnum
        and pf.prt_client_id = pfd.prt_client_id
        and pf.wh_id = pfd.wh_id
        and pf.ftpcod = pfd.ftpcod
        and pfd.uomcod = 'EA'
      inner
       join prtftp_dtl pfd2
         on pf.prtnum = pfd2.prtnum
        and pf.prt_client_id = pfd2.prt_client_id
        and pf.wh_id = pfd2.wh_id
        and pf.ftpcod = pfd2.ftpcod
        and pfd2.uomcod = 'CS'
      where pf.defftp_flg = 1
        and pf.wh_id = @wh_id
      order by pf.prtnum] >> res
    |
    expand environment variable
     where name = '$' || @wh_id || 'outputs' || '\Footprint Master'
    |
    publish data
     where path = @value
    |
    write csv file
     where resdata = @res
       and filnam = ' prtftp_mst_' || to_char(@i + 1) || '_' || to_char(sysdate, 'YYYYMMDDHH24MISS') || '.csv '
       and path = @path
},$LESDIR/log/usr_prtftp_log.log,,0,0 0 3 ? * 1,,,usr_data
USR_RATINGTEST,,Aritzia Temp Parcel Rate Test,0,timer,list warehouses
|
[select top 1 iv.subnum
   from inventory_pckwrk_view iv
  inner
   join shipment s
     on iv.ship_id = s.ship_id
  where iv.subnum like 'SHP%'
    and s.carcod = 'FDXAIRCAN'
    and s.srvlvl = '3DAIR8P'
    and (iv.stoloc = 'PNDSHIP-01' or iv.stoloc like 'STN%STG')
  group by iv.subnum] catch(-1403)
|
if (@? = 0)
{
    rate pm package
     WHERE weight = 1.6
       AND height = 0.75
       AND length = 14
       AND width = 10
       AND ltlcls = ''
       AND pakval = ''
       AND stname = 'FAKE RATING'
       AND stadd1 = '415 Boyne Street'
       AND stcity = 'New Westminster'
       AND ststcd = 'BC'
       AND stposc = 'V3M5K2'
       AND stphon = '7783312240'
       AND carcod = 'FDXAIRCAN'
       AND srvlvl = '3DAIR8P'
       AND stcnty = 'CAN'
       AND strsaf = 0
       AND wh_id = @wh_id
       AND dry_ice_wgt = ''
       AND dry_ice_flg = 0
       AND cod_ind_type = 0
       AND pkgcod = ''
       AND paytrm = 'PRD'
       AND carsrv_param_list = null
       AND shpdte = '20210420000000'
       and invtid = @subnum catch(@?)
},,,0,,60,20,
USR_RCVFLG,,Aritzia Receivable &amp; Production Flag,0,cron,list warehouses
|
[update prtmst
    set rcvflg = 1
  where prtnum in (select distinct prtnum
                     from prtftp
                    where defftp_flg = 1)
    and wh_id_tmpl = @wh_id
    and rcvflg = 0] catch(@?);
[update prtmst
    set prdflg = 0
  where prdflg = 1
    and typcod = 'ZSUP'] catch(@?);,$LESDIR/log/usr_rcvflg.log,,0,0 5,35 * * * ?,,,usr_data
USR_RPT_AGED_ORDERS,,Aritzia Report - Aged Orders (Hourly),0,cron,[/*#nolimit*/
 SELECT (CONVERT(VARCHAR(10), o.adddte, 103)) order_drop_date,
        CONVERT(VARCHAR(8), o.adddte, 108) order_drop_time,
        o.ordnum order_number,
        sh.carcod carrier,
        sh.srvlvl service,
        sl.schbat wave,
        o.ordtyp order_type,
        CASE WHEN pd.rtstr2 = 'USA ORDER DELIVERY' THEN 'US ECOMM'
             WHEN pd.rtstr2 = 'USA MARKETPLACE' THEN 'US ECOMM'
             WHEN pd.rtstr2 = 'USA ECOMM' THEN 'US ECOMM'
             WHEN pd.rtstr2 = 'INT ECOMM' THEN 'US ECOM'
             WHEN pd.rtstr2 = 'CAN ORDER DELIVERY' THEN 'CAN ECOMM'
             WHEN pd.rtstr2 = 'CAN ECOMM' THEN 'CAN ECOMM'
        END as channel,
        sl.prtnum variant,
        ip.pckqty requested_units,
        ip.appqty picked_units,
        ip.stoloc location,
        CONVERT(VARCHAR(10), ip.lstdte, 103) activity_date,
        CONVERT(VARCHAR(8), ip.lstdte, 108) activity_time,
        CONVERT(VARCHAR(10), ip.prtdte, 103) print_date,
        CONVERT(VARCHAR(8), ip.prtdte, 108) print_time,
        ip.lodnum load_number,
        ip.subnum sub_number,
        sl.ship_id ship_number,
        mft.traknm tracking_number,
        CONVERT(VARCHAR(10), mft.mft_date, 103) manifest_date,
        CONVERT(VARCHAR(8), mft.mft_time, 108) manifest_time,
        CONVERT(VARCHAR(10), mft.ship_date, 103) shipping_date,
        sh.shpsts ship_status
   FROM ord o
  inner
   JOIN (select rtstr1,
                rtstr2
           from poldat pd
          where pd.polcod = 'DSS-ARITZIA'
            AND pd.polval = 'ORDTYP-XREF'
            AND pd.rtstr2 IN ('USA ORDER DELIVERY', 'USA MARKETPLACE', 'USA ECOMM', 'INT ECOMM', 'CAN ORDER DELIVERY', 'CAN ECOMM')
            and pd.wh_id_tmpl = '----') pd
     ON pd.rtstr1 = o.ordtyp
   LEFT
   JOIN (SELECT sl.ordnum,
                wh_id,
                prt_client_id,
                client_id,
                ship_id,
                ship_line_id,
                prtnum,
                schbat
           FROM shipment_line sl
          WHERE sl.moddte between to_char(sysdate - 14, 'YYYY-MM-DD')
            AND to_char(sysdate + 1, 'YYYY-MM-DD')
            and sl.linsts <> 'B'
          group by sl.ordnum,
                wh_id,
                prt_client_id,
                ship_id,
                prtnum,
                schbat,
                client_id,
                ship_line_id) sl
     ON sl.ordnum = o.ordnum
    and sl.wh_id = o.wh_id
    and sl.client_id = o.client_id
   LEFT
   JOIN shipment sh
     ON sh.ship_id = sl.ship_id
   LEFT
   JOIN inventory_pckwrk_view ip
     ON ip.ship_line_id = sl.ship_line_id
   LEFT
   JOIN prtmst pt
     ON pt.prtnum = sl.prtnum
    AND pt.wh_id_tmpl = sl.wh_id
    AND pt.prt_client_id = sl.prt_client_id
   LEFT
   JOIN (SELECT mft.ordnum,
                mft.traknm,
                mft.subnum,
                mft.mstdte mft_date,
                mft.shpdte ship_date,
                mft.mstdte mft_time
           from manfst mft
          WHERE mft.srvlvl <> 'RETURN'
            AND mft.mstdte between to_char(sysdate - 14, 'YYYY-MM-DD')
            AND to_char(sysdate + 1, 'YYYY-MM-DD')) mft
     ON o.ordnum = mft.ordnum
    and ip.subnum = mft.subnum
  WHERE o.adddte between to_char(sysdate - 14, 'YYYY-MM-DD')
    AND to_char(sysdate + 1, 'YYYY-MM-DD')
    and sh.shpsts NOT IN ('B', 'C', 'S')
    AND pt.rcvflg = 1
  group by o.adddte,
        o.ordnum,
        sh.carcod,
        sh.srvlvl,
        sl.schbat,
        o.ordtyp,
        pd.rtstr2,
        sl.prtnum,
        ip.pckqty,
        ip.appqty,
        ip.stoloc,
        ip.lstdte,
        ip .prtdte,
        ip.lodnum,
        ip.subnum,
        sl.ship_id,
        mft.traknm,
        mft.mft_date,
        mft.mft_time,
        mft.ship_date,
        sh.shpsts
  ORDER BY order_drop_date,
        order_drop_time,
        o.ordnum,
        sl.prtnum] >> res
|
if (@? = 0)
{
    list warehouses
    |
    expand environment variable
     where name = '$' || @wh_id || 'outputs' || '\Aged Orders\'
    |
    publish data
     where path = @value
    |
    write csv file
     where resdata = @res
       and filnam = 'aged_orders-' || to_char(sysdate, 'YYYYMMDD-hh24mi') || '.csv'
       and path = @path
},$LESDIR/log/usr_rpt_agedorders.log,,0,0 0 0,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23 ? * * *,,,usr_data
USR_RPT_AGED_ORDERS 2,,Aritzia Report - Aged Orders (Half Hour),0,cron,[SELECT (CONVERT(VARCHAR(10), o.adddte, 103)) order_drop_date,
        CONVERT(VARCHAR(8), o.adddte, 108) order_drop_time,
        o.ordnum order_number,
        sh.carcod carrier,
        sh.srvlvl service,
        sl.schbat wave,
        o.ordtyp order_type,
        CASE WHEN pd.rtstr2 = 'USA ORDER DELIVERY' THEN 'US ECOMM'
             WHEN pd.rtstr2 = 'USA MARKETPLACE' THEN 'US ECOMM'
             WHEN pd.rtstr2 = 'USA ECOMM' THEN 'US ECOMM'
             WHEN pd.rtstr2 = 'INT ECOMM' THEN 'US ECOM'
             WHEN pd.rtstr2 = 'CAN ORDER DELIVERY' THEN 'CAN ECOMM'
             WHEN pd.rtstr2 = 'CAN ECOMM' THEN 'CAN ECOMM'
        END as channel,
        sl.prtnum variant,
        ip.pckqty requested_units,
        ip.appqty picked_units,
        ip.stoloc location,
        CONVERT(VARCHAR(10), ip.lstdte, 103) activity_date,
        CONVERT(VARCHAR(8), ip.lstdte, 108) activity_time,
        CONVERT(VARCHAR(10), ip.prtdte, 103) print_date,
        CONVERT(VARCHAR(8), ip.prtdte, 108) print_time,
        ip.lodnum load_number,
        ip.subnum sub_number,
        sl.ship_id ship_number,
        mft.traknm tracking_number,
        CONVERT(VARCHAR(10), mft.mft_date, 103) manifest_date,
        CONVERT(VARCHAR(8), mft.mft_time, 108) manifest_time,
        CONVERT(VARCHAR(10), mft.ship_date, 103) shipping_date,
        sh.shpsts ship_status
   FROM ord o
  inner
   JOIN (select rtstr1,
                rtstr2
           from poldat pd
          where pd.polcod = 'DSS-ARITZIA'
            AND pd.polval = 'ORDTYP-XREF'
            AND pd.rtstr2 IN ('USA ORDER DELIVERY', 'USA MARKETPLACE', 'USA ECOMM', 'INT ECOMM', 'CAN ORDER DELIVERY', 'CAN ECOMM')
            and pd.wh_id_tmpl = '----') pd
     ON pd.rtstr1 = o.ordtyp
   LEFT
   JOIN (SELECT sl.ordnum,
                wh_id,
                prt_client_id,
                client_id,
                ship_id,
                ship_line_id,
                prtnum,
                schbat
           FROM shipment_line sl
          WHERE sl.moddte between to_char(sysdate - 7, 'YYYY-MM-DD')
            AND to_char(sysdate + 1, 'YYYY-MM-DD')
            and sl.linsts <> 'B'
          group by sl.ordnum,
                wh_id,
                prt_client_id,
                ship_id,
                prtnum,
                schbat,
                client_id,
                ship_line_id) sl
     ON sl.ordnum = o.ordnum
    and sl.wh_id = o.wh_id
    and sl.client_id = o.client_id
   LEFT
   JOIN shipment sh
     ON sh.ship_id = sl.ship_id
   LEFT
   JOIN inventory_pckwrk_view ip
     ON ip.ship_line_id = sl.ship_line_id
   LEFT
   JOIN prtmst pt
     ON pt.prtnum = sl.prtnum
    AND pt.wh_id_tmpl = sl.wh_id
    AND pt.prt_client_id = sl.prt_client_id
   LEFT
   JOIN (SELECT mft.ordnum,
                mft.traknm,
                mft.subnum,
                mft.mstdte mft_date,
                mft.shpdte ship_date,
                mft.mstdte mft_time
           from manfst mft
          WHERE mft.srvlvl <> 'RETURN'
            AND mft.mstdte between to_char(sysdate - 7, 'YYYY-MM-DD')
            AND to_char(sysdate + 1, 'YYYY-MM-DD')) mft
     ON o.ordnum = mft.ordnum
    and ip.subnum = mft.subnum
  WHERE o.adddte between to_char(sysdate - 7, 'YYYY-MM-DD')
    AND to_char(sysdate + 1, 'YYYY-MM-DD')
    and sh.shpsts NOT IN ('B', 'C', 'S')
    AND pt.rcvflg = 1
  group by o.adddte,
        o.ordnum,
        sh.carcod,
        sh.srvlvl,
        sl.schbat,
        o.ordtyp,
        pd.rtstr2,
        sl.prtnum,
        ip.pckqty,
        ip.appqty,
        ip.stoloc,
        ip.lstdte,
        ip .prtdte,
        ip.lodnum,
        ip.subnum,
        sl.ship_id,
        mft.traknm,
        mft.mft_date,
        mft.mft_time,
        mft.ship_date,
        sh.shpsts
  ORDER BY order_drop_date,
        order_drop_time,
        o.ordnum,
        sl.prtnum] >> res
|
if (@? = 0)
{
    list warehouses
    |
    expand environment variable
     where name = '$' || @wh_id || 'outputs ' || ' \Aged Orders\'
    |
    publish data
     where path = @value
    |
    write csv file
     where resdata = @res
       and filnam = 'aged_orders-' || to_char(sysdate, 'YYYYMMDD-hh24mi') || '.csv'
       and path = @path
},$LESDIR/log/usr_rpt_agedorders2.log,,0,0 30 11-18 ? * * *,,,usr_data
USR_RPT_CMDPROFILE,,Aritzia Report - Command Profile,0,cron,{
    list warehouses
    |
    list command usage >> res
    |
    expand environment variable
     where name = '$' || @wh_id || 'outputs' || '\Command Profile\'
    |
    publish data
     where path = @value
    |
    write csv file
     where resdata = @res
       and filnam = 'command_profile_' || to_char(sysdate, 'YYYYMMDD-HH24') || '.csv '
       and path = @path
};
{
    list warehouses
    |
    expand environment variable
     where name = '$' || @wh_id || 'outputs' || '\Command Profile\command_profile_' || to_char(sysdate, 'YYYYMMDD-HH24') || '.csv '
    |
    publish data
     where resfil = @value
    |
    find file
     where pathname = @resfil catch(@?)
    |
    if (@pathname = @resfil and @type = ' F ')
    {
        clear command usage
    }
    else
    {
        publish data
         where hostname = ' azeus2smtp.jdadelivers.com '
           and mail_from = 'ITWMS-' || @wh_id || 'Alerts@jdadelivers.com '
        {
            list warehouses
            |
            list command usage >> res
            |
            expand environment variable
             where name = '$' || @wh_id || 'outputs' || '\Command Profile\'
            |
            publish data
             where path = @value
            |
            write csv file
             where resdata = @res
               and filnam = 'command_profile_' || to_char(sysdate, 'YYYYMMDD-HH24') || '.csv '
               and path = @path
        };
        {
            list warehouses
            |
            expand environment variable
             where name = '$' || @wh_id || 'outputs' || ' \Command Profile\command_profile_' || to_char(sysdate, 'YYYYMMDD-HH24') || '.csv '
            |
            publish data
             where resfil = @value
            |
            find file
             where pathname = @resfil catch(@?)
            |
            if (@pathname = @resfil and @type = ' F ')
            {
                clear command usage
            }
            else
            {
                publish data
                 where hostname = ' azeus2smtp.jdadelivers.com '
                   and mail_from = 'ITWMS-' || @wh_id || 'Alerts@jdadelivers.com '
                   and send_to_list = ' supplychaintechteam @aritzia.com '
        |
                hide stack variable
                 where name = ' pathname '
                |
                send email
                 where subject = ' Command Profile Extract - BY PRD '
                   and hostname = @hostname
                   and mail_from = @mail_from
                   and send_to = @send_to_list
                   and message = ' Job USR_RPT_CMDPROFILE Failed to Find a Command Profile Extract.'
            }
        };
        |
        hide stack variable
         where name = ' pathname '
        |
        send email
         where subject = ' Command Profile Extract - BY PRD '
           and hostname = @hostname
           and mail_from = @mail_from
           and send_to = @send_to_list
           and message = ' Job USR_RPT_CMDPROFILE Failed to Find a Command Profile Extract.'
    }
};,$LESDIR/log/usr_rpt_cmdprofile.log,,0,0 0 5 1 * ? *,,,usr_data
USR_RPT_CNT_AT_ZERO,,Aritzia Report - Count At Zero SKU Burn,0,cron,
/*Count at Zero SKU Burn*/
[SELECT to_char(ch.cntdte, 'YYYY-MM-DD') cnt_date,
        CASE WHEN maxqvl >= 92000 THEN 'BULK'
             WHEN maxqvl >= 14000 THEN 'XL'
             WHEN maxqvl >= 6400 THEN 'L'
             WHEN maxqvl >= 3500 THEN 'M'
             WHEN maxqvl >= 2400 THEN 'S'
        END AS bin_type,
        COUNT(ch.stoloc) locations
   FROM cnthst ch
  INNER
   JOIN locmst lc
     ON lc.stoloc = ch.stoloc
  WHERE cnttyp = 'Z'
  GROUP BY to_char(ch.cntdte, 'YYYY-MM-DD'),
        CASE WHEN maxqvl >= 92000 THEN 'BULK'
             WHEN maxqvl >= 14000 THEN 'XL'
             WHEN maxqvl >= 6400 THEN 'L'
             WHEN maxqvl >= 3500 THEN 'M'
             WHEN maxqvl >= 2400 THEN 'S'
        END
  ORDER BY cnt_date desc,
        bin_type] >> res
|
list warehouses
|
expand environment variable
 where name = '$' || @wh_id || 'outputs' || '\Working Files'
|
publish data
 where path = @value
|
write csv file
 where resdata = @res
   and filnam = 'count_at_zero_sku_burn-' || to_char(sysdate, 'YYYYMMDD-HH24MISS') || '.csv '
   and path = @path;,$LESDIR/log/usr_rpt_CNT_AT_ZERO.log,,0,0 10 0 ? * *,,,usr_data
USR_RPT_HST_ER,,Aritzia Report - Historical ERs,0,cron,[select format(dateadd(day, -1, getdate()), 'MM-dd-yyyy') dte1,
        format(dateadd(day, 0, getdate()), 'MM-dd-yyyy') dte2
   from dual]
|
[select d.trndte,
        d.oprcod,
        d.actcod,
        d.lodnum,
        d.subnum,
        d.to_lodnum,
        d.to_subnum,
        left(d.prtnum, 5) as generic,
        d.prtnum,
        d.trnqty,
        d.fr_arecod,
        d.frstol,
        d.frinvs,
        d.to_arecod,
        d.tostol,
        l.def_maxqvl,
        d.usr_id
   from dlytrn d
  inner
   join locmst l
     on d.frstol = l.stoloc
  inner
   join (select subnum
           from dlytrn
          inner
           join (select *
                   from poldat
                  where polcod = 'DSS-ARITZIA'
                    and polvar = 'CASEPICK'
                    and rtstr2 = 'EMERGENCY RPLN') rep
             on oprcod = rep.rtstr1
          where fr_arecod = 'RESV'
            and trndte >= @dte1
            and trndte < @dte2) usr
     on d.subnum = usr.subnum
  where d.fr_arecod in ('RESV')
    and d.to_arecod in ('RDTS000001')
    and d.oprcod is not null
    and actcod in ('CASRPL')
    and d.trndte >= @dte1
    and d.trndte < @dte2
 union
 select d.trndte,
        d.oprcod,
        d.actcod,
        d.lodnum,
        d.subnum,
        d.to_lodnum,
        d.to_subnum,
        left(d.prtnum, 5) as generic,
        d.prtnum,
        d.trnqty,
        d.fr_arecod,
        d.frstol,
        d.frinvs,
        d.to_arecod,
        d.tostol,
        l.def_maxqvl,
        d.usr_id
   from dlytrn d
  inner
   join locmst l
     on d.tostol = l.stoloc
  inner
   join (select subnum
           from dlytrn
          inner
           join (select *
                   from poldat
                  where polcod = 'DSS-ARITZIA'
                    and polvar = 'CASEPICK'
                    and rtstr2 = 'EMERGENCY RPLN') rep
             on oprcod = rep.rtstr1
          where fr_arecod = 'RESV'
            and trndte >= @dte1
            and trndte < @dte2) usr
     on d.subnum = usr.subnum
  where d.fr_arecod in ('RDTS000001')
    and d.to_arecod in ('PICK')
    and d.oprcod is not null
    and actcod in ('CS_XFR')
    and d.trndte >= @dte1
    and d.trndte < @dte2] >> res
|
list warehouses
|
expand environment variable
 where name = '$' || @wh_id || 'outputs' || '\Working Files'
|
publish data
 where path = @value
|
write csv file
 where resdata = @res
   and filnam = 'historical_ERs-' || to_char(sysdate, 'YYYYMMDD-HH24MISS') || '.csv '
   and path = @path;,$LESDIR/log/usr_rpt_hst_er.log,,0,0 0 1 ? * * *,,,usr_data
USR_RPT_HST_PCKS,,Aritzia Report - Historical Picks,0,cron,[select format(dateadd(day, -1, getdate()), 'MM-dd-yyyy') dte1
   from dual]
|
[select /*#nolimit*/
        o.entdte,
        pw.adddte as alocdte,
        pw.prtdte,
        pw.pckdte,
        pw.oprcod,
        o.ordtyp,
        pw.carcod,
        pw.srvlvl,
        pw.ship_id,
        pw.list_id,
        dly.movref,
        pw.ordnum,
        pw.ordlin,
        pw.srcloc,
        pw.ship_ctncod,
        pw.prtnum,
        pw.pckqty,
        pw.appqty,
        (fp.len*fp.wid*fp.hgt) cubic_vol,
        pw.src_pck_zone_id,
        pz.pck_zone_cod,
        last_pck_usr_id
   from shipping_pckwrk_view pw
  inner
   join dlytrn dly
     on pw.list_id = dly.lodnum
  inner
   join pck_zone pz
     on pw.src_pck_zone_id = pz.pck_zone_id
  inner
   join ord o
     on o.ordnum = pw.ordnum
   left
   join prtftp_dtl fp
     on pw.wh_id = fp.wh_id
    and pw.client_id = fp.prt_client_id
    and pw.prtnum = fp.prtnum
    and pw.ftpcod = fp.ftpcod
    and pw.pck_uom = fp.uomcod
  where pw.wrktyp = 'P'
    and pw.oprcod = 'LPCK'
    and dly.actcod = 'WASTART'
    and pw.pckdte > @dte1] >> res
|
list warehouses
|
expand environment variable
 where name = '$' || @wh_id || 'outputs' || '\Historical Picks'
|
publish data
 where path = @value
|
write csv file
 where resdata = @res
   and filnam = 'hstpck_' || to_char(@i + 1) || '_' || to_char(sysdate, 'YYYYMMDDHH24MISS') || '.csv'
   and path = @path,$LESDIR/log/usr_rpt_hst_pcks,,0,0 0 0 ? * *,,,usr_data
USR_RPT_HST_TOPOFF,,Aritzia Report - Historical Topoffs,0,cron,[select format(dateadd(day, -1, getdate()), 'MM-dd-yyyy') dte1,
        format(dateadd(day, 0, getdate()), 'MM-dd-yyyy') dte2
   from dual]
|
[select d.trndte,
        d.oprcod,
        d.actcod,
        d.lodnum,
        d.subnum,
        d.to_lodnum,
        d.to_subnum,
        left(d.prtnum, 5) as generic,
        d.prtnum,
        d.trnqty,
        d.fr_arecod,
        d.frstol,
        d.frinvs,
        d.to_arecod,
        d.tostol,
        l.def_maxqvl,
        d.usr_id
   from dlytrn d
  inner
   join locmst l
     on d.frstol = l.stoloc
  inner
   join (select subnum
           from dlytrn
          inner
           join (select *
                   from poldat
                  where polcod = 'DSS-ARITZIA'
                    and polvar = 'CASEPICK'
                    and rtstr2 = 'TOP OFF'
                    and rtstr1 <> 'PIARPL') rep
             on oprcod = rep.rtstr1
          where fr_arecod = 'RESV'
            and trndte >= @dte1
            and trndte < @dte2) usr
     on d.subnum = usr.subnum
  where d.fr_arecod in ('RESV')
    and d.to_arecod in ('RDTS000001')
    and d.oprcod is not null
    and actcod in ('CASRPL')
    and d.trndte >= @dte1
    and d.trndte < @dte2
 union
 select d.trndte,
        d.oprcod,
        d.actcod,
        d.lodnum,
        d.subnum,
        d.to_lodnum,
        d.to_subnum,
        left(d.prtnum, 5) as generic,
        d.prtnum,
        d.trnqty,
        d.fr_arecod,
        d.frstol,
        d.frinvs,
        d.to_arecod,
        d.tostol,
        l.def_maxqvl,
        d.usr_id
   from dlytrn d
  inner
   join locmst l
     on d.tostol = l.stoloc
  inner
   join (select subnum
           from dlytrn
          inner
           join (select *
                   from poldat
                  where polcod = 'DSS-ARITZIA'
                    and polvar = 'CASEPICK'
                    and rtstr2 = 'TOP OFF') rep
             on oprcod = rep.rtstr1
          where fr_arecod = 'RESV'
            and trndte >= @dte1
            and trndte < @dte2) usr
     on d.subnum = usr.subnum
  where d.fr_arecod in ('RDTS000001')
    and d.to_arecod in ('PICK')
    and d.oprcod is not null
    and actcod in ('CS_XFR')
    and d.trndte >= @dte1
    and d.trndte < @dte2] >> res
|
list warehouses
|
expand environment variable
 where name = '$' || @wh_id || 'outputs' || '\Working Files'
|
publish data
 where path = @value
|
write csv file
 where resdata = @res
   and filnam = 'historical_topoffs-' || to_char(sysdate, 'YYYYMMDD-HH24MISS') || '.csv '
   and path = @path;,$LESDIR/log/usr_rpt_hst_topoff.log,,0,0 0 1 ? * * *,,,usr_data
USR_RPT_INBPLAN,,Aritzia Report - Inbound Plan,0,cron,list warehouses
|
[select decode(rec_date, 0, '', format(rec_date, 'MM-dd-yyyy')) rec_date,
        rec_time,
        trlr_typ,
        trkref,
        trknum,
        trlr_num,
        po_num,
        adrnam,
        rcv_type,
        tot_po_cases,
        count(distinct prtnum) skus,
        sum(expqty) units,
        round(avg(untcas), 0) avg_unit_case,
        sum(sku_pallet + pal_rem) resv_pal,
        sum(cs_remaining) resv_case,
        sum(CASE WHEN pal_rem > 0 THEN 1
                 ELSE 0
            END) AS pal_loc,
        sum(CASE WHEN cs_remaining > 0 THEN 1
                 ELSE 0
            END) AS case_loc,
        round(avg(CASE WHEN cs_remaining > 0 THEN cs_remaining
                       ELSE NULL
                  END), 1) AS avg_case
   from (select cast(convert(varchar, substr(rec_date, 5, 2) || substr(rec_date, 1, 2), 12) || substr(rec_date, 3, 2) as datetime) rec_date,
                rec_time,
                trlr_typ,
                trkref,
                trknum,
                trlr_num,
                po_num,
                adrnam,
                rcv_type,
                tot_po_cases,
                prtnum,
                expqty,
                untcas,
                caslen,
                caswid,
                cashgt,
                p_tier,
                p_height,
                cs_pallet,
                ftpcod,
                floor(expqty * 1.0 / untcas * 1.0) as sku_case,
                floor((floor(expqty * 1.0 / untcas) * 1.0 / cs_pallet)) as sku_pallet,
                floor(expqty * 1.0 / untcas) - (floor((floor(expqty * 1.0 / untcas) / cs_pallet)) * 1.0 *cs_pallet) cs_remaining,
                round((floor(expqty * 1.0 / untcas) - (floor((floor(expqty * 1.0 / untcas) / cs_pallet)) * 1.0 *cs_pallet)) / cs_pallet, 1) pal_ratio,
                case when round((floor(expqty * 1.0 / untcas) - (floor((floor(expqty * 1.0 / untcas) / cs_pallet)) * 1.0 * cs_pallet)) / cs_pallet, 1) > .5 THEN 1
                     else 0
                end pal_rem
           from (select case when tr.trlr_ref IS NULL then NULL
                             else substr(trlr_ref, 0, instr(trlr_ref, ' '))
                        end rec_date,
                        case when tr.trlr_ref IS NULL then NULL
                             else substr(trlr_ref, instr(trlr_ref, ' ') + 1)
                        end rec_time,
                        tr.trlr_typ,
                        rt.trkref,
                        rt.trknum,
                        tr.trlr_num,
                        ri.po_num,
                        adr.adrnam,
                        case when ri.invtyp = 'POP' then 'PRIVATE'
                             when ri.invtyp = 'POB' then 'BRANDED'
                        end rcv_type,
                        rt.numcas tot_po_cases,
                        rl.prtnum,
                        rl.expqty,
                        pv.untcas,
                        caslen,
                        caswid,
                        cashgt,
                        substr(pv.ftpcod, instr(pv.ftpcod, 'T') + 1, (instr(pv.ftpcod, 'H') -1) - instr(pv.ftpcod, 'T')) p_tier,
                        substr(pv.ftpcod, instr(pv.ftpcod, 'H') + 1) p_height,
                        convert(int, substr(pv.ftpcod, instr(pv.ftpcod, 'T') + 1, (instr(pv.ftpcod, 'H') -1) - instr(pv.ftpcod, 'T'))) * convert(int, substr(pv.ftpcod, instr(pv.ftpcod, 'H') + 1)) cs_pallet,
                        floor(115000 / (caslen*caswid*cashgt)) cs_vol_pallet,
                        pv.ftpcod
                   from rcvtrk rt
                   left
                   join trlr tr
                     on tr.trlr_id = rt.trlr_id
                   left
                   join rcvinv ri
                     on ri.trknum = rt.trknum
                   left
                   join adrmst adr
                     on adr.host_ext_id = ri.supnum
                   left
                   join rcvlin rl
                     on rl.trknum = ri.trknum
                   left
                   join (select prtnum,
                                ftpcod,
                                defftp_flg,
                                untcas,
                                caslen,
                                caswid,
                                cashgt
                           from prtftp_view
                          where defftp_flg = 1
                            and wh_id = 'DC01') pv
                     on pv.prtnum = rl.prtnum
                  where rt.clsdte is null
                    and rt.moddte > sysdate - 90
                    and ri.invtyp in ('POB', 'POP', 'SUP', 'IDT')
                    and rt.trknum like 'IS%'
                    and rl.expqty <> 0) usr) usr
  group by rec_date,
        rec_time,
        trlr_typ,
        trkref,
        trknum,
        trlr_num,
        po_num,
        adrnam,
        rcv_type,
        tot_po_cases
  order by rec_date,
        rec_time,
        trlr_typ] catch(@?) >> res
|
if (@? = 0)
{
    expand environment variable
     where name = '$' || @wh_id || 'outputs' || '\Working Files\'
    |
    publish data
     where path = @value
    |
    write csv file
     where resdata = @res
       and filnam = 'inbound-plan-' || to_char(sysdate, 'YYYYMMDD-hh24mi') || '.csv'
       and path = @path
},$LESDIR/log/usr_rpt_inbplan.log,,0,0 0 12,14,16 ? * * *,60,,usr_data
USR_RPT_INV_ADJ_DETAILS,,Aritzia Report - Inventory Adjustment Details,0,cron,/* Detailed Inventory Adjustments */
list warehouses
|
[SELECT cnt_a.count_date,
        cnt_a.usr_id,
        cnt_a.adj_type,
        uc_prt.merch_catg,
        cnt_a.prtnum,
        cnt_a.location,
        SUM(cnt_a.adj_qty) adj_qty,
        ABS(SUM(cnt_a.adj_qty)) abs_qty,
        SUM(cnt_a.abs_qty_dly) all_adj_qty
   FROM (select to_char(trndte, 'MM-DD-YYYY') count_date,
                usr_id,
                CASE WHEN oprcod = 'INVADJ'
                 AND actcod = 'IDNTFY_AJ' THEN 'INVENTORY ADJUST'
                     WHEN oprcod = 'INVADJ'
                 AND actcod = 'INVDEL' THEN 'INVENTORY ADJUST'
                     WHEN oprcod = 'CNTAUD'
                 AND actcod = 'INVDEL' THEN 'COUNT AUDIT'
                     WHEN oprcod = 'CNTAUD'
                 AND actcod = 'IDNTFY' THEN 'COUNT AUDIT'
                END as adj_type,
                prtnum,
                CASE WHEN tostol LIKE 'PERM%' THEN trnqty* -1
                     ELSE trnqty
                END adj_qty,
                CASE WHEN fr_arecod IN ('PICK', 'RESV', 'REVL', 'PROB', 'QA') THEN frstol
                     WHEN to_arecod IN ('PICK', 'RESV', 'REVL', 'PROB', 'QA') THEN tostol
                END as location,
                wh_id,
                prt_client_id,
                trnqty abs_qty_dly
           FROm dlytrn
          WHERE actcod IN ('IDNTFY', 'INVADJ', 'IDNTFY_AJ', 'INVDEL')
            AND oprcod IN ('CNTAUD', 'INVADJ')
            AND trndte BETWEEN to_char(sysdate -14, 'YYYYMMDD')
            AND to_char(sysdate, 'YYYYMMDD')
            AND frinvs = 'AVL') cnt_a
   LEFT
   JOIN dss_prtmst uc_prt
     on uc_prt.prtnum = cnt_a.prtnum
    and uc_prt.prt_client_id = cnt_a.prt_client_id
    and uc_prt.wh_id = cnt_a.wh_id
   LEFT
   JOIN prtmst pt
     ON pt.prtnum = cnt_a.prtnum
    and pt.wh_id_tmpl = cnt_a.wh_id
    and pt.prt_client_id = cnt_a.prt_client_id
  WHERE ((pt.wh_id_tmpl = @wh_id AND pt.typcod = 'MODE') OR cnt_a.prtnum IS NULL)
  GROUP BY cnt_a.count_date,
        cnt_a.usr_id,
        cnt_a.adj_type,
        cnt_a.prtnum,
        uc_prt.merch_catg,
        cnt_a.location
  ORDER BY count_date desc,
        abs_qty desc] >> res
|
expand environment variable
 where name = '$' || @wh_id || 'outputs' || '\Inventory Adjustment Details'
|
publish data
 where path = @value
|
write csv file
 where resdata = @res
   and filnam = 'inventory_adj_details-' || to_char(sysdate, 'YYYYMMDD-HH24MISS') || '.csv '
   and path = @path;,$LESDIR/log/usr_rpt_inv_adj_details.log,,0,0 5 0 ? * * *,,,usr_data
USR_RPT_INV_CNT_SUMMARY,,Aritzia Report - Inventory Count Summary,0,cron,/* Summary of Inventory Adjustments*/
list warehouses
|
[SELECT count_date,
        cycle_count,
        manual_count,
        cnz,
        zero_count,
        fast_count,
        tot_loc,
        tot_units,
        adj_loc,
        net_adj,
        abs_adj,
        ROUND((CAST(tot_loc AS DECIMAL(10, 1)) - adj_loc) / tot_loc, 3) *100 loc_accu,
        ROUND((CAST(tot_units AS DECIMAL(10, 1)) + net_adj) / tot_units *100, 1) net_unit_accu,
        ROUND((CAST(tot_units AS DECIMAL(10, 1)) - abs_adj) / tot_units *100, 1) abs_unit_accu
   FROM (SELECT nvl(adj_sum.count_date, 'total') count_date,
                SUM(cnt_sum.cycle_count) cycle_count,
                SUM(cnt_sum.manual_count) manual_count,
                SUM(cnt_sum.cnz) cnz,
                SUM(cnt_sum.zero_count) zero_count,
                SUM(cnt_sum.fast_count) fast_count,
                SUM(cnt_sum.tot_loc) tot_loc,
                SUM(cnt_sum.tot_units) tot_units,
                SUM(adj_sum.adj_loc) adj_loc,
                SUM(adj_sum.net_adj) net_adj,
                SUM(adj_sum.abs_adj) abs_adj
           FROM (SELECT count_date,
                        adj_type,
                        COUNT(location) adj_loc,
                        SUM(adj_qty) net_adj,
                        SUM(abs_qty) abs_adj
                   FROM (SELECT cnt_a.count_date,
                                cnt_a.usr_id,
                                cnt_a.adj_type,
                                uc_prt.uc_merch_catg,
                                cnt_a.prtnum,
                                cnt_a.location,
                                SUM(cnt_a.adj_qty) adj_qty,
                                ABS(SUM(cnt_a.adj_qty)) abs_qty,
                                SUM(cnt_a.abs_qty_dly) all_adj_qty
                           FROM (select to_char(trndte, 'MM-DD-YYYY') count_date,
                                        usr_id,
                                        CASE WHEN oprcod = 'INVADJ'
                                         AND actcod = 'IDNTFY_AJ' THEN 'INVENTORY ADJUST'
                                             WHEN oprcod = 'INVADJ'
                                         AND actcod = 'INVDEL' THEN 'INVENTORY ADJUST'
                                             WHEN oprcod = 'CNTAUD'
                                         AND actcod = 'INVDEL' THEN 'COUNT AUDIT'
                                             WHEN oprcod = 'CNTAUD'
                                         AND actcod = 'IDNTFY' THEN 'COUNT AUDIT'
                                        END as adj_type,
                                        prtnum,
                                        CASE WHEN tostol LIKE 'PERM%' THEN trnqty* -1
                                             ELSE trnqty
                                        END adj_qty,
                                        CASE WHEN fr_arecod IN ('PICK', 'RESV', 'REVL', 'PROB', 'QA') THEN frstol
                                             WHEN to_arecod IN ('PICK', 'RESV', 'REVL', 'PROB', 'QA') THEN tostol
                                        END as location,
                                        wh_id,
                                        prt_client_id,
                                        trnqty abs_qty_dly
                                   FROm dlytrn
                                  WHERE actcod IN ('IDNTFY', 'INVADJ', 'IDNTFY_AJ', 'INVDEL')
                                    AND oprcod IN ('CNTAUD', 'INVADJ')
                                    AND trndte BETWEEN to_char(sysdate -14, 'YYYYMMDD')
                                    AND to_char(sysdate, 'YYYYMMDD')
                                    AND frinvs = 'AVL') cnt_a
                           LEFT
                           JOIN uc_prtmst uc_prt
                             on uc_prt.prtnum = cnt_a.prtnum
                            and uc_prt.prt_client_id = cnt_a.prt_client_id
                            and uc_prt.wh_id = cnt_a.wh_id
                           LEFT
                           JOIN prtmst pt
                             ON pt.prtnum = cnt_a.prtnum
                            and pt.wh_id_tmpl = cnt_a.wh_id
                            and pt.prt_client_id = cnt_a.prt_client_id
                          WHERE ((pt.wh_id_tmpl = 'DC01' AND pt.typcod = 'MODE') OR cnt_a.prtnum IS NULL)
                          GROUP BY cnt_a.count_date,
                                cnt_a.usr_id,
                                cnt_a.adj_type,
                                cnt_a.prtnum,
                                uc_prt.uc_merch_catg,
                                cnt_a.location) c1
                  GROUP BY count_date,
                        adj_type) adj_sum
           LEFT
           JOIN (SELECT cnt_date,
                        'COUNT AUDIT' cnt_join,
                        count(CASE WHEN cnttyp = 'C' THEN cnttyp
                              END) as cycle_count,
                        count(CASE WHEN cnttyp = 'MAN' THEN cnttyp
                              END) as manual_count,
                        count(CASE WHEN cnttyp = 'CNZ' THEN cnttyp
                              END) as cnz,
                        count(CASE WHEN cnttyp = 'Z' THEN cnttyp
                              END) as zero_count,
                        count(CASE WHEN cnttyp = 'FMC' THEN cnttyp
                              END) as fast_count,
                        count(stoloc) tot_loc,
                        SUM(untqty) tot_units
                   FROM (SELECT distinct cnt_date,
                                cnttyp,
                                stoloc,
                                untqty
                           FROM (SELECT to_char(cntdte, 'MM-DD-YYYY') cnt_date,
                                        cnttyp,
                                        stoloc,
                                        untqty
                                   FROM cnthst ch
                                   LEFT
                                   JOIN prtmst pt
                                     ON pt.prtnum = ch.prtnum
                                    and pt.wh_id_tmpl = ch.wh_id
                                    and pt.prt_client_id = ch.prt_client_id
                                  WHERE cntdte BETWEEN to_char(sysdate -14, 'YYYYMMDD')
                                    AND to_char(sysdate, 'YYYYMMDD')
                                    AND cnttyp IN ('C', 'CNZ', 'FMC', 'LOC', 'MAN', 'Z')
                                    AND ((pt.wh_id_tmpl = 'DC01' AND pt.typcod = 'MODE') OR ch.prtnum IS NULL)
                                 UNION ALL
                                 SELECT to_char(cntdte, 'MM-DD-YYYY') cnt_date,
                                        cnttyp,
                                        stoloc,
                                        untqty
                                   FROM cntwrk cw
                                   LEFT
                                   JOIN prtmst pt
                                     ON pt.prtnum = cw.prtnum
                                    and pt.wh_id_tmpl = cw.wh_id
                                  WHERE cntdte BETWEEN to_char(sysdate -14, 'YYYYMMDD')
                                    AND to_char(sysdate, 'YYYYMMDD')
                                    AND cnttyp IN ('C', 'CNZ', 'FMC', 'LOC', 'MAN', 'Z')
                                    AND ((pt.wh_id_tmpl = 'DC01' AND pt.typcod = 'MODE') OR cw.prtnum IS NULL)) c3) c4
                  GROUP BY cnt_date
                 having sum(untqty) > 0) cnt_sum
             ON cnt_sum.cnt_date = adj_sum.count_date
            AND cnt_sum.cnt_join = adj_sum.adj_type
          WHERE adj_type = 'COUNT AUDIT'
          GROUP BY rollup(count_date)) c5] >> res
|
expand environment variable
 where name = '$' || @wh_id || 'outputs' || '\Inventory Count Summary\'
|
publish data
 where path = @value
|
write csv file
 where resdata = @res
   and filnam = 'inventory_cnt_summary-' || to_char(sysdate, 'YYYYMMDD-HH24MISS') || '.csv'
   and path = @path;,$LESDIR/log/usr_rpt_cnt_summary.log,,0,0 5 0 ? * * *,60,,usr_data
USR_RPT_PCK_LOC_UTILIZATION,,Aritzia Report - Pick Location Utilization,0,cron,/*Location Summary*/
[SELECT bin_type,
        COUNT(bin_type) locations,
        isnull(SUM(CASE WHEN locsts IN ('F', 'P') THEN 1
                   END), 0) AS used,
        isnull(SUM(CASE WHEN ab.pndqvl > 0 AND locsts = 'E' THEN 1
                   END), 0) AS pending,
        COUNT(bin_type) - isnull(SUM(CASE WHEN locsts IN ('F', 'P') THEN 1
                                     END), 0) - isnull(SUM(CASE WHEN ab.pndqvl > 0 AND locsts = 'E' THEN 1
                                                           END), 0) as available,
        isnull(SUM(CASE WHEN locsts = 'I' THEN 1
                   END), 0) AS error
   FROM (SELECT CASE WHEN lc.maxqvl >= 92000 THEN 'BULK'
                     WHEN lc.maxqvl >= 14000 THEN 'XL'
                     WHEN lc.maxqvl >= 6400 THEN 'L'
                     WHEN lc.maxqvl >= 3500 THEN 'M'
                     WHEN lc.maxqvl >= 2400 THEN 'S'
                     WHEN lc.maxqvl >= 2399 THEN '5S'
                     WHEN lc.maxqvl < 2399 THEN 'XS'
                END AS bin_type,
                lc.stoloc,
                lc.pndqvl,
                qv.prtnum,
                lc.pckflg,
                lc.stoflg,
                lc.repflg,
                lc.locsts
           FROM locmst lc
           LEFT
           JOIN qvlwrk qv
             ON qv.stoloc = lc.stoloc
          WHERE lc.arecod = 'PICK'
            and lc.useflg = 1) ab
  GROUP BY bin_type] >> res
|
if (@? = 0)
{
    list warehouses
    |
    expand environment variable
     where name = '$' || @wh_id || 'outputs' || '\Pick Location Utilization'
    |
    publish data
     where path = @value
    |
    write csv file
     where resdata = @res
       and filnam = 'pck_loc_utilization-' || to_char(sysdate, 'YYYYMMDD-hh24mi') || '.csv '
       and path = @path
},$LESDIR/log/usr_rpt_pck_loc_utilization.log,,0,0 0 0 ? * *,,,usr_data
USR_RPT_PCK_REWAREHOUSING,,Aritzia Report - Pick Rewarehousing,0,cron,list warehouses
|
[SELECT variant,
        merch_catg,
        season,
        season_yr,
        pck_loc,
        rsv_loc,
        iv.untqty pck_units,
        oh_units,
        oh_vol,
        tot_vol,
        un_vol,
        cs_vol,
        rec_qty,
        returns_qty,
        dc_qty,
        ecom_vel,
        oh_flg,
        rec_flg,
        rtn_flg,
        dc_flg,
        vel_flg,
        pck_mlt_flg,
        rsv_flg,
        iv.stoloc,
        ROUND(lc.curqvl, 0) curqvl,
        lc.maxqvl,
        CASE WHEN maxqvl >= 92000 THEN 'BULK'
             WHEN maxqvl >= 14000 THEN 'XL'
             WHEN maxqvl >= 6400 THEN 'L'
             WHEN maxqvl >= 3500 THEN 'M'
             WHEN maxqvl >= 2400 THEN 'S'
             WHEN maxqvl >= 2399 THEN '5S'
             WHEN maxqvl <= 600 THEN 'XS'
        END AS bin_type,
        CASE WHEN tot_vol <= 600 THEN 'XS'
             WHEN tot_vol <= 2399 THEN 'S'
             WHEN tot_vol <= 3500 THEN 'M'
             WHEN tot_vol <= 6400 THEN 'L'
             WHEN tot_vol <= 14000 THEN 'XL'
             WHEN tot_vol > 14000 THEN 'BULK'
        END AS new_bin_type,
        CASE WHEN cs_vol <= 600 THEN 'XS'
             WHEN cs_vol <= 2399 THEN 'S'
             WHEN cs_vol <= 3500 THEN 'M'
             WHEN cs_vol <= 6400 THEN 'L'
             WHEN cs_vol <= 14000 THEN 'XL'
             WHEN cs_vol > 14000 THEN 'BULK'
        END AS resv_bin_type,
        civ.comqty,
        piv.pndqty
   from (SELECT variant,
                upt.merch_catg,
                upt.season,
                upt.season_yr,
                pck_loc,
                rsv_loc,
                oh_units,
                ROUND(unt_vol*oh_units, 0) as oh_vol,
                ROUND((oh_units + rec_qty + returns_qty + dc_qty) *unt_vol, 0) as tot_vol,
                ROUND(unt_vol, 0) as un_vol,
                ROUND(cs_vol, 0) as cs_vol,
                rec_qty,
                returns_qty,
                dc_qty,
                vel.ecom_vel,
                CASE WHEN oh_units > 0 THEN 1
                     ELSE 0
                END oh_flg,
                CASE WHEN rec_qty > 0 THEN 1
                     ELSE 0
                END rec_flg,
                CASE WHEN returns_qty > 0 THEN 1
                     ELSE 0
                END rtn_flg,
                CASE WHEN dc_qty > 0 THEN 1
                     ELSE 0
                END dc_flg,
                CASE WHEN ecom_vel > 0 THEN 1
                     ELSE 0
                END vel_flg,
                CASE WHEN pck_loc > 1 THEN 1
                     ELSE 0
                END pck_mlt_flg,
                CASE WHEN rsv_loc > 0 THEN 1
                     ELSE 0
                END rsv_flg
           from (SELECT CASE WHEN ivb.prtnum IS NULL THEN inb.prtnum
                             WHEN inb.prtnum IS NULL THEN ivb.prtnum
                             WHEN inb.prtnum IS NOT NULL
                         AND ivb.prtnum IS NOT NULL THEN ivb.prtnum
                        END as variant,
                        COALESCE(ivb.oh_units, 0) oh_units,
                        COALESCE(inb.rec_qty, 0) rec_qty,
                        COALESCE(inb.returns_qty, 0) returns_qty,
                        COALESCE(inb.dc_qty, 0) dc_qty,
                        ivb.pck_loc,
                        ivb.rsv_loc,
                        ivb.unt_vol,
                        ivb.cs_vol
                   from (SELECT iv.prtnum,
                                (pfv.unthgt*pfv.untlen*pfv.untwid) unt_vol,
                                (pfv.cashgt*pfv.caslen*pfv.caswid) cs_vol,
                                SUM(CASE WHEN lc.arecod = 'PICK' THEN 1
                                    END) as pck_loc,
                                SUM(CASE WHEN lc.arecod = 'RESV' THEN 1
                                    END) as rsv_loc,
                                SUM(iv.untqty) oh_units
                           FROM inventory_view iv
                           LEFT
                           JOIN locmst lc
                                                        ON lc.stoloc = iv.stoloc
                           LEFT
                           JOIN prtftp_view pfv
                             ON pfv.prtnum = iv.prtnum
                          WHERE iv.invsts = 'AVL'
                            AND lc.arecod in ('PICK', 'RESV', 'ELRV')
                            AND pfv.defftp_flg = 1
                            AND pfv.wh_id = 'DC01'
                          GROUP BY iv.prtnum,
                                (pfv.unthgt*pfv.untlen*pfv.untwid),
                                (pfv.cashgt*pfv.caslen*pfv.caswid)) ivb
                   FULL OUTER
                   JOIN (SELECT ab.prtnum,
                                ab.rec_qty,
                                ab.returns_qty,
                                ab.dc_qty
                           FROM (SELECT rl.prtnum,
                                        upt.merch_catg,
                                        upt.season_yr,
                                        upt.season,
                                        SUM(CASE WHEN rh.invtyp IN ('PO', 'POB', 'POP') AND adddte > to_char(sysdate - 365, 'YYYYMMDD') THEN rl.expqty
                                                 ELSE 0
                                            END) as rec_qty,
                                        SUM(CASE WHEN rh.invtyp IN ('MP', 'SR', 'ZERE', 'ZB') AND adddte > to_char(sysdate - 60, 'YYYYMMDD') THEN rl.expqty
                                                 ELSE 0
                                            END) as returns_qty,
                                        SUM(CASE WHEN rh.invtyp IN ('IDT') AND adddte > to_char(sysdate - 60, 'YYYYMMDD') THEN rl.expqty
                                                 ELSE 0
                                            END) as dc_qty
                                   FROM rimlin rl
                                   LEFT
                                   JOIN rimhdr rh
                                     ON rh.invnum = rl.invnum
                                   LEFT
                                   JOIN dss_prtmst upt
                                     ON upt.prtnum = rl.prtnum
                                  WHERE rl.idnqty = 0
                                    AND rl.expqty > 0
                                    AND rh.adddte > to_char(sysdate - 365, 'YYYYMMDD')
                                    AND upt.season_yr >= '2021'
                                  GROUP BY rl.prtnum,
                                        upt.merch_catg,
                                        upt.season_yr,
                                        upt.season) ab
                          WHERE (rec_qty + returns_qty + dc_qty) <> 0) inb
                     ON inb.prtnum = ivb.prtnum) dc
           LEFT
           JOIN (SELECT ol.prtnum,
                        SUM(ol.ordqty) ecom_vel
                   FROM ord_line ol
                   LEFT
                   JOIN ord o
                     ON o.ordnum = ol.ordnum
                   LEFT
                   JOIN poldat pd
                     ON pd.rtstr1 = o.ordtyp
                  WHERE ol.non_alc_flg = 0
                    AND pd.polval = 'ORDTYP-XREF'
                    AND pd.rtstr2 IN ('USA ORDER DELIVERY', 'CAN ECOMM', 'CAN ORDER DELIVERY', 'USA ECOMM')
                  GROUP BY ol.prtnum) vel
             ON vel.prtnum = dc.variant
           LEFT
           JOIN dss_prtmst upt
             ON upt.prtnum = dc.variant) rw
  INNER
   JOIN inventory_view iv
     ON iv.prtnum = rw.variant
  INNER
   JOIN locmst lc
     ON lc.stoloc = iv.stoloc
   LEFT
   JOIN (SELECT srcloc,
                comqty
           FROM com_inv_sum_view
          WHERE comqty > 0) civ
     ON civ.srcloc = iv.stoloc
   LEFT
   JOIN (SELECT stoloc,
                pndqty
           FROM invloc_view
          WHERE pndqty > 0
            AND arecod = 'PICK') piv
     ON piv.stoloc = iv.stoloc
  WHERE iv.invsts = 'AVL'
    and lc.arecod IN ('PICK')] >> res
|
expand environment variable
 where name = '$' || @wh_id || 'outputs' || '\Inventory Rewarehousing\'
|
publish data
 where path = @value
|
write csv file
 where resdata = @res
   and filnam = 'pck_rewarehousing-' || to_char(sysdate, 'YYYYMMDD-HH24MISS') || '.csv'
   and path = @path,$LESDIR/log/usr_rpt_pckrewarhousing.log,,0,0 50 7,13,17 ? * * *,60,,usr_data
USR_RPT_PCK_TO_RESV_SKUS,,Aritzia Report - Pick to Reserve SKUs,0,cron,[/*#nolimit*/
 SELECT iv.prtnum,
        iv.tot_qty,
        ISNULL(vel.unit_vel, 0) vel,
        ROUND((ISNULL(vel.unit_vel*1.0, 0)) / 14, 1) avg_unit,
        to_char(a.rec_date, 'MM-DD-YYYY') rec_date,
        datediff(day, to_char(a.rec_date, 'MM-DD-YYYY'), to_char(sysdate, 'MM-DD-YYYY')) lst_rec_date,
        CASE WHEN to_char(a.rec_date, 'MM-DD-YYYY') IS NULL THEN ROUND((ISNULL(vel.unit_vel*1.0, 0)) / 14, 1)
             ELSE ROUND(ISNULL(vel.unit_vel*1.0, 0) / datediff(day, to_char(a.rec_date, 'MM-DD-YYYY'), to_char(sysdate, 'MM-DD-YYYY')), 1)
        END AS inb_vel,
        CASE WHEN iv.vol <= 400 THEN 'XXS'
             WHEN iv.vol <= 600 THEN 'XS'
             WHEN iv.vol <= 2399 THEN 'S'
             WHEN iv.vol <= 3500 THEN 'M'
             WHEN iv.vol <= 6400 THEN 'L'
             WHEN iv.vol <= 14000 THEN 'XL'
             WHEN iv.vol > 14000 THEN 'BULK'
        END AS bin_type
   FROM (SELECT iv.prtnum,
                sum(pv.untlen*pv.untwid*pv.unthgt*iv.untqty) vol,
                SUM(iv.untqty) tot_qty
           FROM inventory_view iv
          INNER
           JOIN locmst lc
             ON lc.stoloc = iv.stoloc
          INNER
           JOIN prtftp_view pv
             ON pv.prtnum = iv.prtnum
            and pv.prt_client_id = iv.prt_client_id
            and pv.wh_id = iv.wh_id
            and pv.ftpcod = iv.ftpcod
          WHERE lc.arecod IN ('PICK', 'RESV')
            AND iv.invsts = 'AVL'
          GROUP BY iv.prtnum) iv
   left outer
   JOIN (SELECT pv.prtnum,
                SUM(pv.appqty) unit_vel
           FROM pckwrk_view pv
          INNER
           JOIN ord o
             ON o.ordnum = pv.ordnum
            and o.wh_id = pv.wh_id
            and o.client_id = pv.client_id
          WHERE pv.wrktyp in ('P', 'B')
            and o.ordtyp <> 'DCT'
            AND pv.pckdte BETWEEN to_char(sysdate -14, 'MM-DD-YYYY')
            AND to_char(sysdate, 'MM-DD-YYYY')
          GROUP BY pv.prtnum) vel
     ON vel.prtnum = iv.prtnum
   left outer
   JOIN (SELECT rl.prtnum,
                max(rl.moddte) rec_date
           FROM rcvlin rl
          INNER
           JOIN rcvinv ri
             ON ri.trknum = rl.trknum
            and ri.supnum = rl.supnum
            and ri.invnum = rl.invnum
            and ri.wh_id = rl.wh_id
            and ri.client_id = rl.client_id
          WHERE rl.rcvqty > 0
            AND rcvsts IN ('AVL', 'QM', 'VAS')
            AND rl.moddte BETWEEN to_char(sysdate -14, 'MM-DD-YYYY')
            AND to_char(sysdate, 'MM-DD-YYYY')
          GROUP BY rl.prtnum) a
     ON a.prtnum = iv.prtnum] >> res
|
list warehouses
|
expand environment variable
 where name = '$' || @wh_id || 'outputs' || '\Pick to Reserve SKUs'
|
publish data
 where path = @value
|
write csv file
 where resdata = @res
   and filnam = 'pck_to_resv-' || to_char(sysdate, 'YYYYMMDD-HH24MISS') || '.csv '
   and path = @path;,$LESDIR/log/usr_rpt_pck_to_resv_skus.log,,0,0 0 0 ? * *,,,usr_data
USR_RPT_RCV_INB_SKU,,Aritzia Report - Receiving Inbound SKU Summary,0,cron,[SELECT rec_date,
        tot_sku,
        ex_sku,
        new_sku,
        tot_case,
        tot_po,
        CASE WHEN rec_date IS NULL THEN NULL
             ELSE avg_cs_sku
        END avg_cs_sku,
        CASE WHEN rec_date IS NULL THEN NULL
             ELSE avg_sku_po
        END avg_sku_po
   from (SELECT to_char(try_convert(datetime, concat(CONCAT(CONCAT(CONCAT(substring(rcv_date, 1, 2), '-'), substring(rcv_date, 3, 2)), '-'), CONCAT('20', substring(rcv_date, 5, 2))), 110), 'MM-DD-YYYY') rec_date,
                SUM(ia.inb_prt) tot_sku,
                SUM(ia.inv_prt) ex_sku,
                SUM(ia.new_skus) new_sku,
                SUM(rt.numcas) tot_case,
                COUNT(ia.trknum) tot_po,
                ROUND(SUM(rt.numcas) / NULLIF(SUM(CAST(ia.inb_prt AS DECIMAL(12, 0))), 0), 1) AS avg_cs_sku,
                ROUND(SUM(ia.inb_prt) / NULLIF(COUNT(ia.trknum), 0), 1) AS avg_sku_po
           FROM (SELECT distinct (rec_date) rcv_date,
                        inb.trknum,
                        SUM(CASE WHEN inb.prtnum IS NULL THEN 0
                                 ELSE 1
                            END) as inb_prt,
                        SUM(CASE WHEN inv.prtnum IS NULL THEN 0
                                 ELSE 1
                            END) as inv_prt,
                        SUM(CASE WHEN inb.prtnum IS NULL THEN 0
                                 ELSE 1
                            END) - SUM(CASE WHEN inv.prtnum IS NULL THEN 0
                                            ELSE 1
                                       END) as new_skus
                   FROM (select case when tr.trlr_ref IS NULL then NULL
                                     else substr(trlr_ref, 0, instr(trlr_ref, ' '))
                                end rec_date,
                                case when tr.trlr_ref IS NULL then NULL
                                     else substr(trlr_ref, instr(trlr_ref, ' ') + 1)
                                end rec_time,
                                case when ri.invtyp = 'POP' then 'PRIVATE'
                                     when ri.invtyp = 'POB' then 'BRANDED'
                                end rcv_type,
                                rt.numcas tot_po_cases,
                                rl.prtnum,
                                rl.expqty,
                                rt.trknum
                           from rcvtrk rt
                           left
                           join trlr tr
                             on tr.trlr_id = rt.trlr_id
                           left
                           join rcvinv ri
                             on ri.trknum = rt.trknum
                           left
                           join adrmst adr
                             on adr.host_ext_id = ri.supnum
                           left
                           join rcvlin rl
                             on rl.trknum = ri.trknum
                          where rt.clsdte is null
                            and rt.moddte > sysdate - 90
                            and ri.invtyp in ('POB', 'POP', 'SUP', 'IDT')
                            and rt.trknum like 'IS%'
                            and rl.expqty <> 0) inb
                   LEFT
                   JOIN (SELECT distinct (prtnum)
                           FROM inventory_view iv
                          INNER
                           JOIN locmst lc
                             ON iv.stoloc = lc.stoloc
                          WHERE lc.arecod IN ('PICK', 'RESV', 'PROB', 'PNDRECV', 'PNDREVL')) inv
                     ON inb.prtnum = inv.prtnum
                  GROUP BY rec_date,
                        trknum) ia
           LEFT
           JOIN (SELECT rt.trknum,
                        rt.numcas
                   FROM rcvtrk rt) rt
             ON rt.trknum = ia.trknum
          GROUP BY ia.rcv_date) ib
  ORDER BY rec_date] >> res
|
list warehouses
|
expand environment variable
 where name = '$' || @wh_id || 'outputs' || '\RCV Inbound SKU\'
|
publish data
 where path = @value
|
write csv file
 where resdata = @res
   and filnam = 'receiving_inbound_sku_summary-' || to_char(sysdate, 'YYYYMMDD-HH24MISS') || '.csv'
   and path = @path;,$LESDIR/log/usr_rpt_rcv_inb_sku.log,,0,0 0 17 ? * * *,,,usr_data
USR_RPT_RESV_LOC_UTILIZATION,,Aritzia Report - Reserve Location Utilization,0,cron,[SELECT bin_type,
        COUNT(bin_type) locations,
        isnull(SUM(CASE WHEN locsts IN ('F', 'P') THEN 1
                   END), 0) AS used,
        isnull(SUM(CASE WHEN ab.pndqvl > 0 AND locsts = 'E' THEN 1
                   END), 0) AS pending,
        COUNT(bin_type) - isnull(SUM(CASE WHEN locsts IN ('F', 'P') THEN 1
                                     END), 0) - isnull(SUM(CASE WHEN ab.pndqvl > 0 THEN 1
                                                           END), 0) as available,
        isnull(SUM(CASE WHEN locsts = 'I' THEN 1
                   END), 0) AS error
   FROM (SELECT CASE WHEN lc.maxqvl > 63360 THEN 'full_pallet'
                     WHEN lc.maxqvl > 42240 THEN 'half_pallet'
                     WHEN lc.maxqvl > 21120 THEN 'xl_case'
                     WHEN lc.maxqvl > 13440 THEN 'l_case'
                     WHEN lc.maxqvl > 9660 THEN 'm_case'
                     WHEN lc.maxqvl <= 9660 THEN 's_case'
                END AS bin_type,
                lc.stoloc,
                lc.pndqvl,
                qv.prtnum,
                lc.pckflg,
                lc.stoflg,
                lc.repflg,
                lc.locsts
           FROM locmst lc
           LEFT
           JOIN qvlwrk qv
             ON qv.stoloc = lc.stoloc
          WHERE lc.arecod = 'RESV'
            and lc.useflg = 1) ab
  GROUP BY bin_type] >> res
|
list warehouses
|
expand environment variable
 where name = '$' || @wh_id || 'outputs' || '\Reserve Location Utilization'
|
publish data
 where path = @value
|
write csv file
 where resdata = @res
   and filnam = 'resv_loc_utilization-' || to_char(sysdate, 'YYYYMMDD-HH24MISS') || '.csv '
   and path = @path;,$LESDIR/log/usr_resv_loc_utilization.log,,0,0 0 0 ? * * *,,,usr_data
USR_RPT_RESV_REWAREHOUSING,,Aritzia Report - Reserve Rewarehousing,0,cron,list warehouses
|
[SELECT stoloc,
        aisle_id,
        item,
        year,
        merch_catg,
        bin_type,
        CASE WHEN sku_vol <= 10240 THEN 'S'
             WHEN sku_vol <= 13440 THEN 'M'
             WHEN sku_vol <= 21120 THEN 'L'
             WHEN sku_vol <= 42240 THEN 'XL'
             WHEN sku_vol <= 63360 THEN 'HP'
             WHEN sku_vol > 63360 THEN 'FP'
        END as new_loc,
        multi_loc_cnt,
        def_maxqvl,
        cur_vol,
        pnd_vol,
        sku_vol,
        comqty,
        unt_qty,
        cases
   FROM (SELECT stoloc,
                aisle_id,
                item,
                year,
                merch_catg,
                bin_type,
                def_maxqvl,
                cur_vol,
                pnd_vol,
                SUM(cur_vol) OVER(PARTITION BY item) sku_vol,
                COUNT(item) OVER(PARTITION BY item) multi_loc_cnt,
                comqty,
                unt_qty,
                cases
           FROM (SELECT lm.stoloc,
                        lm.aisle_id,
                        CASE WHEN iv.invsts = 'AVL' THEN iv.prtnum
                             ELSE NULL
                        END as item,
                        CASE WHEN iv.invsts = 'AVL' THEN ucp.season
                             ELSE NULL
                        END season,
                        CASE WHEN iv.invsts = 'AVL' THEN ucp.season_yr
                             ELSE NULL
                        END year,
                        CASE WHEN iv.invsts = 'AVL' THEN ucp.merch_catg
                             ELSE NULL
                        END merch_catg,
                        CASE WHEN maxqvl <= 10240 THEN 'S'
                             WHEN maxqvl <= 13440 THEN 'M'
                             WHEN maxqvl <= 21120 THEN 'L'
                             WHEN maxqvl <= 42240 THEN 'XL'
                             WHEN maxqvl <= 63360 THEN 'HP'
                             WHEN maxqvl > 63360 THEN 'FP'
                        END AS bin_type,
                        lm.def_maxqvl,
                        ROUND(lm.curqvl, 0) cur_vol,
                        ROUND(lm.pndqvl, 0) pnd_vol,
                        civ.comqty,
                        CASE WHEN iv.invsts = 'AVL' THEN iv.untqty
                             ELSE 0
                        END as unt_qty,
                        count(CASE WHEN iv.invsts = 'AVL' THEN iv.subnum
                                   ELSE NULL
                              END) as cases
                   FROM locmst lm
                   LEFT
                   JOIN inventory_view iv
                     ON lm.stoloc = iv.stoloc
                   LEFT
                   JOIN dss_prtmst ucp
                     ON ucp.prtnum = iv.prtnum
                   LEFT
                   JOIN (SELECT srcloc,
                                comqty
                           FROM com_inv_sum_view
                          WHERE comqty > 0) civ
                     ON civ.srcloc = lm.stoloc
                  WHERE lm.arecod = 'RESV'
                    AND lm.useflg = 1
                  GROUP BY lm.stoloc,
                        lm.def_maxqvl,
                        lm.curqvl,
                        lm.aisle_id,
                        lm.pndqvl,
                        civ.comqty,
                        CASE WHEN iv.invsts = 'AVL' THEN ucp.season
                             ELSE NULL END,
                             CASE WHEN iv.invsts = 'AVL' THEN iv.prtnum
                                  ELSE NULL END,
                                  CASE WHEN iv.invsts = 'AVL' THEN ucp.season_yr
                                       ELSE NULL END,
                                       CASE WHEN iv.invsts = 'AVL' THEN ucp.merch_catg
                                            ELSE NULL END,
                                            CASE WHEN maxqvl <= 10240 THEN 'S'
                                                 WHEN maxqvl <= 13440 THEN 'M'
                                                 WHEN maxqvl <= 21120 THEN 'L'
                                                 WHEN maxqvl <= 42240 THEN 'XL'
                                                 WHEN maxqvl <= 63360 THEN 'HP'
                                                 WHEN maxqvl > 63360 THEN 'FP' END,
                                                 CASE WHEN iv.invsts = 'AVL' THEN iv.untqty
                                                      ELSE 0
                                                 END) a) b
                                 ORDER by stoloc] catch(@?) >> res
|
if (@? = 0)
{
    expand environment variable
     where name = '$' || @wh_id || 'outputs ' || '\Inventory Rewarehousing\'
    |
    publish data
     where path = @value
    |
    write csv file
     where resdata = @res
       and filnam = 'resv_rewarehouse-' || to_char(sysdate, 'YYYYMMDD-hh24mi') || '.csv'
       and path = @path
},$LESDIR/log/usr_rpt_rewarehouse.log,,0,0 0 4,14 ? * * *,60,,usr_data
USR_RPT_REWAREHOUSE,,Aritzia Report - Rewarehouse,0,cron,list warehouses
|
[SELECT stoloc,
        aisle_id,
        item,
        year,
        merch_catg,
        bin_type,
        CASE WHEN sku_vol <= 10240 THEN 'S'
             WHEN sku_vol <= 13440 THEN 'M'
             WHEN sku_vol <= 21120 THEN 'L'
             WHEN sku_vol <= 42240 THEN 'XL'
             WHEN sku_vol <= 63360 THEN 'HP'
             WHEN sku_vol > 63360 THEN 'FP'
        END as new_loc,
        multi_loc_cnt,
        def_maxqvl,
        cur_vol,
        pnd_vol,
        sku_vol,
        comqty,
        unt_qty,
        cases
   FROM (SELECT stoloc,
                aisle_id,
                item,
                year,
                merch_catg,
                bin_type,
                def_maxqvl,
                cur_vol,
                pnd_vol,
                SUM(cur_vol) OVER(PARTITION BY item) sku_vol,
                COUNT(item) OVER(PARTITION BY item) multi_loc_cnt,
                comqty,
                unt_qty,
                cases
           FROM (SELECT lm.stoloc,
                        lm.aisle_id,
                        CASE WHEN iv.invsts = 'AVL' THEN iv.prtnum
                             ELSE NULL
                        END as item,
                        CASE WHEN iv.invsts = 'AVL' THEN ucp.season
                             ELSE NULL
                        END season,
                        CASE WHEN iv.invsts = 'AVL' THEN ucp.season_yr
                             ELSE NULL
                        END year,
                        CASE WHEN iv.invsts = 'AVL' THEN ucp.merch_catg
                             ELSE NULL
                        END merch_catg,
                        CASE WHEN maxqvl <= 10240 THEN 'S'
                             WHEN maxqvl <= 13440 THEN 'M'
                             WHEN maxqvl <= 21120 THEN 'L'
                             WHEN maxqvl <= 42240 THEN 'XL'
                             WHEN maxqvl <= 63360 THEN 'HP'
                             WHEN maxqvl > 63360 THEN 'FP'
                        END AS bin_type,
                        lm.def_maxqvl,
                        ROUND(lm.curqvl, 0) cur_vol,
                        ROUND(lm.pndqvl, 0) pnd_vol,
                        civ.comqty,
                        CASE WHEN iv.invsts = 'AVL' THEN iv.untqty
                             ELSE 0
                        END as unt_qty,
                        count(CASE WHEN iv.invsts = 'AVL' THEN iv.subnum
                                   ELSE NULL
                              END) as cases
                   FROM locmst lm
                   LEFT
                   JOIN inventory_view iv
                     ON lm.stoloc = iv.stoloc
                   LEFT
                   JOIN dss_prtmst ucp
                     ON ucp.prtnum = iv.prtnum
                   LEFT
                   JOIN (SELECT srcloc,
                                comqty
                           FROM com_inv_sum_view
                          WHERE comqty > 0) civ
                     ON civ.srcloc = lm.stoloc
                  WHERE lm.arecod = 'RESV'
                    AND lm.useflg = 1
                  GROUP BY lm.stoloc,
                        lm.def_maxqvl,
                        lm.curqvl,
                        lm.aisle_id,
                        lm.pndqvl,
                        civ.comqty,
                        CASE WHEN iv.invsts = 'AVL' THEN ucp.season
                             ELSE NULL END,
                             CASE WHEN iv.invsts = 'AVL' THEN iv.prtnum
                                  ELSE NULL END,
                                  CASE WHEN iv.invsts = 'AVL' THEN ucp.season_yr
                                       ELSE NULL END,
                                       CASE WHEN iv.invsts = 'AVL' THEN ucp.merch_catg
                                            ELSE NULL END,
                                            CASE WHEN maxqvl <= 10240 THEN 'S'
                                                 WHEN maxqvl <= 13440 THEN 'M'
                                                 WHEN maxqvl <= 21120 THEN 'L'
                                                 WHEN maxqvl <= 42240 THEN 'XL'
                                                 WHEN maxqvl <= 63360 THEN 'HP'
                                                 WHEN maxqvl > 63360 THEN 'FP' END,
                                                 CASE WHEN iv.invsts = 'AVL' THEN iv.untqty
                                                      ELSE 0
                                                 END) a) b
                                 ORDER by stoloc] catch(@?) >> res
                           |
                           if (@? = 0)
                           {
                               expand environment variable
                                where name = '$' || @wh_id || 'outputs' || '\Working Files\'
                               |
                               publish data
                                where path = @value
                               |
                               write csv file
                                where resdata = @res
                                  and filnam = 'rewarehouse-' || to_char(sysdate, 'YYYYMMDD-hh24mi') || '.csv'
                                  and path = @path
                           },$LESDIR/log/usr_rpt_rewarehouse.log,,0,0 0 4,14 ? * * *,60,,usr_data
USR_RPT_RVL_MP_DETAILS,,Aritzia Report - RVL Merch Pull Details by Item,0,cron,list warehouses
|
[SELECT c.prtnum,
        c.pull_date,
        c.merch_catg,
        c.exp_qty,
        c.rec_qty,
        c.rem_qty,
        c.new_sku,
        c.new_mp_sku,
        c.new_sam_sku,
        round(c.inb_vol, 0) inb_vol,
        round(c.rem_inb_vol, 0) rem_inb_vol,
        round(c.cur_vol, 0) cur_vol,
        c.bin_type,
        CASE WHEN c.rem_inb_vol + c.cur_vol <= 600 THEN 'XS'
             WHEN c.rem_inb_vol + c.cur_vol <= 2399 THEN 'S'
             WHEN c.rem_inb_vol + c.cur_vol <= 3500 THEN 'M'
             WHEN c.rem_inb_vol + c.cur_vol <= 6400 THEN 'L'
             WHEN c.rem_inb_vol + c.cur_vol <= 14000 THEN 'XL'
             WHEN c.rem_inb_vol + c.cur_vol > 14000 THEN 'BULK'
        END AS new_bin_type
   FROM (SELECT b.prtnum,
                b.pull_date,
                pm.merch_catg,
                b.exp_qty,
                b.rec_qty,
                b.rem_qty,
                b.new_sku,
                CASE WHEN b.new_sku = 1
                 AND mp_sku = 1 THEN 1
                     ELSE 0
                END AS new_mp_sku,
                CASE WHEN b.new_sku = 1
                 AND mp_sku = 0
                 AND sam_sku = 1 THEN 1
                     ELSE 0
                END AS new_sam_sku,
                pv.untlen*pv.untwid*pv.unthgt*b.exp_qty AS inb_vol,
                pv.untlen*pv.untwid*pv.unthgt*b.rem_qty AS rem_inb_vol,
                cl.bin_type,
                CASE WHEN cl.cur_vol IS NULL THEN 0
                     ELSE cl.cur_vol
                END AS cur_vol
           FROM (SELECT a.prtnum,
                        to_char(a.pull_date, 'YYYY-MM-DD') pull_date,
                        a.oh_sku,
                        CASE WHEN a.new_sku <> 0 THEN 1
                             ELSE 0
                        END AS new_sku,
                        a.exp_qty,
                        a.rec_qty,
                        a.exp_qty - a.rec_qty rem_qty,
                        CASE WHEN a.mp_sku > 0 THEN 1
                             ELSE 0
                        END AS mp_sku,
                        CASE WHEN a.sam_sku > 0 THEN 1
                             ELSE 0
                        END AS sam_sku
                   from (SELECT rl.prtnum,
                                min(rh.adddte) pull_date,
                                CASE WHEN sku_oh.prtnum IS NOT NULL THEN 1
                                     ELSE 0
                                END AS oh_sku,
                                SUM(CASE WHEN sku_oh.prtnum IS NULL AND rl.expqty <> rl.idnqty THEN 1
                                    END) AS new_sku,
                                SUM(rl.expqty) exp_qty,
                                SUM(rl.idnqty) rec_qty,
                                SUM(CASE WHEN rh.invtyp IN ('MP', 'NP', 'OS') AND rl.expqty > 0 THEN 1
                                    END) AS mp_sku,
                                SUM(CASE WHEN rh.invtyp = 'SR' AND rl.expqty > 0 THEN 1
                                    END) AS sam_sku
                           FROM rimlin rl
                           LEFT
                           JOIN rimhdr rh
                             ON rh.invnum = rl.invnum
                           LEFT
                           JOIN (SELECT distinct (prtnum)
                                   FROM inventory_view iv
                                  INNER
                                   JOIN locmst lm
                                     ON lm.stoloc = iv.stoloc
                                  WHERE iv.invsts = 'AVL'
                                    AND lm.arecod IN ('PICK', 'RESV')) sku_oh
                             ON rl.prtnum = sku_oh.prtnum
                          WHERE rh.adddte > to_char(sysdate -120, 'YYYYMMDD')
                            AND rh.invtyp IN ('MP', 'NP', 'OS', 'SR')
                          GROUP BY rl.prtnum,
                                sku_oh.prtnum) a) b
          INNER
           JOIN dss_prtmst pm
             ON pm.prtnum = b.prtnum
          INNER
           JOIN prtftp_view pv
             ON pv.prtnum = b.prtnum
           LEFT
           JOIN (SELECT distinct (prtnum),
                        max(CASE WHEN maxqvl >= 92000 THEN 'BULK'
                                 WHEN maxqvl >= 14000 THEN 'XL'
                                 WHEN maxqvl >= 6400 THEN 'L'
                                 WHEN maxqvl >= 3500 THEN 'M'
                                 WHEN maxqvl >= 2400 THEN 'S'
                                 WHEN maxqvl >= 2399 THEN '5S'
                                 WHEN maxqvl <= 600 THEN 'XS'
                            END) AS bin_type,
                        SUM(lm.curqvl) AS cur_vol
                   FROM inventory_view iv
                  INNER
                   JOIN locmst lm
                     ON lm.stoloc = iv.stoloc
                  WHERE lm.arecod = 'PICK'
                  GROUP BY prtnum) cl
             ON cl.prtnum = b.prtnum
          WHERE pv.wh_id = @wh_id
            AND pm.wh_id = @wh_id
            AND pv.defftp_flg = 1
            AND b.rem_qty > 0) c
  ORDER BY c.pull_date] >> res
|
if (@? = 0)
{
    expand environment variable
     where name = '$' || @wh_id || 'outputs' || '\RVL Merch Pull Details by Item\'
    |
    publish data
     where path = @value
    |
    write csv file
     where resdata = @res
       and filnam = 'rvl_mp_details-' || to_char(sysdate, 'YYYYMMDD-hh24mi') || '.csv'
       and path = @path
},$LESDIR/log/usr_rpt_rvl_mp_details.log,,0,0 0 23 ? * * *,60,,usr_data
USR_RPT_RVL_MP_SUMMARY,,Aritzia Report - RVL Merch Pull Summary,0,cron,/*RVL MP Order Drop by Day*/
[SELECT to_char(rh.adddte, 'MM-DD-YYYY') create_date,
        ISNULL(sum(CASE WHEN rh.invtyp = 'MP' THEN rl.expqty
                   END), 0) AS mp_units,
        ISNULL(sum(CASE WHEN rh.invtyp = 'NP' THEN rl.expqty
                   END), 0) AS non_assor_units,
        ISNULL(sum(CASE WHEN rh.invtyp = 'OS' THEN rl.expqty
                   END), 0) AS overstock_units,
        ISNULL(sum(CASE WHEN rh.invtyp IN ('MP', 'NP', 'OS') THEN rl.expqty
                   END), 0) AS avl_inbound,
        ISNULL(sum(CASE WHEN rh.invtyp IN ('MP', 'NP', 'OS') THEN rl.idnqty
                   END), 0) AS avl_received,
        ISNULL(sum(CASE WHEN rh.invtyp IN ('MP', 'NP', 'OS') THEN rl.expqty
                   END) - sum(CASE WHEN rh.invtyp IN ('MP', 'NP', 'OS') THEN rl.idnqty
                              END), 0) AS avl_intran,
        ROUND(ISNULL(sum(CASE WHEN rh.invtyp IN ('MP', 'NP', 'OS') THEN CAST(rl.idnqty AS DECIMAL(12, 0))
                         END) / sum(CASE WHEN rh.invtyp IN ('MP', 'NP', 'OS') THEN rl.expqty
                                    END), 0), 3) *100 AS avl_perc_recv,
        ISNULL(sum(CASE WHEN rh.invtyp = 'QM' THEN rl.expqty
                   END), 0) AS qm_units,
        ISNULL(sum(CASE WHEN rh.invtyp = 'QM' THEN rl.idnqty
                   END), 0) AS qm_received,
        ISNULL(sum(CASE WHEN rh.invtyp = 'QM' THEN rl.expqty
                   END) - sum(CASE WHEN rh.invtyp = 'QM' THEN rl.idnqty
                              END), 0) AS qm_intran,
        ROUND(ISNULL(sum(CASE WHEN rh.invtyp = 'QM' THEN CAST(rl.idnqty AS DECIMAL(12, 0))
                         END) / sum(CASE WHEN rh.invtyp = 'QM' THEN rl.expqty
                                    END), 0), 3) *100 AS qm_perc_recv,
        ISNULL(sum(CASE WHEN rh.invtyp = 'SR' THEN rl.expqty
                   END), 0) AS sam_units,
        ISNULL(sum(CASE WHEN rh.invtyp = 'SR' THEN rl.idnqty
                   END), 0) AS sam_received,
        ISNULL(sum(CASE WHEN rh.invtyp = 'SR' THEN rl.expqty
                   END) - sum(CASE WHEN rh.invtyp = 'SR' THEN rl.idnqty
                              END), 0) AS sam_intran,
        ROUND(ISNULL(sum(CASE WHEN rh.invtyp = 'SR' THEN CAST(rl.idnqty AS DECIMAL(12, 0))
                         END) / sum(CASE WHEN rh.invtyp = 'SR' THEN rl.expqty
                                    END), 0), 3) *100 AS sam_perc_recv
   FROM rimlin rl
   LEFT
   JOIN rimhdr rh
     ON rh.invnum = rl.invnum
  WHERE rh.adddte > to_char(sysdate -90, 'YYYYMMDD')
    AND rh.invtyp IN ('MP', 'NP', 'OS', 'QM', 'SR')
  GROUP BY to_char(rh.adddte, 'MM-DD-YYYY')
  ORDER BY create_date desc] >> res
|
if (@? = 0)
{
    list warehouses
    |
    expand environment variable
     where name = '$' || @wh_id || 'outputs' || '\RVL Merch Pull Summary'
    |
    publish data
     where path = @value
    |
    write csv file
     where resdata = @res
       and filnam = 'rvl_mp_summary-' || to_char(sysdate, 'YYYYMMDD-hh24mi') || '.csv '
       and path = @path
},$LESDIR/log/usr_rpt_rvl_mp_summary.log,,0,0 0 23 ? * * *,,,usr_data
USR_RPT_SKU_BURN,,Aritzia Report - SKU Burn,0,cron,/*Count at Zero SKU Burn*/
[SELECT to_char(ch.cntdte, 'YYYY-MM-DD') cnt_date,
        CASE WHEN maxqvl >= 92000 THEN 'BULK'
             WHEN maxqvl >= 14000 THEN 'XL'
             WHEN maxqvl >= 6400 THEN 'L'
             WHEN maxqvl >= 3500 THEN 'M'
             WHEN maxqvl >= 2400 THEN 'S'
             WHEN maxqvl >= 2399 THEN '5S'
             WHEN maxqvl <= 600 THEN 'XS'
        END AS bin_type,
        COUNT(ch.stoloc) locations
   FROM cnthst ch
  INNER
   JOIN locmst lc
     ON lc.stoloc = ch.stoloc
  WHERE cnttyp = 'Z'
    AND ch.cntdte BETWEEN to_char(sysdate -1, 'MM-DD-YYYY')
    AND to_char(sysdate, 'MM-DD-YYYY')
  GROUP BY to_char(ch.cntdte, 'YYYY-MM-DD'),
        CASE WHEN maxqvl >= 92000 THEN 'BULK'
             WHEN maxqvl >= 14000 THEN 'XL'
             WHEN maxqvl >= 6400 THEN 'L'
             WHEN maxqvl >= 3500 THEN 'M'
             WHEN maxqvl >= 2400 THEN 'S'
             WHEN maxqvl >= 2399 THEN '5S'
             WHEN maxqvl <= 600 THEN 'XS'
        END
  ORDER BY cnt_date desc,
        bin_type] >> res
|
if (@? = 0)
{
    list warehouses
    |
    expand environment variable
     where name = '$' || @wh_id || 'outputs' || '\SKU Burn'
    |
    publish data
     where path = @value
    |
    write csv file
     where resdata = @res
       and filnam = 'sku_burn-' || to_char(sysdate, 'YYYYMMDD-hh24mi') || '.csv '
       and path = @path
},$LESDIR/log/usr_rpt_sku_burn.log,,0,0 0 0 ? * *,,,usr_data
USR_S321_DECOUP_NOTE,,Aritzia Decoupled Note Bandaid (Obsolete),0,cron,/* Note Text Bandaid */
list warehouses
|
[select distinct olnt.ordnum
   from ord_line_note olnt
   left outer
   join ord_note ont
     on olnt.ordnum = ont.ordnum
    and ont.nottyp = 'PAK_DECOUPLE'
  where olnt.nottyp = 'PAK_DECOUPLE'
    and ont.ordnum is null] catch(@?)
|
if (@? = 0)
{
    [insert
       into ord_note(client_id, ordnum, nottyp, notlin, wh_id, nottxt, edtflg, u_version, ins_dt, last_upd_dt, ins_user_id, last_upd_user_id)
     values ('----', @ordnum, 'PAK_DECOUPLE', '0010', @wh_id, 'REMOVE PRICE FROM STOCK TICKET ? DECOUPLED ITEM(S)', '1', '1', sysdate, sysdate, 'USR_SYSJOB', 'USR_SYSJOB')] catch(@?)
    |
    [select ol.ordnum,
            to_char(ol.prtnum || ',' || pcd.prtcolor_dsc || ',' || psd.prtsize_dsc) nottxt,
            lpad(to_number(ol.ordlin) + 100, 4, 0) ordlin
       from ord_line_note oln
      inner
       join ord_line ol
         on oln.ordnum = ol.ordnum
        and oln.ordlin = ol.ordlin
        and oln.ordsln = ol.ordsln
      inner
       join prtdsc pd
         on pd.colnam = 'prtnum|prt_client_id|wh_id_tmpl'
        and pd.colval = ol.prtnum || '|' || ol.prt_client_id || '|' || ol.wh_id
        and pd.locale_id = nvl(@locale_id, @@locale_id)
      inner
       join prtmst pm
         on ol.prtnum = pm.prtnum
        and ol.wh_id = pm.wh_id_tmpl
        and ol.prt_client_id = pm.prt_client_id
      inner
       join (select colval prtcolor,
                    lngdsc prtcolor_dsc
               from dscmst
              where colnam = 'prtcolor'
                and locale_id = 'US_ENGLISH') pcd
         on pm.prtcolor = pcd.prtcolor
      inner
       join (select colval prtsize,
                    lngdsc prtsize_dsc
               from dscmst
              where colnam = 'prtsize'
                and locale_id = 'US_ENGLISH') psd
         on pm.prtsize = psd.prtsize
      where oln.ordnum = @ordnum] catch(@?)
    |
    [insert
       into ord_note(client_id, ordnum, nottyp, notlin, wh_id, nottxt, edtflg, u_version, ins_dt, last_upd_dt, ins_user_id, last_upd_user_id)
     values ('----', @ordnum, 'PAK_DECOUPLE', @ordlin, @wh_id, @nottxt, '1', '1', sysdate, sysdate, 'USR_SYSJOB', 'USR_SYSJOB')] catch(@?)
},$LESDIR/log/usr_s321_decoup_note.log,,0,0 0/15 4-23 ? * * *,,,usr_data
USR_S321_GUARDRAIL_ALERT,,Aritzia S321 Guardrail Alert,0,cron,list warehouses
|
{
    expand environment variable
     where name = '$' || @wh_id || 'outputs' || '\S321 Alert\'
    |
    publish data
     where path = @value
    |
    [select first_name,
            last_name,
            zip,
            ordnum,
            ref_doc,
            adddte,
            shpdte,
            lst_ord,
            diff,
            ordcnt,
            carcod,
            srvlvl,
            schbat,
            nottxt,
            notusr
       from (select TOP 100 PERCENT first_name,
                    last_name,
                    zip,
                    ordnum,
                    ref_doc,
                    adddte,
                    shpdte,
                    lst_ord,
                    diff,
                    ordcnt,
                    min(diff) over(partition by first_name || last_name || zip) min_diff,
                    carcod,
                    srvlvl,
                    schbat,
                    nottxt,
                    notusr
               from (select TOP 100 PERCENT adr.first_name,
                            adr.last_name,
                            substr(adr.adrpsz, 1, 5) zip,
                            o.ordnum,
                            uo.ref_doc,
                            o.adddte,
                            nvl(s.early_shpdte, convert(date, dateadd(hour, 12, o.adddte))) shpdte,
                            convert(date, lag(nvl(s.early_shpdte, convert(date, dateadd(hour, 12, o.adddte))), 1) over(partition by adr.first_name || adr.last_name || substr(adr.adrpsz, 1, 5)
                                                                                                                        order by o.adddte)) lst_ord,
                            datediff(hour, lag(nvl(s.early_shpdte, convert(date, dateadd(hour, 12, o.adddte))), 1) over(partition by adr.first_name || adr.last_name || substr(adr.adrpsz, 1, 5)
                                                                                                                         order by o.adddte), (nvl(s.early_shpdte, convert(date, dateadd(hour, 12, o.adddte))))) diff,
                            count(*) over(partition by adr.first_name || adr.last_name || substr(adr.adrpsz, 1, 5)) ordcnt,
                            ol.carcod,
                            ol.srvlvl,
                            sl.schbat,
                            orn.nottxt,
                            orn.last_upd_user_id notusr
                       from ord o
                      inner
                       join dss_ord uo
                         on o.ordnum = uo.ordnum
                        and o.client_id = uo.client_id
                        and o.wh_id = uo.wh_id
                      inner
                       join adrmst adr
                         on o.st_adr_id = adr.adr_id
                       left outer
                       join shipment_line sl
                         on o.ordnum = sl.ordnum
                        and sl.ordlin = '0000000001'
                        and sl.linsts <> 'B'
                       left outer
                       join shipment s
                         on sl.ship_id = s.ship_id
                        and s.shpsts <> 'B'
                       left outer
                       join ord_line ol
                         on o.ordnum = ol.ordnum
                        and ol.ordlin = '0000000001'
                       left outer
                       join ord_note orn
                         on o.ordnum = orn.ordnum
                        and o.wh_id = orn.wh_id
                        and o.client_id = orn.client_id
                        and orn.nottyp = 'S321_IT'
                        and orn.notlin = '0001'
                      where o.ordtyp in ('E05', 'E07', 'G05', 'G07', 'R05', 'R07', 'S05', 'S07', 'P05', 'P07', 'I05', 'I07')
                        and o.adddte > sysdate - /*=moca_util.days(*/ 4 /*=)*/
                      order by 10 desc,
                            1,
                            2,
                            3,
                            6) usr
              order by 10 desc,
                    1,
                    2,
                    3,
                    6) usr
      where min_diff <= 0
      order by ordcnt desc,
            first_name,
            last_name,
            zip,
            adddte] catch(-1403) >> res
    |
    if (@? = 0)
    {
        write csv file
         where resdata = @res
           and filnam = 'S321_alert_' || to_char(sysdate, 'YYYYMMDD-HH24') || '.csv'
           and path = @path
    };
}
|
expand environment variable
 where name = '$' || @wh_id || 'outputs ' || '\S321 Alert\S321_alert_' || to_char(sysdate, 'YYYYMMDD-HH24') || '.csv'
|
publish data
 where resfil = @value
|
find file
 where pathname = @resfil catch(@?)
|
if (@pathname = @resfil and @type = 'F')
{
    publish data
     where hostname = 'azeus2smtp.jdadelivers.com'
       and mail_from = 'ITWMS-' || @wh_id || 'Alerts@jdadelivers.com'
       and send_to_list = 'supplychaintechteam@aritzia.com;rlui@aritzia.com;outboundorders@aritzia.com;DCSupervisors@aritzia.com;jmac@aritzia.com;ssnow@aritzia.com;gsingh@aritzia.com;aabraham@aritzia.com;cchavez@aritzia.com;rlouie@aritzia.com;dkovacs@aritzia.com;CA_DCitemchecks@aritzia.com;apang@aritzia.com;wlin@aritzia.com'
    |
    send email
     where subject = 'S321 GUARDRAIL ALERT'
       and hostname = @hostname
       and mail_from = @mail_from
       and send_to = @send_to_list
       and message = 'Multiple orders identified with the same consignee and ship date. Please see attached.'
       and attachment = @resfil
},$LESDIR/log/usr_s321_guardrail.log,,0,0 5,35 6-23 ? * 1-7 *,,,usr_data
USR_S321_TIMEREL_ALERT,,Aritzia S321 Time Release Alert,0,cron,[select distinct schbat
   from shipment s
  inner
   join shipment_line sl
     on s.ship_id = sl.ship_id
  inner
   join ord o
     on sl.ordnum = o.ordnum
  where s.early_shpdte is null
    and s.shpsts <> 'B'
    and s.shpsts <> 'R'
    and o.ordtyp in ('E05', 'E07', 'G05', 'G07', 'R05', 'R07', 'S05', 'S07', 'P05', 'P07', 'I05', 'I07')] catch(@?) >> res
|
if (@? = 0)
{
    convert column results to string
     where resultset = @res
       and colnam = 'schbat'
       and separator = ' || '
    |
    list warehouses
    |
    publish data
     where hostname = 'azeus2smtp.jdadelivers.com'
       and mail_from = 'ITWMS-' || @wh_id || 'Alerts @jdadelivers.com '
       and send_to_list = ' dcsupervisors @aritzia.com;
    dcteamleaders @aritzia.com;
    supplychaintechteam @aritzia.com;
    alovey @aritzia.com;
    CA_DCitemchecks @aritzia.com '
       and schbat = @result_string
    |
    send email
     where subject = ' US eCommerce Wave(s) Ship Date Not Set '
       and hostname = @hostname
       and mail_from = @mail_from
       and send_to = @send_to_list
       and message = ' US eCommerce Wave(s) Ship Date Not Set Please set the ship date for the following wave(s) : ' || '' || @schbat catch(@?)
},$LESDIR/log/usr_s321_timerel.log,,0,0 0/15 6-23 ? * * *,,,usr_data
USR_TIMERELUPD_FDXCADOM,,Aritzia Time Release Update Fedex CA Domestic,0,cron,list warehouses
|
[select format(convert(date, sysdate -14), 'yyyyMMddHHmmss') startdte,
        format(DATEADD(ms, -3, DATEADD(day, DATEDIFF(day, 0, sysdate) + 1, 0)), 'yyyyMMddHHmmss') enddte
   from dual]
|
list dss time release mass update
 where carcod = 'FDXAIRCAN'
   and shpsts [ in ('R' , 'I' )]
   and early_shpdte [between to_date(@startdte ) and to_date(@enddte )]
   and wh_id = @wh_id
   and srvlvl [ in ('3DAIR8P' ,'3DAIR8PL1' )]
   and mancnt is null
   and ordtyp [not in ('C01' ,'C03' ,'C05' ,'C07' ,'F01' ,'F03' ,'F05' ,'F07' )]
|
[select ship_id,
        count(distinct traknm) mancnt2
   from manfst
  where ordnum = @ordnum
    and carcod = @carcod
    and srvlvl = @srvlvl
    and ship_id = @ship_id
    and srvlvl <> 'RETURN'
  group by ship_id] catch(-1403)
|
if (@mancnt2 is null)
{
    /* Change this depending on pick up schedule for days to advance */
    [select case when datepart(dw, sysdate) = 6 then 1
                 when datepart(dw, sysdate) = 7 then 1
                 else 1
            end dtemov
       from dual]
    |
    [select format(convert(date, sysdate + @dtemov), 'yyyyMMdd') newshp,
            @early_shpdte oldshp,
            @early_dlvdte olddlv
       from dual]
    |
    process dss time release mass update manifest date
     where early_shpdte = to_date(@newshp)
       and early_dlvdte = to_date(@newshp)
       and carcod = @carcod
       and ordnum = @ordnum
       and ship_id = @ship_id
       and srvlvl = @srvlvl
    |
    write output file
     where filnam = 'timerel_update.log'
       and data = sysdate || ',' || @ship_id || ',' || @ordnum || ',' || @schbat || ',' || @carcod || ',' || @srvlvl || ',' || @ordtyp || ',' || @oldshp || ',' || @olddlv || ',' || to_date(@newshp)
       and newline = 'Y'
       and mode = 'A'
       and path = '$LESDIR/log'
    |
    commit;
},$LESDIR/log/usr_timerelupd_fdxcadom.log,,0,5 30 17 26-29 12 ? 2021,,,usr_data
USR_TIMERELUPD_FDXEXPRESS,,Aritzia Time Release Update Fedex Express,0,cron,list warehouses
|
[select format(convert(date, sysdate -14), 'yyyyMMddHHmmss') startdte,
        format(DATEADD(ms, -3, DATEADD(day, DATEDIFF(day, 0, sysdate) + 1, 0)), 'yyyyMMddHHmmss') enddte
   from dual]
|
list dss time release mass update
 where carcod = 'FDXAIRCAN'
   and shpsts [ in ('R' , 'I' )]
   and early_shpdte [between to_date(@startdte ) and to_date(@enddte )]
   and wh_id = @wh_id
   and srvlvl [ not in (' 3DAIR8P ' ,' 3DAIR8PL1 ' )]
   and mancnt is null
   and ordtyp [not in (' C01 ' ,' C03 ' ,' C05 ' ,' C07 ' ,' F01 ' ,' F03 ' ,' F05 ' ,' F07 ' )]
|
[select ship_id,
        count(distinct traknm) mancnt2
   from manfst
  where ordnum = @ordnum
    and carcod = @carcod
    and srvlvl = @srvlvl
    and ship_id = @ship_id
    and srvlvl <> ' RETURN '
  group by ship_id] catch(-1403)
|
if (@mancnt2 is null)
{
    /* Change this depending on pick up schedule for days to advance */
    [select case when datepart(dw, sysdate) = 6 then 1
                 when datepart(dw, sysdate) = 7 then 1
                 else 1
            end dtemov
       from dual]
    |
    [select format(convert(date, sysdate + @dtemov), ' yyyyMMdd ') newshp,
            @early_shpdte oldshp,
            @early_dlvdte olddlv
       from dual]
    |
    process dss time release mass update manifest date
     where early_shpdte = to_date(@newshp)
       and early_dlvdte = to_date(@newshp)
       and carcod = @carcod
       and ordnum = @ordnum
       and ship_id = @ship_id
       and srvlvl = @srvlvl
    |
    write output file
     where filnam = ' timerel_update.log '
       and data = sysdate || ', ' || @ship_id || ', ' || @ordnum || ', ' || @schbat || ', ' || @carcod || ', ' || @srvlvl || ', ' || @ordtyp || ', ' || @oldshp || ', ' || @olddlv || ', ' || to_date(@newshp)
       and newline = ' Y '
       and mode = ' A '
       and path = ' $LESDIR / log '
    |
    commit;
},$LESDIR/log/usr_timerelupd_fdxexpress.log,,0,5 30 15 26-29 12 ? 2021,,,usr_data
USR_TRLR_STAGE_CA,,Aritzia Trailer Stage - Canada,0,cron,list warehouses
|
expand environment variable
 where name = '$' || @wh_id || 'outputs ' || ' \Glitched Order'
|
publish data
 where path = @value
|
[select inv.lodnum,
        inv.stoloc orgloc,
        inv.dstloc,
        o.ordtyp
   from inventory_pckwrk_view inv
  inner
   join ord o
     on inv.ordnum = o.ordnum
  inner
   join (select *
           from poldat_view po
          where po.polcod = 'DSS-ARITZIA'
            and po.polvar = 'REPORTING'
            and po.polval = 'ORDTYP-XREF'
            and po.rtstr2 in ('BULK', 'CAN ECOMM', 'CAN ORDER DELIVERY')
            and po.wh_id = nvl(@wh_id, @@wh_id)) po
     on o.ordtyp = po.rtstr1
  where inv.stoloc like 'PNDTRLR-DDR%'
  group by inv.lodnum,
        inv.stoloc,
        inv.dstloc,
        o.ordtyp] catch(-1403)
|
if (@? = 0)
{
    move inventory
     where wh_id = @wh_id
       and newdst = 1
       and lodnum = @lodnum
       and dstloc = @dstloc catch(@?)
    |
    if (@? <> 0)
    {
        write output file
         where filnam = ' staging_error_ca_ ' || to_char(sysdate, ' YYYYMMDD - HH24 ') || ' .csv '
           and data = sysdate || ', ' || @lodnum || ', ' || ' Movement Failed '
           and newline = ' Y '
           and mode = ' A '
           and path = @path
    }
    |
    commit
};
expand environment variable
 where name = '$' || @wh_id || 'outputs' || '\Glitched Order\staging_error_ca_' || to_char(sysdate, 'YYYYMMDD-HH24') || '.csv '
|
publish data
 where resfil = @value
|
find file
 where pathname = @resfil catch(@?)
|
if (@pathname = @resfil and @type = ' F ')
{
    list warehouses from host external id
    |
    expand environment variable
     where name = '$' || @wh_id || 'outputs'
    |
    [select case when charindex(' DEV ', @value) > 0 then ' BY DEV '
                 when charindex(' TST ', @value) > 0 then ' BY QA '
                 else ' BY PROD '
            end envdsc
       from dual]
    |
    publish data
     where hostname = ' azeus2smtp.jdadelivers.com '
       and mail_from = 'ITWMS-' || @wh_id || 'Alerts@jdadelivers.com'
       and send_to_list = 'supplychaintechteam @aritzia.com'
    |
    send email
     where subject = 'Shipment Staging Failure Alert CA -' || @envdsc
       and hostname = @hostname
       and mail_from = @mail_from
       and send_to = @send_to_list
       and message = 'The following LPNs failed to be staged.'
       and attachment = @resfil
},$LESDIR/log/usr_trlr_stage_ca.log,,0,0 45 11,14,16,18,19,20,21,22 ? * * *,,,usr_data
USR_TRLR_STAGE_US,,Aritzia Trailer Stage - US,0,cron,list warehouses
|
expand environment variable
 where name = '$' || @wh_id || 'outputs ' || ' \Glitched Order'
|
publish data
 where path = @value
|
[select inv.lodnum,
        inv.stoloc orgloc,
        inv.dstloc,
        o.ordtyp
   from inventory_pckwrk_view inv
  inner
   join ord o
     on inv.ordnum = o.ordnum
  inner
   join (select *
           from poldat_view po
          where po.polcod = 'DSS-ARITZIA'
            and po.polvar = 'REPORTING'
            and po.polval = 'ORDTYP-XREF'
            and po.rtstr2 in ('USA ECOMM', 'USA MARKETPLACE', 'USA ORDER DELIVERY')
            and po.wh_id = nvl(@wh_id, @@wh_id)) po
     on o.ordtyp = po.rtstr1
  where inv.stoloc like 'PNDTRLR-DDR%'
  group by inv.lodnum,
        inv.stoloc,
        inv.dstloc,
        o.ordtyp] catch(-1403)
|
if (@? = 0)
{
    move inventory
     where wh_id = @wh_id
       and newdst = 1
       and lodnum = @lodnum
       and dstloc = @dstloc catch(@?)
    |
    if (@? <> 0)
    {
        write output file
         where filnam = ' staging_error_ca_ ' || to_char(sysdate, ' YYYYMMDD - HH24 ') || ' .csv '
           and data = sysdate || ', ' || @lodnum || ', ' || ' Movement Failed '
           and newline = ' Y '
           and mode = ' A '
           and path = @path
    }
    |
    commit
};
expand environment variable
 where name = '$' || @wh_id || 'outputs' || '\Glitched Order\staging_error_ca_' || to_char(sysdate, 'YYYYMMDD-HH24') || '.csv '
|
publish data
 where resfil = @value
|
find file
 where pathname = @resfil catch(@?)
|
if (@pathname = @resfil and @type = ' F ')
{
    list warehouses from host external id
    |
    expand environment variable
     where name = '$' || @wh_id || 'outputs'
    |
    [select case when charindex(' DEV ', @value) > 0 then ' BY DEV '
                 when charindex(' TST ', @value) > 0 then ' BY QA '
                 else ' BY PROD '
            end envdsc
       from dual]
    |
    publish data
     where hostname = ' azeus2smtp.jdadelivers.com '
       and mail_from = 'ITWMS-' || @wh_id || 'Alerts@jdadelivers.com'
       and send_to_list = 'supplychaintechteam @aritzia.com'
    |
    send email
     where subject = 'Shipment Staging Failure Alert CA -' || @envdsc
       and hostname = @hostname
       and mail_from = @mail_from
       and send_to = @send_to_list
       and message = 'The following LPNs failed to be staged.'
       and attachment = @resfil
},$LESDIR/log/usr_trlr_stage_ca.log,,0,0 45 16,18,19,20,21,22 ? * * *,,,usr_data
USR-ATZ-SUB-MOVE,,Aritzia Case Transfer Job,0,timer,list warehouses
|
create usr directed work by subload
 where wh_id = @wh_id
,$LESDIR/log/usr_atz_sub_move.log,,0,,0,30,dcs_data
USR_AUD_RATE,,Aritzia Audit Sampling Rate Update,0,cron,[select rtstr1,
        rtflt1,
        wh_id
   from poldat_view
  where polcod = 'DSS-ARITZIA'
    and polvar = 'AUDIT'
    and polval = 'SAMPLING-RATE'
    and rtstr1 in ('NP', 'HE', 'ECOM', 'RET')
    and wh_id = 'DC03'] catch(@?)
|
if (@? = 0)
{
    [update poldat
        set rtflt2 = @rtflt1,
            rtflt1 = 0
      where polcod = 'DSS-ARITZIA'
        and polvar = 'AUDIT'
        and polval = 'SAMPLING-RATE'
        and wh_id_tmpl = @wh_id
        and rtstr1 = @rtstr1] catch(@?)
    |
    if (@? = 0)
    {
        write output file
         where filnam = 'audrate_update.log'
           and data = sysdate || ',' || @rtstr1 || ' UPDATED FROM ' || @rtflt1 || ' TO 0'
           and newline = 'Y'
           and mode = 'A'
           and path = '$LESDIR/log'
    }
    else
    {
        write output file
         where filnam = 'audrate_update.log'
           and data = sysdate || ',' || @rtstr1 || ',' || 'UPDATE FAILED'
           and newline = 'Y'
           and mode = 'A'
           and path = '$LESDIR/log'
    }
};,$LESDIR/log/usr_aud_rate.log,,0,0 0 15 ? * 2-6 *,60,,usr_data
USR_AUDRATE_REVERT,,Aritzia Audit Sampling Rate Revert,0,cron,[select rtstr1,
        rtflt1,
        rtflt2,
        wh_id
   from poldat_view
  where polcod = 'DSS-ARITZIA'
    and polvar = 'AUDIT'
    and polval = 'SAMPLING-RATE'
    and rtstr1 in ('NP', 'HE', 'ECOM', 'RET')
    and wh_id = 'DC03'] catch(@?)
|
if (@? = 0)
{
    [update poldat
        set rtflt1 = @rtflt2,
            rtflt2 = 0
      where polcod = 'DSS-ARITZIA'
        and polvar = 'AUDIT'
        and polval = 'SAMPLING-RATE'
        and wh_id_tmpl = @wh_id
        and rtstr1 = @rtstr1] catch(@?)
    |
    if (@? = 0)
    {
        write output file
         where filnam = 'audrate_revert.log'
           and data = sysdate || ',' || @rtstr1 || ' REVERTED FROM 0 TO ' || @rtflt2
           and newline = 'Y'
           and mode = 'A'
           and path = '$LESDIR/log'
    }
    else
    {
        write output file
         where filnam = 'audrate_revert.log'
           and data = sysdate || ',' || @rtstr1 || ',' || 'REVERT FAILED'
           and newline = 'Y'
           and mode = 'A'
           and path = '$LESDIR/log'
    }
};,$LESDIR/log/usr_audrate_revert.log,,0,0 0 19 ? * 2-6 *,60,,usr_data
USR_INT_ASN_FTPCOD,,Aritzia Correct ASN Partial Ftpcods,0,timer,list warehouses
|
[select rt.trknum,
        id.prtnum,
        count(distinct id.ftpcod) as ftpcod_count
   from rcvtrk rt
  inner
   join rcvinv ri
     on rt.trknum = ri.trknum
  inner
   join rcvlin rl
     on ri.trknum = rl.trknum
    and ri.supnum = rl.supnum
    and ri.invnum = rl.invnum
  inner
   join invdtl id
     on rl.rcvkey = id.rcvkey
  where rt.rcvtrk_stat in ('EX', 'CI')
    and rt.wh_id = @wh_id
  group by rt.trknum,
        id.prtnum
 having count(distinct id.ftpcod) > 1] catch(-1403)
|
if (@? = 0)
{
    [select invdtl.prtnum,
            invdtl.ftpcod,
            count(invdtl.dtlnum)
       from invlod
       join invsub
         on invlod.lodnum = invsub.lodnum
       join invdtl
         on invsub.subnum = invdtl.subnum
      where invlod.stoloc = @trknum
        and invdtl.prtnum = @prtnum
        and rownum < 2
      group by invdtl.prtnum,
            invdtl.ftpcod
      order by count(invdtl.dtlnum) desc]
    |
    [update invdtl
        set invdtl.ftpcod = @ftpcod
       from invdtl
       join invsub
         on invdtl.subnum = invsub.subnum
       join invlod
         on invlod.lodnum = invsub.lodnum
      where invlod.stoloc = @trknum
        and invdtl.prtnum = @prtnum
        and invdtl.ftpcod != @ftpcod]
},,,0,,0,900,
USR_INT_ASN_FTPCOD_FIX,,Aritzia Correct ASN Partial Ftpcods,0,timer,/*Find receiving trucks and parts that have multiple footprints*/
[select rt.trknum,
        id.prtnum,
        count(distinct id.ftpcod) as ftpcod_count
   from rcvtrk rt
  inner
   join rcvinv ri
     on rt.trknum = ri.trknum
  inner
   join rcvlin rl
     on ri.trknum = rl.trknum
    and ri.supnum = rl.supnum
    and ri.invnum = rl.invnum
  inner
   join invdtl id
     on rl.rcvkey = id.rcvkey
  where rt.rcvtrk_stat in ('EX', 'CI')
  group by rt.trknum,
        id.prtnum
 having count(distinct id.ftpcod) > 1] catch(-1403)
|
if (@? = 0)
{
    [select invdtl.prtnum,
            invdtl.ftpcod,
            count(invdtl.dtlnum)
       from invlod
       join invsub
         on invlod.lodnum = invsub.lodnum
       join invdtl
         on invsub.subnum = invdtl.subnum
      where invlod.stoloc = @trknum
        and invdtl.prtnum = @prtnum
        and rownum < 2
      group by invdtl.prtnum,
            invdtl.ftpcod
      order by count(invdtl.dtlnum) desc]
    |
    [update invdtl
        set invdtl.ftpcod = @ftpcod
       from invdtl
       join invsub
         on invdtl.subnum = invsub.subnum
       join invlod
         on invlod.lodnum = invsub.lodnum
      where invlod.stoloc = @trknum
        and invdtl.prtnum = @prtnum
        and invdtl.ftpcod != @ftpcod]
},,,0,,0,900,
USR_SORTER_RECIRC_ALERT,,Pack Sorter Recirculation Email Alert,1,timer,publish data
 where uc_scan_count_threshold = 2
   and uc_recirc_time_window = 30
   and wh_id = 'DC03'
|
publish data
 where uc_recirc_date = sysdate - (@uc_recirc_time_window / 1440)
|
[select carton_id,
        count(*) as uc_scan_count
   from dss_wcs_packsorter_trn
  where scan_time > to_date(@uc_recirc_date)
  group by carton_id
 having count(*) >= @uc_scan_count_threshold] catch(-1403)
|
if (@? = 0)
{
    /*Pull semi colon seperated list of email addresses to send alert to*/
    [select rtstr1 uc_email_list
       from poldat_view
      where polvar = 'PACK-SORTER'
        and polval = 'EMS-EMAIL_LIST'
        and wh_id = @wh_id] catch(-1403)
    |
    if (@? = 0)
    {
        [select rtstr1 as mail_from,
        rtstr2 as hostname
           from poldat_view
          where polcod = 'DSS-ARITZIA'
            and polvar = 'ASN-FOOTPRINT-MATCHING'
            and polval = 'EMS-EMAIL-HEADERINFO'
            and wh_id = @wh_id] catch(-1403)
        |
        if (@? = 0)
        {
            publish data
             where mail_from = @mail_from
               and hostname = @hostname
               and subject = 'DC03 Pack Sorter Carton Recirculation'
               and uc_email_message = 'Multiple recirculations of Carton: ' || @carton_id || ' through Pack Sorter'
            |
            send email
             where message = @uc_email_message
               and send_to = @uc_email_list
               and mail_from = @mail_from
               and subject = @subject
               and hostname = @hostname
        }
    }
};,,,0,,0,900,
USR_WCS_DEFERRED_LOGGING,,USR_WCS_DEFERRED_LOGGING,0,cron,execute deferred commands where exec_typ = 'WCS',,,0,0 * * * * ?,,,
USR-ASN-FTPCOD-FIX,,Aritzia Correct ASN Partial Ftpcods,0,timer,list warehouses
|
[select rt.trknum,
        id.prtnum,
        count(distinct id.ftpcod) as ftpcod_count
   from rcvtrk rt
  inner
   join rcvinv ri
     on rt.trknum = ri.trknum
  inner
   join rcvlin rl
     on ri.trknum = rl.trknum
    and ri.supnum = rl.supnum
    and ri.invnum = rl.invnum
  inner
   join invdtl id
     on rl.rcvkey = id.rcvkey
  where rt.rcvtrk_stat in ('EX', 'CI')
    and rt.wh_id = @wh_id
  group by rt.trknum,
        id.prtnum
 having count(distinct id.ftpcod) > 1] catch(-1403)
|
if (@? = 0)
{
    [select invdtl.prtnum,
            invdtl.ftpcod,
            count(invdtl.dtlnum)
       from invlod
       join invsub
         on invlod.lodnum = invsub.lodnum
       join invdtl
         on invsub.subnum = invdtl.subnum
      where invlod.stoloc = @trknum
        and invdtl.prtnum = @prtnum
        and rownum < 2
      group by invdtl.prtnum,
            invdtl.ftpcod
      order by count(invdtl.dtlnum) desc]
    |
    [update invdtl
        set invdtl.ftpcod = @ftpcod
       from invdtl
       join invsub
         on invdtl.subnum = invsub.subnum
       join invlod
         on invlod.lodnum = invsub.lodnum
      where invlod.stoloc = @trknum
        and invdtl.prtnum = @prtnum
        and invdtl.ftpcod != @ftpcod]
},,,0,,0,900,
USR_DEFERRED-EXECUTION-INV-RCV,,Aritzia Deferred Execution - Receieve Complete,1,timer,execute deferred commands where comflg = 1 and exec_typ = 'RCV',$LESDIR/log/DeferredExcecutionRcvComplete.log,,0,,60,60,usr_data
